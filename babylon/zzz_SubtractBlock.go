// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SubtractBlock represents a babylon.js SubtractBlock.
// Block used to subtract 2 vectors
type SubtractBlock struct {
	*NodeMaterialBlock
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (s *SubtractBlock) JSObject() js.Value { return s.p }

// SubtractBlock returns a SubtractBlock JavaScript class.
func (ba *Babylon) SubtractBlock() *SubtractBlock {
	p := ba.ctx.Get("SubtractBlock")
	return SubtractBlockFromJSObject(p, ba.ctx)
}

// SubtractBlockFromJSObject returns a wrapped SubtractBlock JavaScript class.
func SubtractBlockFromJSObject(p js.Value, ctx js.Value) *SubtractBlock {
	return &SubtractBlock{NodeMaterialBlock: NodeMaterialBlockFromJSObject(p, ctx), ctx: ctx}
}

// NewSubtractBlock returns a new SubtractBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.subtractblock
func (ba *Babylon) NewSubtractBlock(name string) *SubtractBlock {
	p := ba.ctx.Get("SubtractBlock").New(name)
	return SubtractBlockFromJSObject(p, ba.ctx)
}

// TODO: methods
