// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// VRDistortionCorrectionPostProcess represents a babylon.js VRDistortionCorrectionPostProcess.
// VRDistortionCorrectionPostProcess used for mobile VR
type VRDistortionCorrectionPostProcess struct {
	*PostProcess
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (v *VRDistortionCorrectionPostProcess) JSObject() js.Value { return v.p }

// VRDistortionCorrectionPostProcess returns a VRDistortionCorrectionPostProcess JavaScript class.
func (ba *Babylon) VRDistortionCorrectionPostProcess() *VRDistortionCorrectionPostProcess {
	p := ba.ctx.Get("VRDistortionCorrectionPostProcess")
	return VRDistortionCorrectionPostProcessFromJSObject(p, ba.ctx)
}

// VRDistortionCorrectionPostProcessFromJSObject returns a wrapped VRDistortionCorrectionPostProcess JavaScript class.
func VRDistortionCorrectionPostProcessFromJSObject(p js.Value, ctx js.Value) *VRDistortionCorrectionPostProcess {
	return &VRDistortionCorrectionPostProcess{PostProcess: PostProcessFromJSObject(p, ctx), ctx: ctx}
}

// VRDistortionCorrectionPostProcessArrayToJSArray returns a JavaScript Array for the wrapped array.
func VRDistortionCorrectionPostProcessArrayToJSArray(array []*VRDistortionCorrectionPostProcess) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewVRDistortionCorrectionPostProcess returns a new VRDistortionCorrectionPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.vrdistortioncorrectionpostprocess#constructor
func (ba *Babylon) NewVRDistortionCorrectionPostProcess(name string, camera *Camera, isRightEye bool, vrMetrics *VRCameraMetrics) *VRDistortionCorrectionPostProcess {

	args := make([]interface{}, 0, 4+0)

	args = append(args, name)
	args = append(args, camera.JSObject())
	args = append(args, isRightEye)
	args = append(args, vrMetrics.JSObject())

	p := ba.ctx.Get("VRDistortionCorrectionPostProcess").New(args...)
	return VRDistortionCorrectionPostProcessFromJSObject(p, ba.ctx)
}
