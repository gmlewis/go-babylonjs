// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// AnaglyphArcRotateCamera represents a babylon.js AnaglyphArcRotateCamera.
// Camera used to simulate anaglyphic rendering (based on ArcRotateCamera)
//
// See: http://doc.babylonjs.com/features/cameras#anaglyph-cameras
type AnaglyphArcRotateCamera struct {
	*ArcRotateCamera
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (a *AnaglyphArcRotateCamera) JSObject() js.Value { return a.p }

// AnaglyphArcRotateCamera returns a AnaglyphArcRotateCamera JavaScript class.
func (ba *Babylon) AnaglyphArcRotateCamera() *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera")
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// AnaglyphArcRotateCameraFromJSObject returns a wrapped AnaglyphArcRotateCamera JavaScript class.
func AnaglyphArcRotateCameraFromJSObject(p js.Value, ctx js.Value) *AnaglyphArcRotateCamera {
	return &AnaglyphArcRotateCamera{ArcRotateCamera: ArcRotateCameraFromJSObject(p, ctx), ctx: ctx}
}

// NewAnaglyphArcRotateCamera returns a new AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera
func (ba *Babylon) NewAnaglyphArcRotateCamera(name string, alpha float64, beta float64, radius float64, target *Vector3, interaxialDistance float64, scene *Scene) *AnaglyphArcRotateCamera {

	args := make([]interface{}, 0, 7+0)

	args = append(args, name)
	args = append(args, alpha)
	args = append(args, beta)
	args = append(args, radius)
	args = append(args, target.JSObject())
	args = append(args, interaxialDistance)
	args = append(args, scene.JSObject())

	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(args...)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// AnaglyphArcRotateCameraAttachControlOpts contains optional parameters for AnaglyphArcRotateCamera.AttachControl.
type AnaglyphArcRotateCameraAttachControlOpts struct {
	NoPreventDefault   *bool
	UseCtrlForPanning  *bool
	PanningMouseButton *float64
}

// AttachControl calls the AttachControl method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#attachcontrol
func (a *AnaglyphArcRotateCamera) AttachControl(element js.Value, opts *AnaglyphArcRotateCameraAttachControlOpts) {
	if opts == nil {
		opts = &AnaglyphArcRotateCameraAttachControlOpts{}
	}

	args := make([]interface{}, 0, 1+3)

	args = append(args, element)

	if opts.NoPreventDefault == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.NoPreventDefault)
	}
	if opts.UseCtrlForPanning == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.UseCtrlForPanning)
	}
	if opts.PanningMouseButton == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.PanningMouseButton)
	}

	a.p.Call("attachControl", args...)
}

// CreateRigCamera calls the CreateRigCamera method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#createrigcamera
func (a *AnaglyphArcRotateCamera) CreateRigCamera(name string, cameraIndex float64) *Camera {

	args := make([]interface{}, 0, 2+0)

	args = append(args, name)
	args = append(args, cameraIndex)

	retVal := a.p.Call("createRigCamera", args...)
	return CameraFromJSObject(retVal, a.ctx)
}

// DetachControl calls the DetachControl method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#detachcontrol
func (a *AnaglyphArcRotateCamera) DetachControl(element js.Value) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, element)

	a.p.Call("detachControl", args...)
}

// Dispose calls the Dispose method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#dispose
func (a *AnaglyphArcRotateCamera) Dispose() {

	args := make([]interface{}, 0, 0+0)

	a.p.Call("dispose", args...)
}

// AnaglyphArcRotateCameraFocusOnOpts contains optional parameters for AnaglyphArcRotateCamera.FocusOn.
type AnaglyphArcRotateCameraFocusOnOpts struct {
	DoNotUpdateMaxZ *bool
}

// FocusOn calls the FocusOn method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#focuson
func (a *AnaglyphArcRotateCamera) FocusOn(meshesOrMinMaxVectorAndDistance *AbstractMesh, opts *AnaglyphArcRotateCameraFocusOnOpts) {
	if opts == nil {
		opts = &AnaglyphArcRotateCameraFocusOnOpts{}
	}

	args := make([]interface{}, 0, 1+1)

	args = append(args, meshesOrMinMaxVectorAndDistance.JSObject())

	if opts.DoNotUpdateMaxZ == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DoNotUpdateMaxZ)
	}

	a.p.Call("focusOn", args...)
}

// GetClassName calls the GetClassName method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#getclassname
func (a *AnaglyphArcRotateCamera) GetClassName() string {

	args := make([]interface{}, 0, 0+0)

	retVal := a.p.Call("getClassName", args...)
	return retVal.String()
}

// GetFrontPosition calls the GetFrontPosition method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#getfrontposition
func (a *AnaglyphArcRotateCamera) GetFrontPosition(distance float64) *Vector3 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, distance)

	retVal := a.p.Call("getFrontPosition", args...)
	return Vector3FromJSObject(retVal, a.ctx)
}

// GetTarget calls the GetTarget method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#gettarget
func (a *AnaglyphArcRotateCamera) GetTarget() *Vector3 {

	args := make([]interface{}, 0, 0+0)

	retVal := a.p.Call("getTarget", args...)
	return Vector3FromJSObject(retVal, a.ctx)
}

// RebuildAnglesAndRadius calls the RebuildAnglesAndRadius method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#rebuildanglesandradius
func (a *AnaglyphArcRotateCamera) RebuildAnglesAndRadius() {

	args := make([]interface{}, 0, 0+0)

	a.p.Call("rebuildAnglesAndRadius", args...)
}

// SetMatUp calls the SetMatUp method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#setmatup
func (a *AnaglyphArcRotateCamera) SetMatUp() {

	args := make([]interface{}, 0, 0+0)

	a.p.Call("setMatUp", args...)
}

// SetPosition calls the SetPosition method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#setposition
func (a *AnaglyphArcRotateCamera) SetPosition(position *Vector3) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, position.JSObject())

	a.p.Call("setPosition", args...)
}

// AnaglyphArcRotateCameraSetTargetOpts contains optional parameters for AnaglyphArcRotateCamera.SetTarget.
type AnaglyphArcRotateCameraSetTargetOpts struct {
	ToBoundingCenter  *bool
	AllowSamePosition *bool
}

// SetTarget calls the SetTarget method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#settarget
func (a *AnaglyphArcRotateCamera) SetTarget(target *AbstractMesh, opts *AnaglyphArcRotateCameraSetTargetOpts) {
	if opts == nil {
		opts = &AnaglyphArcRotateCameraSetTargetOpts{}
	}

	args := make([]interface{}, 0, 1+2)

	args = append(args, target.JSObject())

	if opts.ToBoundingCenter == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.ToBoundingCenter)
	}
	if opts.AllowSamePosition == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.AllowSamePosition)
	}

	a.p.Call("setTarget", args...)
}

// StoreState calls the StoreState method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#storestate
func (a *AnaglyphArcRotateCamera) StoreState() *Camera {

	args := make([]interface{}, 0, 0+0)

	retVal := a.p.Call("storeState", args...)
	return CameraFromJSObject(retVal, a.ctx)
}

// AnaglyphArcRotateCameraZoomOnOpts contains optional parameters for AnaglyphArcRotateCamera.ZoomOn.
type AnaglyphArcRotateCameraZoomOnOpts struct {
	Meshes          *AbstractMesh
	DoNotUpdateMaxZ *bool
}

// ZoomOn calls the ZoomOn method on the AnaglyphArcRotateCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#zoomon
func (a *AnaglyphArcRotateCamera) ZoomOn(opts *AnaglyphArcRotateCameraZoomOnOpts) {
	if opts == nil {
		opts = &AnaglyphArcRotateCameraZoomOnOpts{}
	}

	args := make([]interface{}, 0, 0+2)

	if opts.Meshes == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Meshes.JSObject())
	}
	if opts.DoNotUpdateMaxZ == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DoNotUpdateMaxZ)
	}

	a.p.Call("zoomOn", args...)
}

/*

// AllowUpsideDown returns the AllowUpsideDown property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#allowupsidedown
func (a *AnaglyphArcRotateCamera) AllowUpsideDown(allowUpsideDown bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(allowUpsideDown)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetAllowUpsideDown sets the AllowUpsideDown property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#allowupsidedown
func (a *AnaglyphArcRotateCamera) SetAllowUpsideDown(allowUpsideDown bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(allowUpsideDown)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// Alpha returns the Alpha property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#alpha
func (a *AnaglyphArcRotateCamera) Alpha(alpha float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(alpha)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetAlpha sets the Alpha property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#alpha
func (a *AnaglyphArcRotateCamera) SetAlpha(alpha float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(alpha)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// AngularSensibilityX returns the AngularSensibilityX property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#angularsensibilityx
func (a *AnaglyphArcRotateCamera) AngularSensibilityX(angularSensibilityX float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(angularSensibilityX)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetAngularSensibilityX sets the AngularSensibilityX property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#angularsensibilityx
func (a *AnaglyphArcRotateCamera) SetAngularSensibilityX(angularSensibilityX float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(angularSensibilityX)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// AngularSensibilityY returns the AngularSensibilityY property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#angularsensibilityy
func (a *AnaglyphArcRotateCamera) AngularSensibilityY(angularSensibilityY float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(angularSensibilityY)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetAngularSensibilityY sets the AngularSensibilityY property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#angularsensibilityy
func (a *AnaglyphArcRotateCamera) SetAngularSensibilityY(angularSensibilityY float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(angularSensibilityY)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// AutoRotationBehavior returns the AutoRotationBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#autorotationbehavior
func (a *AnaglyphArcRotateCamera) AutoRotationBehavior(autoRotationBehavior *AutoRotationBehavior) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(autoRotationBehavior.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetAutoRotationBehavior sets the AutoRotationBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#autorotationbehavior
func (a *AnaglyphArcRotateCamera) SetAutoRotationBehavior(autoRotationBehavior *AutoRotationBehavior) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(autoRotationBehavior.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// Beta returns the Beta property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#beta
func (a *AnaglyphArcRotateCamera) Beta(beta float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(beta)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetBeta sets the Beta property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#beta
func (a *AnaglyphArcRotateCamera) SetBeta(beta float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(beta)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// BouncingBehavior returns the BouncingBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#bouncingbehavior
func (a *AnaglyphArcRotateCamera) BouncingBehavior(bouncingBehavior *BouncingBehavior) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(bouncingBehavior.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetBouncingBehavior sets the BouncingBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#bouncingbehavior
func (a *AnaglyphArcRotateCamera) SetBouncingBehavior(bouncingBehavior *BouncingBehavior) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(bouncingBehavior.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// CameraDirection returns the CameraDirection property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#cameradirection
func (a *AnaglyphArcRotateCamera) CameraDirection(cameraDirection *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(cameraDirection.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetCameraDirection sets the CameraDirection property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#cameradirection
func (a *AnaglyphArcRotateCamera) SetCameraDirection(cameraDirection *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(cameraDirection.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// CameraRotation returns the CameraRotation property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#camerarotation
func (a *AnaglyphArcRotateCamera) CameraRotation(cameraRotation *Vector2) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(cameraRotation.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetCameraRotation sets the CameraRotation property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#camerarotation
func (a *AnaglyphArcRotateCamera) SetCameraRotation(cameraRotation *Vector2) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(cameraRotation.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// CheckCollisions returns the CheckCollisions property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#checkcollisions
func (a *AnaglyphArcRotateCamera) CheckCollisions(checkCollisions bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(checkCollisions)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetCheckCollisions sets the CheckCollisions property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#checkcollisions
func (a *AnaglyphArcRotateCamera) SetCheckCollisions(checkCollisions bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(checkCollisions)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// CollisionRadius returns the CollisionRadius property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#collisionradius
func (a *AnaglyphArcRotateCamera) CollisionRadius(collisionRadius *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(collisionRadius.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetCollisionRadius sets the CollisionRadius property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#collisionradius
func (a *AnaglyphArcRotateCamera) SetCollisionRadius(collisionRadius *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(collisionRadius.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// FramingBehavior returns the FramingBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#framingbehavior
func (a *AnaglyphArcRotateCamera) FramingBehavior(framingBehavior *FramingBehavior) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(framingBehavior.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetFramingBehavior sets the FramingBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#framingbehavior
func (a *AnaglyphArcRotateCamera) SetFramingBehavior(framingBehavior *FramingBehavior) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(framingBehavior.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// InertialAlphaOffset returns the InertialAlphaOffset property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialalphaoffset
func (a *AnaglyphArcRotateCamera) InertialAlphaOffset(inertialAlphaOffset float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialAlphaOffset)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetInertialAlphaOffset sets the InertialAlphaOffset property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialalphaoffset
func (a *AnaglyphArcRotateCamera) SetInertialAlphaOffset(inertialAlphaOffset float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialAlphaOffset)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// InertialBetaOffset returns the InertialBetaOffset property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialbetaoffset
func (a *AnaglyphArcRotateCamera) InertialBetaOffset(inertialBetaOffset float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialBetaOffset)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetInertialBetaOffset sets the InertialBetaOffset property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialbetaoffset
func (a *AnaglyphArcRotateCamera) SetInertialBetaOffset(inertialBetaOffset float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialBetaOffset)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// InertialPanningX returns the InertialPanningX property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialpanningx
func (a *AnaglyphArcRotateCamera) InertialPanningX(inertialPanningX float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialPanningX)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetInertialPanningX sets the InertialPanningX property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialpanningx
func (a *AnaglyphArcRotateCamera) SetInertialPanningX(inertialPanningX float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialPanningX)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// InertialPanningY returns the InertialPanningY property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialpanningy
func (a *AnaglyphArcRotateCamera) InertialPanningY(inertialPanningY float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialPanningY)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetInertialPanningY sets the InertialPanningY property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialpanningy
func (a *AnaglyphArcRotateCamera) SetInertialPanningY(inertialPanningY float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialPanningY)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// InertialRadiusOffset returns the InertialRadiusOffset property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialradiusoffset
func (a *AnaglyphArcRotateCamera) InertialRadiusOffset(inertialRadiusOffset float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialRadiusOffset)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetInertialRadiusOffset sets the InertialRadiusOffset property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inertialradiusoffset
func (a *AnaglyphArcRotateCamera) SetInertialRadiusOffset(inertialRadiusOffset float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inertialRadiusOffset)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// Inputs returns the Inputs property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inputs
func (a *AnaglyphArcRotateCamera) Inputs(inputs *ArcRotateCameraInputsManager) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inputs.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetInputs sets the Inputs property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#inputs
func (a *AnaglyphArcRotateCamera) SetInputs(inputs *ArcRotateCameraInputsManager) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(inputs.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// KeysDown returns the KeysDown property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#keysdown
func (a *AnaglyphArcRotateCamera) KeysDown(keysDown float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(keysDown)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetKeysDown sets the KeysDown property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#keysdown
func (a *AnaglyphArcRotateCamera) SetKeysDown(keysDown float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(keysDown)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// KeysLeft returns the KeysLeft property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#keysleft
func (a *AnaglyphArcRotateCamera) KeysLeft(keysLeft float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(keysLeft)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetKeysLeft sets the KeysLeft property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#keysleft
func (a *AnaglyphArcRotateCamera) SetKeysLeft(keysLeft float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(keysLeft)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// KeysRight returns the KeysRight property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#keysright
func (a *AnaglyphArcRotateCamera) KeysRight(keysRight float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(keysRight)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetKeysRight sets the KeysRight property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#keysright
func (a *AnaglyphArcRotateCamera) SetKeysRight(keysRight float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(keysRight)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// KeysUp returns the KeysUp property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#keysup
func (a *AnaglyphArcRotateCamera) KeysUp(keysUp float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(keysUp)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetKeysUp sets the KeysUp property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#keysup
func (a *AnaglyphArcRotateCamera) SetKeysUp(keysUp float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(keysUp)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// LockedTarget returns the LockedTarget property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#lockedtarget
func (a *AnaglyphArcRotateCamera) LockedTarget(lockedTarget interface{}) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(lockedTarget)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetLockedTarget sets the LockedTarget property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#lockedtarget
func (a *AnaglyphArcRotateCamera) SetLockedTarget(lockedTarget interface{}) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(lockedTarget)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// LowerAlphaLimit returns the LowerAlphaLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#loweralphalimit
func (a *AnaglyphArcRotateCamera) LowerAlphaLimit(lowerAlphaLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(lowerAlphaLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetLowerAlphaLimit sets the LowerAlphaLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#loweralphalimit
func (a *AnaglyphArcRotateCamera) SetLowerAlphaLimit(lowerAlphaLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(lowerAlphaLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// LowerBetaLimit returns the LowerBetaLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#lowerbetalimit
func (a *AnaglyphArcRotateCamera) LowerBetaLimit(lowerBetaLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(lowerBetaLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetLowerBetaLimit sets the LowerBetaLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#lowerbetalimit
func (a *AnaglyphArcRotateCamera) SetLowerBetaLimit(lowerBetaLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(lowerBetaLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// LowerRadiusLimit returns the LowerRadiusLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#lowerradiuslimit
func (a *AnaglyphArcRotateCamera) LowerRadiusLimit(lowerRadiusLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(lowerRadiusLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetLowerRadiusLimit sets the LowerRadiusLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#lowerradiuslimit
func (a *AnaglyphArcRotateCamera) SetLowerRadiusLimit(lowerRadiusLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(lowerRadiusLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// NoRotationConstraint returns the NoRotationConstraint property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#norotationconstraint
func (a *AnaglyphArcRotateCamera) NoRotationConstraint(noRotationConstraint bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(noRotationConstraint)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetNoRotationConstraint sets the NoRotationConstraint property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#norotationconstraint
func (a *AnaglyphArcRotateCamera) SetNoRotationConstraint(noRotationConstraint bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(noRotationConstraint)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// OnCollide returns the OnCollide property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#oncollide
func (a *AnaglyphArcRotateCamera) OnCollide(onCollide func()) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(onCollide)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetOnCollide sets the OnCollide property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#oncollide
func (a *AnaglyphArcRotateCamera) SetOnCollide(onCollide func()) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(onCollide)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// OnMeshTargetChangedObservable returns the OnMeshTargetChangedObservable property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#onmeshtargetchangedobservable
func (a *AnaglyphArcRotateCamera) OnMeshTargetChangedObservable(onMeshTargetChangedObservable *Observable) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(onMeshTargetChangedObservable.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetOnMeshTargetChangedObservable sets the OnMeshTargetChangedObservable property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#onmeshtargetchangedobservable
func (a *AnaglyphArcRotateCamera) SetOnMeshTargetChangedObservable(onMeshTargetChangedObservable *Observable) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(onMeshTargetChangedObservable.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// PanningAxis returns the PanningAxis property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panningaxis
func (a *AnaglyphArcRotateCamera) PanningAxis(panningAxis *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningAxis.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetPanningAxis sets the PanningAxis property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panningaxis
func (a *AnaglyphArcRotateCamera) SetPanningAxis(panningAxis *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningAxis.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// PanningDistanceLimit returns the PanningDistanceLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panningdistancelimit
func (a *AnaglyphArcRotateCamera) PanningDistanceLimit(panningDistanceLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningDistanceLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetPanningDistanceLimit sets the PanningDistanceLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panningdistancelimit
func (a *AnaglyphArcRotateCamera) SetPanningDistanceLimit(panningDistanceLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningDistanceLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// PanningInertia returns the PanningInertia property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panninginertia
func (a *AnaglyphArcRotateCamera) PanningInertia(panningInertia float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningInertia)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetPanningInertia sets the PanningInertia property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panninginertia
func (a *AnaglyphArcRotateCamera) SetPanningInertia(panningInertia float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningInertia)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// PanningOriginTarget returns the PanningOriginTarget property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panningorigintarget
func (a *AnaglyphArcRotateCamera) PanningOriginTarget(panningOriginTarget *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningOriginTarget.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetPanningOriginTarget sets the PanningOriginTarget property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panningorigintarget
func (a *AnaglyphArcRotateCamera) SetPanningOriginTarget(panningOriginTarget *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningOriginTarget.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// PanningSensibility returns the PanningSensibility property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panningsensibility
func (a *AnaglyphArcRotateCamera) PanningSensibility(panningSensibility float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningSensibility)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetPanningSensibility sets the PanningSensibility property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#panningsensibility
func (a *AnaglyphArcRotateCamera) SetPanningSensibility(panningSensibility float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(panningSensibility)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// PinchDeltaPercentage returns the PinchDeltaPercentage property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#pinchdeltapercentage
func (a *AnaglyphArcRotateCamera) PinchDeltaPercentage(pinchDeltaPercentage float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(pinchDeltaPercentage)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetPinchDeltaPercentage sets the PinchDeltaPercentage property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#pinchdeltapercentage
func (a *AnaglyphArcRotateCamera) SetPinchDeltaPercentage(pinchDeltaPercentage float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(pinchDeltaPercentage)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// PinchPrecision returns the PinchPrecision property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#pinchprecision
func (a *AnaglyphArcRotateCamera) PinchPrecision(pinchPrecision float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(pinchPrecision)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetPinchPrecision sets the PinchPrecision property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#pinchprecision
func (a *AnaglyphArcRotateCamera) SetPinchPrecision(pinchPrecision float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(pinchPrecision)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// PinchToPanMaxDistance returns the PinchToPanMaxDistance property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#pinchtopanmaxdistance
func (a *AnaglyphArcRotateCamera) PinchToPanMaxDistance(pinchToPanMaxDistance float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(pinchToPanMaxDistance)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetPinchToPanMaxDistance sets the PinchToPanMaxDistance property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#pinchtopanmaxdistance
func (a *AnaglyphArcRotateCamera) SetPinchToPanMaxDistance(pinchToPanMaxDistance float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(pinchToPanMaxDistance)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// Position returns the Position property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#position
func (a *AnaglyphArcRotateCamera) Position(position *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(position.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetPosition sets the Position property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#position
func (a *AnaglyphArcRotateCamera) SetPosition(position *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(position.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// Radius returns the Radius property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#radius
func (a *AnaglyphArcRotateCamera) Radius(radius float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(radius)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetRadius sets the Radius property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#radius
func (a *AnaglyphArcRotateCamera) SetRadius(radius float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(radius)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// Rotation returns the Rotation property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#rotation
func (a *AnaglyphArcRotateCamera) Rotation(rotation *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(rotation.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetRotation sets the Rotation property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#rotation
func (a *AnaglyphArcRotateCamera) SetRotation(rotation *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(rotation.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// RotationQuaternion returns the RotationQuaternion property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#rotationquaternion
func (a *AnaglyphArcRotateCamera) RotationQuaternion(rotationQuaternion *Quaternion) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(rotationQuaternion.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetRotationQuaternion sets the RotationQuaternion property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#rotationquaternion
func (a *AnaglyphArcRotateCamera) SetRotationQuaternion(rotationQuaternion *Quaternion) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(rotationQuaternion.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// Speed returns the Speed property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#speed
func (a *AnaglyphArcRotateCamera) Speed(speed float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(speed)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetSpeed sets the Speed property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#speed
func (a *AnaglyphArcRotateCamera) SetSpeed(speed float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(speed)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// Target returns the Target property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#target
func (a *AnaglyphArcRotateCamera) Target(target *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(target.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetTarget sets the Target property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#target
func (a *AnaglyphArcRotateCamera) SetTarget(target *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(target.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// TargetScreenOffset returns the TargetScreenOffset property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#targetscreenoffset
func (a *AnaglyphArcRotateCamera) TargetScreenOffset(targetScreenOffset *Vector2) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(targetScreenOffset.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetTargetScreenOffset sets the TargetScreenOffset property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#targetscreenoffset
func (a *AnaglyphArcRotateCamera) SetTargetScreenOffset(targetScreenOffset *Vector2) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(targetScreenOffset.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// UpVector returns the UpVector property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#upvector
func (a *AnaglyphArcRotateCamera) UpVector(upVector *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(upVector.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetUpVector sets the UpVector property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#upvector
func (a *AnaglyphArcRotateCamera) SetUpVector(upVector *Vector3) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(upVector.JSObject())
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// UpdateUpVectorFromRotation returns the UpdateUpVectorFromRotation property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#updateupvectorfromrotation
func (a *AnaglyphArcRotateCamera) UpdateUpVectorFromRotation(updateUpVectorFromRotation bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(updateUpVectorFromRotation)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetUpdateUpVectorFromRotation sets the UpdateUpVectorFromRotation property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#updateupvectorfromrotation
func (a *AnaglyphArcRotateCamera) SetUpdateUpVectorFromRotation(updateUpVectorFromRotation bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(updateUpVectorFromRotation)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// UpperAlphaLimit returns the UpperAlphaLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#upperalphalimit
func (a *AnaglyphArcRotateCamera) UpperAlphaLimit(upperAlphaLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(upperAlphaLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetUpperAlphaLimit sets the UpperAlphaLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#upperalphalimit
func (a *AnaglyphArcRotateCamera) SetUpperAlphaLimit(upperAlphaLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(upperAlphaLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// UpperBetaLimit returns the UpperBetaLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#upperbetalimit
func (a *AnaglyphArcRotateCamera) UpperBetaLimit(upperBetaLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(upperBetaLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetUpperBetaLimit sets the UpperBetaLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#upperbetalimit
func (a *AnaglyphArcRotateCamera) SetUpperBetaLimit(upperBetaLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(upperBetaLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// UpperRadiusLimit returns the UpperRadiusLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#upperradiuslimit
func (a *AnaglyphArcRotateCamera) UpperRadiusLimit(upperRadiusLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(upperRadiusLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetUpperRadiusLimit sets the UpperRadiusLimit property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#upperradiuslimit
func (a *AnaglyphArcRotateCamera) SetUpperRadiusLimit(upperRadiusLimit float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(upperRadiusLimit)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// UseAutoRotationBehavior returns the UseAutoRotationBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#useautorotationbehavior
func (a *AnaglyphArcRotateCamera) UseAutoRotationBehavior(useAutoRotationBehavior bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(useAutoRotationBehavior)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetUseAutoRotationBehavior sets the UseAutoRotationBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#useautorotationbehavior
func (a *AnaglyphArcRotateCamera) SetUseAutoRotationBehavior(useAutoRotationBehavior bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(useAutoRotationBehavior)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// UseBouncingBehavior returns the UseBouncingBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#usebouncingbehavior
func (a *AnaglyphArcRotateCamera) UseBouncingBehavior(useBouncingBehavior bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(useBouncingBehavior)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetUseBouncingBehavior sets the UseBouncingBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#usebouncingbehavior
func (a *AnaglyphArcRotateCamera) SetUseBouncingBehavior(useBouncingBehavior bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(useBouncingBehavior)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// UseFramingBehavior returns the UseFramingBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#useframingbehavior
func (a *AnaglyphArcRotateCamera) UseFramingBehavior(useFramingBehavior bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(useFramingBehavior)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetUseFramingBehavior sets the UseFramingBehavior property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#useframingbehavior
func (a *AnaglyphArcRotateCamera) SetUseFramingBehavior(useFramingBehavior bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(useFramingBehavior)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// UseInputToRestoreState returns the UseInputToRestoreState property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#useinputtorestorestate
func (a *AnaglyphArcRotateCamera) UseInputToRestoreState(useInputToRestoreState bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(useInputToRestoreState)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetUseInputToRestoreState sets the UseInputToRestoreState property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#useinputtorestorestate
func (a *AnaglyphArcRotateCamera) SetUseInputToRestoreState(useInputToRestoreState bool) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(useInputToRestoreState)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// WheelDeltaPercentage returns the WheelDeltaPercentage property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#wheeldeltapercentage
func (a *AnaglyphArcRotateCamera) WheelDeltaPercentage(wheelDeltaPercentage float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(wheelDeltaPercentage)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetWheelDeltaPercentage sets the WheelDeltaPercentage property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#wheeldeltapercentage
func (a *AnaglyphArcRotateCamera) SetWheelDeltaPercentage(wheelDeltaPercentage float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(wheelDeltaPercentage)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// WheelPrecision returns the WheelPrecision property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#wheelprecision
func (a *AnaglyphArcRotateCamera) WheelPrecision(wheelPrecision float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(wheelPrecision)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetWheelPrecision sets the WheelPrecision property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#wheelprecision
func (a *AnaglyphArcRotateCamera) SetWheelPrecision(wheelPrecision float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(wheelPrecision)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// ZoomOnFactor returns the ZoomOnFactor property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#zoomonfactor
func (a *AnaglyphArcRotateCamera) ZoomOnFactor(zoomOnFactor float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(zoomOnFactor)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

// SetZoomOnFactor sets the ZoomOnFactor property of class AnaglyphArcRotateCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglypharcrotatecamera#zoomonfactor
func (a *AnaglyphArcRotateCamera) SetZoomOnFactor(zoomOnFactor float64) *AnaglyphArcRotateCamera {
	p := ba.ctx.Get("AnaglyphArcRotateCamera").New(zoomOnFactor)
	return AnaglyphArcRotateCameraFromJSObject(p, ba.ctx)
}

*/
