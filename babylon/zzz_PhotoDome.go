// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PhotoDome represents a babylon.js PhotoDome.
// Display a 360 degree photo on an approximately spherical surface, useful for VR applications or skyboxes.
// As a subclass of TransformNode, this allow parenting to the camera with different locations in the scene.
// This class achieves its effect with a Texture and a correctly configured BackgroundMaterial on an inverted sphere.
// Potential additions to this helper include zoom and and non-infinite distance rendering effects.
type PhotoDome struct{ *TransformNode }

// JSObject returns the underlying js.Value.
func (p *PhotoDome) JSObject() js.Value { return p.p }

// PhotoDome returns a PhotoDome JavaScript class.
func (b *Babylon) PhotoDome() *PhotoDome {
	p := b.ctx.Get("PhotoDome")
	return PhotoDomeFromJSObject(p)
}

// PhotoDomeFromJSObject returns a wrapped PhotoDome JavaScript class.
func PhotoDomeFromJSObject(p js.Value) *PhotoDome {
	return &PhotoDome{TransformNodeFromJSObject(p)}
}

// NewPhotoDome returns a new PhotoDome object.
//
// https://doc.babylonjs.com/api/classes/babylon.photodome
func (b *Babylon) NewPhotoDome(todo parameters) *PhotoDome {
	p := b.ctx.Get("PhotoDome").New(todo)
	return PhotoDomeFromJSObject(p)
}

// TODO: methods
