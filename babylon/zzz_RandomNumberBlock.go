// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// RandomNumberBlock represents a babylon.js RandomNumberBlock.
// Block used to get a random number
type RandomNumberBlock struct {
	*NodeMaterialBlock
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (r *RandomNumberBlock) JSObject() js.Value { return r.p }

// RandomNumberBlock returns a RandomNumberBlock JavaScript class.
func (ba *Babylon) RandomNumberBlock() *RandomNumberBlock {
	p := ba.ctx.Get("RandomNumberBlock")
	return RandomNumberBlockFromJSObject(p, ba.ctx)
}

// RandomNumberBlockFromJSObject returns a wrapped RandomNumberBlock JavaScript class.
func RandomNumberBlockFromJSObject(p js.Value, ctx js.Value) *RandomNumberBlock {
	return &RandomNumberBlock{NodeMaterialBlock: NodeMaterialBlockFromJSObject(p, ctx), ctx: ctx}
}

// RandomNumberBlockArrayToJSArray returns a JavaScript Array for the wrapped array.
func RandomNumberBlockArrayToJSArray(array []*RandomNumberBlock) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewRandomNumberBlock returns a new RandomNumberBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.randomnumberblock#constructor
func (ba *Babylon) NewRandomNumberBlock(name string) *RandomNumberBlock {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	p := ba.ctx.Get("RandomNumberBlock").New(args...)
	return RandomNumberBlockFromJSObject(p, ba.ctx)
}

// GetClassName calls the GetClassName method on the RandomNumberBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.randomnumberblock#getclassname
func (r *RandomNumberBlock) GetClassName() string {

	retVal := r.p.Call("getClassName")
	return retVal.String()
}

// Output returns the Output property of class RandomNumberBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.randomnumberblock#output
func (r *RandomNumberBlock) Output() *NodeMaterialConnectionPoint {
	retVal := r.p.Get("output")
	return NodeMaterialConnectionPointFromJSObject(retVal, r.ctx)
}

// SetOutput sets the Output property of class RandomNumberBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.randomnumberblock#output
func (r *RandomNumberBlock) SetOutput(output *NodeMaterialConnectionPoint) *RandomNumberBlock {
	r.p.Set("output", output.JSObject())
	return r
}

// Seed returns the Seed property of class RandomNumberBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.randomnumberblock#seed
func (r *RandomNumberBlock) Seed() *NodeMaterialConnectionPoint {
	retVal := r.p.Get("seed")
	return NodeMaterialConnectionPointFromJSObject(retVal, r.ctx)
}

// SetSeed sets the Seed property of class RandomNumberBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.randomnumberblock#seed
func (r *RandomNumberBlock) SetSeed(seed *NodeMaterialConnectionPoint) *RandomNumberBlock {
	r.p.Set("seed", seed.JSObject())
	return r
}
