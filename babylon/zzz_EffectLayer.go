// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// EffectLayer represents a babylon.js EffectLayer.
// The effect layer Helps adding post process effect blended with the main pass.
//
// The effect layer class can not be used directly and is intented to inherited from to be
// customized per effects.
type EffectLayer struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (e *EffectLayer) JSObject() js.Value { return e.p }

// EffectLayer returns a EffectLayer JavaScript class.
func (b *Babylon) EffectLayer() *EffectLayer {
	p := b.ctx.Get("EffectLayer")
	return EffectLayerFromJSObject(p)
}

// EffectLayerFromJSObject returns a wrapped EffectLayer JavaScript class.
func EffectLayerFromJSObject(p js.Value) *EffectLayer {
	return &EffectLayer{p: p}
}

// NewEffectLayer returns a new EffectLayer object.
//
// https://doc.babylonjs.com/api/classes/babylon.effectlayer
func (b *Babylon) NewEffectLayer(name string, scene *Scene) *EffectLayer {
	p := b.ctx.Get("EffectLayer").New(name, scene.JSObject())
	return EffectLayerFromJSObject(p)
}

// TODO: methods
