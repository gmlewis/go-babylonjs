// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Button3D represents a babylon.js Button3D.
// Class used to create a button in 3D
type Button3D struct{ *AbstractButton3D }

// JSObject returns the underlying js.Value.
func (b *Button3D) JSObject() js.Value { return b.p }

// Button3D returns a Button3D JavaScript class.
func (ba *Babylon) Button3D() *Button3D {
	p := ba.ctx.Get("Button3D")
	return Button3DFromJSObject(p)
}

// Button3DFromJSObject returns a wrapped Button3D JavaScript class.
func Button3DFromJSObject(p js.Value) *Button3D {
	return &Button3D{AbstractButton3DFromJSObject(p)}
}

// NewButton3DOpts contains optional parameters for NewButton3D.
type NewButton3DOpts struct {
	Name *JSString
}

// NewButton3D returns a new Button3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.button3d
func (ba *Babylon) NewButton3D(opts *NewButton3DOpts) *Button3D {
	if opts == nil {
		opts = &NewButton3DOpts{}
	}

	p := ba.ctx.Get("Button3D").New(opts.Name)
	return Button3DFromJSObject(p)
}

// TODO: methods
