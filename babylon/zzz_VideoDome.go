// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// VideoDome represents a babylon.js VideoDome.
// Display a 360/180 degree video on an approximately spherical surface, useful for VR applications or skyboxes.
// As a subclass of TransformNode, this allow parenting to the camera or multiple videos with different locations in the scene.
// This class achieves its effect with a VideoTexture and a correctly configured BackgroundMaterial on an inverted sphere.
// Potential additions to this helper include zoom and and non-infinite distance rendering effects.
type VideoDome struct{ *TransformNode }

// JSObject returns the underlying js.Value.
func (v *VideoDome) JSObject() js.Value { return v.p }

// VideoDome returns a VideoDome JavaScript class.
func (ba *Babylon) VideoDome() *VideoDome {
	p := ba.ctx.Get("VideoDome")
	return VideoDomeFromJSObject(p)
}

// VideoDomeFromJSObject returns a wrapped VideoDome JavaScript class.
func VideoDomeFromJSObject(p js.Value) *VideoDome {
	return &VideoDome{TransformNodeFromJSObject(p)}
}

// NewVideoDome returns a new VideoDome object.
//
// https://doc.babylonjs.com/api/classes/babylon.videodome
func (ba *Babylon) NewVideoDome(name string, urlsOrVideo string, options js.Value, scene *Scene) *VideoDome {
	p := ba.ctx.Get("VideoDome").New(name, urlsOrVideo, options, scene.JSObject())
	return VideoDomeFromJSObject(p)
}

// TODO: methods
