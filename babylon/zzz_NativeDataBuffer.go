// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// NativeDataBuffer represents a babylon.js NativeDataBuffer.
// Container for accessors for natively-stored mesh data buffers.
type NativeDataBuffer struct {
	*DataBuffer
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (n *NativeDataBuffer) JSObject() js.Value { return n.p }

// NativeDataBuffer returns a NativeDataBuffer JavaScript class.
func (ba *Babylon) NativeDataBuffer() *NativeDataBuffer {
	p := ba.ctx.Get("NativeDataBuffer")
	return NativeDataBufferFromJSObject(p, ba.ctx)
}

// NativeDataBufferFromJSObject returns a wrapped NativeDataBuffer JavaScript class.
func NativeDataBufferFromJSObject(p js.Value, ctx js.Value) *NativeDataBuffer {
	return &NativeDataBuffer{DataBuffer: DataBufferFromJSObject(p, ctx), ctx: ctx}
}

// TODO: methods
