// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// TriPlanarMaterial represents a babylon.js TriPlanarMaterial.
//
type TriPlanarMaterial struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (t *TriPlanarMaterial) JSObject() js.Value { return t.p }

// TriPlanarMaterial returns a TriPlanarMaterial JavaScript class.
func (ba *Babylon) TriPlanarMaterial() *TriPlanarMaterial {
	p := ba.ctx.Get("TriPlanarMaterial")
	return TriPlanarMaterialFromJSObject(p, ba.ctx)
}

// TriPlanarMaterialFromJSObject returns a wrapped TriPlanarMaterial JavaScript class.
func TriPlanarMaterialFromJSObject(p js.Value, ctx js.Value) *TriPlanarMaterial {
	return &TriPlanarMaterial{p: p, ctx: ctx}
}

// NewTriPlanarMaterial returns a new TriPlanarMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.triplanarmaterial
func (ba *Babylon) NewTriPlanarMaterial(name string, scene *Scene) *TriPlanarMaterial {
	p := ba.ctx.Get("TriPlanarMaterial").New(name, scene.JSObject())
	return TriPlanarMaterialFromJSObject(p, ba.ctx)
}

// TODO: methods
