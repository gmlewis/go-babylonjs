// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// InstancedLinesMesh represents a babylon.js InstancedLinesMesh.
// Creates an instance based on a source LinesMesh
type InstancedLinesMesh struct {
	*InstancedMesh
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *InstancedLinesMesh) JSObject() js.Value { return i.p }

// InstancedLinesMesh returns a InstancedLinesMesh JavaScript class.
func (ba *Babylon) InstancedLinesMesh() *InstancedLinesMesh {
	p := ba.ctx.Get("InstancedLinesMesh")
	return InstancedLinesMeshFromJSObject(p, ba.ctx)
}

// InstancedLinesMeshFromJSObject returns a wrapped InstancedLinesMesh JavaScript class.
func InstancedLinesMeshFromJSObject(p js.Value, ctx js.Value) *InstancedLinesMesh {
	return &InstancedLinesMesh{InstancedMesh: InstancedMeshFromJSObject(p, ctx), ctx: ctx}
}

// NewInstancedLinesMesh returns a new InstancedLinesMesh object.
//
// https://doc.babylonjs.com/api/classes/babylon.instancedlinesmesh
func (ba *Babylon) NewInstancedLinesMesh(name string, source *LinesMesh) *InstancedLinesMesh {
	p := ba.ctx.Get("InstancedLinesMesh").New(name, source.JSObject())
	return InstancedLinesMeshFromJSObject(p, ba.ctx)
}

// TODO: methods
