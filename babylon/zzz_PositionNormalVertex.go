// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PositionNormalVertex represents a babylon.js PositionNormalVertex.
// Contains position and normal vectors for a vertex
type PositionNormalVertex struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (p *PositionNormalVertex) JSObject() js.Value { return p.p }

// PositionNormalVertex returns a PositionNormalVertex JavaScript class.
func (ba *Babylon) PositionNormalVertex() *PositionNormalVertex {
	p := ba.ctx.Get("PositionNormalVertex")
	return PositionNormalVertexFromJSObject(p)
}

// PositionNormalVertexFromJSObject returns a wrapped PositionNormalVertex JavaScript class.
func PositionNormalVertexFromJSObject(p js.Value) *PositionNormalVertex {
	return &PositionNormalVertex{p: p}
}

// NewPositionNormalVertexOpts contains optional parameters for NewPositionNormalVertex.
type NewPositionNormalVertexOpts struct {
	Position *Vector3

	Normal *Vector3
}

// NewPositionNormalVertex returns a new PositionNormalVertex object.
//
// https://doc.babylonjs.com/api/classes/babylon.positionnormalvertex
func (ba *Babylon) NewPositionNormalVertex(opts *NewPositionNormalVertexOpts) *PositionNormalVertex {
	if opts == nil {
		opts = &NewPositionNormalVertexOpts{}
	}

	p := ba.ctx.Get("PositionNormalVertex").New(opts.Position.JSObject(), opts.Normal.JSObject())
	return PositionNormalVertexFromJSObject(p)
}

// TODO: methods
