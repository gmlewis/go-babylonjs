// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ImageProcessingBlock represents a babylon.js ImageProcessingBlock.
// Block used to add image processing support to fragment shader
type ImageProcessingBlock struct{ *NodeMaterialBlock }

// JSObject returns the underlying js.Value.
func (i *ImageProcessingBlock) JSObject() js.Value { return i.p }

// ImageProcessingBlock returns a ImageProcessingBlock JavaScript class.
func (ba *Babylon) ImageProcessingBlock() *ImageProcessingBlock {
	p := ba.ctx.Get("ImageProcessingBlock")
	return ImageProcessingBlockFromJSObject(p)
}

// ImageProcessingBlockFromJSObject returns a wrapped ImageProcessingBlock JavaScript class.
func ImageProcessingBlockFromJSObject(p js.Value) *ImageProcessingBlock {
	return &ImageProcessingBlock{NodeMaterialBlockFromJSObject(p)}
}

// NewImageProcessingBlock returns a new ImageProcessingBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.imageprocessingblock
func (ba *Babylon) NewImageProcessingBlock(name string) *ImageProcessingBlock {
	p := ba.ctx.Get("ImageProcessingBlock").New(name)
	return ImageProcessingBlockFromJSObject(p)
}

// TODO: methods
