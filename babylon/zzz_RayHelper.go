// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// RayHelper represents a babylon.js RayHelper.
// As raycast might be hard to debug, the RayHelper can help rendering the different rays
// in order to better appreciate the issue one might have.
//
// See: http://doc.babylonjs.com/babylon101/raycasts#debugging
type RayHelper struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (r *RayHelper) JSObject() js.Value { return r.p }

// RayHelper returns a RayHelper JavaScript class.
func (ba *Babylon) RayHelper() *RayHelper {
	p := ba.ctx.Get("RayHelper")
	return RayHelperFromJSObject(p)
}

// RayHelperFromJSObject returns a wrapped RayHelper JavaScript class.
func RayHelperFromJSObject(p js.Value) *RayHelper {
	return &RayHelper{p: p}
}

// NewRayHelper returns a new RayHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.rayhelper
func (ba *Babylon) NewRayHelper(ray *Ray) *RayHelper {
	p := ba.ctx.Get("RayHelper").New(ray.JSObject())
	return RayHelperFromJSObject(p)
}

// TODO: methods
