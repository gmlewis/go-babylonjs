// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Image represents a babylon.js Image.
// Class used to create 2D images
type Image struct{ *Control }

// JSObject returns the underlying js.Value.
func (i *Image) JSObject() js.Value { return i.p }

// Image returns a Image JavaScript class.
func (b *Babylon) Image() *Image {
	p := b.ctx.Get("Image")
	return ImageFromJSObject(p)
}

// ImageFromJSObject returns a wrapped Image JavaScript class.
func ImageFromJSObject(p js.Value) *Image {
	return &Image{ControlFromJSObject(p)}
}

// NewImageOpts contains optional parameters for NewImage.
type NewImageOpts struct {
	Name *string

	Url *string
}

// NewImage returns a new Image object.
//
// https://doc.babylonjs.com/api/classes/babylon.image
func (b *Babylon) NewImage(opts *NewImageOpts) *Image {
	if opts == nil {
		opts = &NewImageOpts{}
	}

	p := b.ctx.Get("Image").New(opts.Name, opts.Url)
	return ImageFromJSObject(p)
}

// TODO: methods
