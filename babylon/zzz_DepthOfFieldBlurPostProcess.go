// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// DepthOfFieldBlurPostProcess represents a babylon.js DepthOfFieldBlurPostProcess.
// The DepthOfFieldBlurPostProcess applied a blur in a give direction.
// This blur differs from the standard BlurPostProcess as it attempts to avoid blurring pixels
// based on samples that have a large difference in distance than the center pixel.
// See section 2.6.2 &lt;a href=&#34;http://fileadmin.cs.lth.se/cs/education/edan35/lectures/12dof.pdf&#34;&gt;http://fileadmin.cs.lth.se/cs/education/edan35/lectures/12dof.pdf&lt;/a&gt;
type DepthOfFieldBlurPostProcess struct{ *BlurPostProcess }

// JSObject returns the underlying js.Value.
func (d *DepthOfFieldBlurPostProcess) JSObject() js.Value { return d.p }

// DepthOfFieldBlurPostProcess returns a DepthOfFieldBlurPostProcess JavaScript class.
func (ba *Babylon) DepthOfFieldBlurPostProcess() *DepthOfFieldBlurPostProcess {
	p := ba.ctx.Get("DepthOfFieldBlurPostProcess")
	return DepthOfFieldBlurPostProcessFromJSObject(p)
}

// DepthOfFieldBlurPostProcessFromJSObject returns a wrapped DepthOfFieldBlurPostProcess JavaScript class.
func DepthOfFieldBlurPostProcessFromJSObject(p js.Value) *DepthOfFieldBlurPostProcess {
	return &DepthOfFieldBlurPostProcess{BlurPostProcessFromJSObject(p)}
}

// NewDepthOfFieldBlurPostProcessOpts contains optional parameters for NewDepthOfFieldBlurPostProcess.
type NewDepthOfFieldBlurPostProcessOpts struct {
	ImageToBlur *PostProcess

	SamplingMode *JSFloat64

	Engine *Engine

	Reusable *JSBool

	TextureType *JSFloat64

	BlockCompilation *JSBool
}

// NewDepthOfFieldBlurPostProcess returns a new DepthOfFieldBlurPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.depthoffieldblurpostprocess
func (ba *Babylon) NewDepthOfFieldBlurPostProcess(name string, scene *Scene, direction *Vector2, kernel float64, options float64, camera *Camera, circleOfConfusion *PostProcess, opts *NewDepthOfFieldBlurPostProcessOpts) *DepthOfFieldBlurPostProcess {
	if opts == nil {
		opts = &NewDepthOfFieldBlurPostProcessOpts{}
	}

	p := ba.ctx.Get("DepthOfFieldBlurPostProcess").New(name, scene.JSObject(), direction.JSObject(), kernel, options, camera.JSObject(), circleOfConfusion.JSObject(), opts.ImageToBlur.JSObject(), opts.SamplingMode.JSObject(), opts.Engine.JSObject(), opts.Reusable.JSObject(), opts.TextureType.JSObject(), opts.BlockCompilation.JSObject())
	return DepthOfFieldBlurPostProcessFromJSObject(p)
}

// TODO: methods
