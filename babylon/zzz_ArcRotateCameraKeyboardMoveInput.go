// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ArcRotateCameraKeyboardMoveInput represents a babylon.js ArcRotateCameraKeyboardMoveInput.
// Manage the keyboard inputs to control the movement of an arc rotate camera.

//
// See: http://doc.babylonjs.com/how_to/customizing_camera_inputs
type ArcRotateCameraKeyboardMoveInput struct{}

// JSObject returns the underlying js.Value.
func (a *ArcRotateCameraKeyboardMoveInput) JSObject() js.Value { return a.p }

// ArcRotateCameraKeyboardMoveInput returns a ArcRotateCameraKeyboardMoveInput JavaScript class.
func (b *Babylon) ArcRotateCameraKeyboardMoveInput() *ArcRotateCameraKeyboardMoveInput {
	p := b.ctx.Get("ArcRotateCameraKeyboardMoveInput")
	return ArcRotateCameraKeyboardMoveInputFromJSObject(p)
}

// ArcRotateCameraKeyboardMoveInputFromJSObject returns a wrapped ArcRotateCameraKeyboardMoveInput JavaScript class.
func ArcRotateCameraKeyboardMoveInputFromJSObject(p js.Value) *ArcRotateCameraKeyboardMoveInput {
	return &ArcRotateCameraKeyboardMoveInput{p: p}
}

// NewArcRotateCameraKeyboardMoveInput returns a new ArcRotateCameraKeyboardMoveInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerakeyboardmoveinput
func (b *Babylon) NewArcRotateCameraKeyboardMoveInput(todo parameters) *ArcRotateCameraKeyboardMoveInput {
	p := b.ctx.Get("ArcRotateCameraKeyboardMoveInput").New(todo)
	return ArcRotateCameraKeyboardMoveInputFromJSObject(p)
}

// TODO: methods
