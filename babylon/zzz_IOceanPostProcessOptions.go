// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IOceanPostProcessOptions represents a babylon.js IOceanPostProcessOptions.
// Option available in the Ocean Post Process.
type IOceanPostProcessOptions struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IOceanPostProcessOptions) JSObject() js.Value { return i.p }

// IOceanPostProcessOptions returns a IOceanPostProcessOptions JavaScript class.
func (ba *Babylon) IOceanPostProcessOptions() *IOceanPostProcessOptions {
	p := ba.ctx.Get("IOceanPostProcessOptions")
	return IOceanPostProcessOptionsFromJSObject(p, ba.ctx)
}

// IOceanPostProcessOptionsFromJSObject returns a wrapped IOceanPostProcessOptions JavaScript class.
func IOceanPostProcessOptionsFromJSObject(p js.Value, ctx js.Value) *IOceanPostProcessOptions {
	return &IOceanPostProcessOptions{p: p, ctx: ctx}
}

// IOceanPostProcessOptionsArrayToJSArray returns a JavaScript Array for the wrapped array.
func IOceanPostProcessOptionsArrayToJSArray(array []*IOceanPostProcessOptions) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// ReflectionSize returns the ReflectionSize property of class IOceanPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ioceanpostprocessoptions#reflectionsize
func (i *IOceanPostProcessOptions) ReflectionSize() float64 {
	retVal := i.p.Get("reflectionSize")
	return retVal.Float()
}

// SetReflectionSize sets the ReflectionSize property of class IOceanPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ioceanpostprocessoptions#reflectionsize
func (i *IOceanPostProcessOptions) SetReflectionSize(reflectionSize float64) *IOceanPostProcessOptions {
	i.p.Set("reflectionSize", reflectionSize)
	return i
}

// RefractionSize returns the RefractionSize property of class IOceanPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ioceanpostprocessoptions#refractionsize
func (i *IOceanPostProcessOptions) RefractionSize() float64 {
	retVal := i.p.Get("refractionSize")
	return retVal.Float()
}

// SetRefractionSize sets the RefractionSize property of class IOceanPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ioceanpostprocessoptions#refractionsize
func (i *IOceanPostProcessOptions) SetRefractionSize(refractionSize float64) *IOceanPostProcessOptions {
	i.p.Set("refractionSize", refractionSize)
	return i
}
