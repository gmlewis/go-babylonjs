// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// UniversalCamera represents a babylon.js UniversalCamera.
// The Universal Camera is the one to choose for first person shooter type games, and works with all the keyboard, mouse, touch and gamepads. This replaces the earlier Free Camera,
// which still works and will still be found in many Playgrounds.
//
// See: http://doc.babylonjs.com/features/cameras#universal-camera
type UniversalCamera struct{ *TouchCamera }

// JSObject returns the underlying js.Value.
func (u *UniversalCamera) JSObject() js.Value { return u.p }

// UniversalCamera returns a UniversalCamera JavaScript class.
func (ba *Babylon) UniversalCamera() *UniversalCamera {
	p := ba.ctx.Get("UniversalCamera")
	return UniversalCameraFromJSObject(p)
}

// UniversalCameraFromJSObject returns a wrapped UniversalCamera JavaScript class.
func UniversalCameraFromJSObject(p js.Value) *UniversalCamera {
	return &UniversalCamera{TouchCameraFromJSObject(p)}
}

// NewUniversalCamera returns a new UniversalCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.universalcamera
func (ba *Babylon) NewUniversalCamera(name string, position *Vector3, scene *Scene) *UniversalCamera {
	p := ba.ctx.Get("UniversalCamera").New(name, position.JSObject(), scene.JSObject())
	return UniversalCameraFromJSObject(p)
}

// TODO: methods
