// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// VirtualJoystick represents a babylon.js VirtualJoystick.
// Class used to define virtual joystick (used in touch mode)
type VirtualJoystick struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (v *VirtualJoystick) JSObject() js.Value { return v.p }

// VirtualJoystick returns a VirtualJoystick JavaScript class.
func (b *Babylon) VirtualJoystick() *VirtualJoystick {
	p := b.ctx.Get("VirtualJoystick")
	return VirtualJoystickFromJSObject(p)
}

// VirtualJoystickFromJSObject returns a wrapped VirtualJoystick JavaScript class.
func VirtualJoystickFromJSObject(p js.Value) *VirtualJoystick {
	return &VirtualJoystick{p: p}
}

// NewVirtualJoystickOpts contains optional parameters for NewVirtualJoystick.
type NewVirtualJoystickOpts struct {
	LeftJoystick *bool
}

// NewVirtualJoystick returns a new VirtualJoystick object.
//
// https://doc.babylonjs.com/api/classes/babylon.virtualjoystick
func (b *Babylon) NewVirtualJoystick(opts *NewVirtualJoystickOpts) *VirtualJoystick {
	if opts == nil {
		opts = &NewVirtualJoystickOpts{}
	}

	p := b.ctx.Get("VirtualJoystick").New(opts.LeftJoystick.JSObject())
	return VirtualJoystickFromJSObject(p)
}

// TODO: methods
