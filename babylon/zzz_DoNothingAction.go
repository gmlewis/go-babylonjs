// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// DoNothingAction represents a babylon.js DoNothingAction.
// This defines an action responsible that does nothing once triggered.
//
// See: http://doc.babylonjs.com/how_to/how_to_use_actions
type DoNothingAction struct{ *Action }

// JSObject returns the underlying js.Value.
func (d *DoNothingAction) JSObject() js.Value { return d.p }

// DoNothingAction returns a DoNothingAction JavaScript class.
func (b *Babylon) DoNothingAction() *DoNothingAction {
	p := b.ctx.Get("DoNothingAction")
	return DoNothingActionFromJSObject(p)
}

// DoNothingActionFromJSObject returns a wrapped DoNothingAction JavaScript class.
func DoNothingActionFromJSObject(p js.Value) *DoNothingAction {
	return &DoNothingAction{ActionFromJSObject(p)}
}

// NewDoNothingActionOpts contains optional parameters for NewDoNothingAction.
type NewDoNothingActionOpts struct {
	TriggerOptions *interface{}

	Condition *Condition
}

// NewDoNothingAction returns a new DoNothingAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.donothingaction
func (b *Babylon) NewDoNothingAction(opts *NewDoNothingActionOpts) *DoNothingAction {
	if opts == nil {
		opts = &NewDoNothingActionOpts{}
	}

	p := b.ctx.Get("DoNothingAction").New(opts.TriggerOptions, opts.Condition.JSObject())
	return DoNothingActionFromJSObject(p)
}

// TODO: methods
