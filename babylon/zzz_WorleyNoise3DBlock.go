// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// WorleyNoise3DBlock represents a babylon.js WorleyNoise3DBlock.
// block used to Generate a Worley Noise 3D Noise Pattern
type WorleyNoise3DBlock struct {
	*NodeMaterialBlock
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (w *WorleyNoise3DBlock) JSObject() js.Value { return w.p }

// WorleyNoise3DBlock returns a WorleyNoise3DBlock JavaScript class.
func (ba *Babylon) WorleyNoise3DBlock() *WorleyNoise3DBlock {
	p := ba.ctx.Get("WorleyNoise3DBlock")
	return WorleyNoise3DBlockFromJSObject(p, ba.ctx)
}

// WorleyNoise3DBlockFromJSObject returns a wrapped WorleyNoise3DBlock JavaScript class.
func WorleyNoise3DBlockFromJSObject(p js.Value, ctx js.Value) *WorleyNoise3DBlock {
	return &WorleyNoise3DBlock{NodeMaterialBlock: NodeMaterialBlockFromJSObject(p, ctx), ctx: ctx}
}

// WorleyNoise3DBlockArrayToJSArray returns a JavaScript Array for the wrapped array.
func WorleyNoise3DBlockArrayToJSArray(array []*WorleyNoise3DBlock) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewWorleyNoise3DBlock returns a new WorleyNoise3DBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock
func (ba *Babylon) NewWorleyNoise3DBlock(name string) *WorleyNoise3DBlock {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	p := ba.ctx.Get("WorleyNoise3DBlock").New(args...)
	return WorleyNoise3DBlockFromJSObject(p, ba.ctx)
}

// GetClassName calls the GetClassName method on the WorleyNoise3DBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#getclassname
func (w *WorleyNoise3DBlock) GetClassName() string {

	retVal := w.p.Call("getClassName")
	return retVal.String()
}

// Serialize calls the Serialize method on the WorleyNoise3DBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#serialize
func (w *WorleyNoise3DBlock) Serialize() js.Value {

	retVal := w.p.Call("serialize")
	return retVal
}

// _deserialize calls the _deserialize method on the WorleyNoise3DBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#_deserialize
func (w *WorleyNoise3DBlock) _deserialize(serializationObject JSObject, scene *Scene, rootUrl string) {

	args := make([]interface{}, 0, 3+0)

	if serializationObject == nil {
		args = append(args, js.Null())
	} else {
		args = append(args, serializationObject.JSObject())
	}

	if scene == nil {
		args = append(args, js.Null())
	} else {
		args = append(args, scene.JSObject())
	}

	args = append(args, rootUrl)

	w.p.Call("_deserialize", args...)
}

// Jitter returns the Jitter property of class WorleyNoise3DBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#jitter
func (w *WorleyNoise3DBlock) Jitter() *NodeMaterialConnectionPoint {
	retVal := w.p.Get("jitter")
	return NodeMaterialConnectionPointFromJSObject(retVal, w.ctx)
}

// SetJitter sets the Jitter property of class WorleyNoise3DBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#jitter
func (w *WorleyNoise3DBlock) SetJitter(jitter *NodeMaterialConnectionPoint) *WorleyNoise3DBlock {
	w.p.Set("jitter", jitter.JSObject())
	return w
}

// ManhattanDistance returns the ManhattanDistance property of class WorleyNoise3DBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#manhattandistance
func (w *WorleyNoise3DBlock) ManhattanDistance() bool {
	retVal := w.p.Get("manhattanDistance")
	return retVal.Bool()
}

// SetManhattanDistance sets the ManhattanDistance property of class WorleyNoise3DBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#manhattandistance
func (w *WorleyNoise3DBlock) SetManhattanDistance(manhattanDistance bool) *WorleyNoise3DBlock {
	w.p.Set("manhattanDistance", manhattanDistance)
	return w
}

// Output returns the Output property of class WorleyNoise3DBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#output
func (w *WorleyNoise3DBlock) Output() *NodeMaterialConnectionPoint {
	retVal := w.p.Get("output")
	return NodeMaterialConnectionPointFromJSObject(retVal, w.ctx)
}

// SetOutput sets the Output property of class WorleyNoise3DBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#output
func (w *WorleyNoise3DBlock) SetOutput(output *NodeMaterialConnectionPoint) *WorleyNoise3DBlock {
	w.p.Set("output", output.JSObject())
	return w
}

// Seed returns the Seed property of class WorleyNoise3DBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#seed
func (w *WorleyNoise3DBlock) Seed() *NodeMaterialConnectionPoint {
	retVal := w.p.Get("seed")
	return NodeMaterialConnectionPointFromJSObject(retVal, w.ctx)
}

// SetSeed sets the Seed property of class WorleyNoise3DBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.worleynoise3dblock#seed
func (w *WorleyNoise3DBlock) SetSeed(seed *NodeMaterialConnectionPoint) *WorleyNoise3DBlock {
	w.p.Set("seed", seed.JSObject())
	return w
}
