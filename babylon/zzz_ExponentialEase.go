// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ExponentialEase represents a babylon.js ExponentialEase.
// Easing function with an exponential shape (see link below).

//
// See: http://doc.babylonjs.com/babylon101/animations#easing-functions
type ExponentialEase struct{ *EasingFunction }

// JSObject returns the underlying js.Value.
func (e *ExponentialEase) JSObject() js.Value { return e.p }

// ExponentialEase returns a ExponentialEase JavaScript class.
func (b *Babylon) ExponentialEase() *ExponentialEase {
	p := b.ctx.Get("ExponentialEase")
	return ExponentialEaseFromJSObject(p)
}

// ExponentialEaseFromJSObject returns a wrapped ExponentialEase JavaScript class.
func ExponentialEaseFromJSObject(p js.Value) *ExponentialEase {
	return &ExponentialEase{EasingFunctionFromJSObject(p)}
}

// NewExponentialEase returns a new ExponentialEase object.
//
// https://doc.babylonjs.com/api/classes/babylon.exponentialease
func (b *Babylon) NewExponentialEase(todo parameters) *ExponentialEase {
	p := b.ctx.Get("ExponentialEase").New(todo)
	return ExponentialEaseFromJSObject(p)
}

// TODO: methods
