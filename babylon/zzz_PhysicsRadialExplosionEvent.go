// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PhysicsRadialExplosionEvent represents a babylon.js PhysicsRadialExplosionEvent.
// Represents a physics radial explosion event
type PhysicsRadialExplosionEvent struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (p *PhysicsRadialExplosionEvent) JSObject() js.Value { return p.p }

// PhysicsRadialExplosionEvent returns a PhysicsRadialExplosionEvent JavaScript class.
func (b *Babylon) PhysicsRadialExplosionEvent() *PhysicsRadialExplosionEvent {
	p := b.ctx.Get("PhysicsRadialExplosionEvent")
	return PhysicsRadialExplosionEventFromJSObject(p)
}

// PhysicsRadialExplosionEventFromJSObject returns a wrapped PhysicsRadialExplosionEvent JavaScript class.
func PhysicsRadialExplosionEventFromJSObject(p js.Value) *PhysicsRadialExplosionEvent {
	return &PhysicsRadialExplosionEvent{p: p}
}

// NewPhysicsRadialExplosionEvent returns a new PhysicsRadialExplosionEvent object.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsradialexplosionevent
func (b *Babylon) NewPhysicsRadialExplosionEvent(_scene *Scene, _options *PhysicsRadialExplosionEventOptions) *PhysicsRadialExplosionEvent {
	p := b.ctx.Get("PhysicsRadialExplosionEvent").New(_scene.JSObject(), _options.JSObject())
	return PhysicsRadialExplosionEventFromJSObject(p)
}

// TODO: methods
