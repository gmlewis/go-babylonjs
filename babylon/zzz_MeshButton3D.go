// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// MeshButton3D represents a babylon.js MeshButton3D.
// Class used to create an interactable object. It&amp;#39;s a 3D button using a mesh coming from the current scene
type MeshButton3D struct{ *Button3D }

// JSObject returns the underlying js.Value.
func (m *MeshButton3D) JSObject() js.Value { return m.p }

// MeshButton3D returns a MeshButton3D JavaScript class.
func (b *Babylon) MeshButton3D() *MeshButton3D {
	p := b.ctx.Get("MeshButton3D")
	return MeshButton3DFromJSObject(p)
}

// MeshButton3DFromJSObject returns a wrapped MeshButton3D JavaScript class.
func MeshButton3DFromJSObject(p js.Value) *MeshButton3D {
	return &MeshButton3D{Button3DFromJSObject(p)}
}

// NewMeshButton3D returns a new MeshButton3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.meshbutton3d
func (b *Babylon) NewMeshButton3D(todo parameters) *MeshButton3D {
	p := b.ctx.Get("MeshButton3D").New(todo)
	return MeshButton3DFromJSObject(p)
}

// TODO: methods
