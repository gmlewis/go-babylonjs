// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// AssetsProgressEvent represents a babylon.js AssetsProgressEvent.
// Class used to share progress information about assets loading
type AssetsProgressEvent struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (a *AssetsProgressEvent) JSObject() js.Value { return a.p }

// AssetsProgressEvent returns a AssetsProgressEvent JavaScript class.
func (b *Babylon) AssetsProgressEvent() *AssetsProgressEvent {
	p := b.ctx.Get("AssetsProgressEvent")
	return AssetsProgressEventFromJSObject(p)
}

// AssetsProgressEventFromJSObject returns a wrapped AssetsProgressEvent JavaScript class.
func AssetsProgressEventFromJSObject(p js.Value) *AssetsProgressEvent {
	return &AssetsProgressEvent{p: p}
}

// NewAssetsProgressEvent returns a new AssetsProgressEvent object.
//
// https://doc.babylonjs.com/api/classes/babylon.assetsprogressevent
func (b *Babylon) NewAssetsProgressEvent(remainingCount float64, totalCount float64, task *AbstractAssetTask) *AssetsProgressEvent {
	p := b.ctx.Get("AssetsProgressEvent").New(remainingCount, totalCount, task.JSObject())
	return AssetsProgressEventFromJSObject(p)
}

// TODO: methods
