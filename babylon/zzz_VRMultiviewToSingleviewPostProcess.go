// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// VRMultiviewToSingleviewPostProcess represents a babylon.js VRMultiviewToSingleviewPostProcess.
// VRMultiviewToSingleview used to convert multiview texture arrays to standard textures for scenarios such as webVR
// This will not be used for webXR as it supports displaying texture arrays directly
type VRMultiviewToSingleviewPostProcess struct {
	*PostProcess
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (v *VRMultiviewToSingleviewPostProcess) JSObject() js.Value { return v.p }

// VRMultiviewToSingleviewPostProcess returns a VRMultiviewToSingleviewPostProcess JavaScript class.
func (ba *Babylon) VRMultiviewToSingleviewPostProcess() *VRMultiviewToSingleviewPostProcess {
	p := ba.ctx.Get("VRMultiviewToSingleviewPostProcess")
	return VRMultiviewToSingleviewPostProcessFromJSObject(p, ba.ctx)
}

// VRMultiviewToSingleviewPostProcessFromJSObject returns a wrapped VRMultiviewToSingleviewPostProcess JavaScript class.
func VRMultiviewToSingleviewPostProcessFromJSObject(p js.Value, ctx js.Value) *VRMultiviewToSingleviewPostProcess {
	return &VRMultiviewToSingleviewPostProcess{PostProcess: PostProcessFromJSObject(p, ctx), ctx: ctx}
}

// VRMultiviewToSingleviewPostProcessArrayToJSArray returns a JavaScript Array for the wrapped array.
func VRMultiviewToSingleviewPostProcessArrayToJSArray(array []*VRMultiviewToSingleviewPostProcess) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewVRMultiviewToSingleviewPostProcess returns a new VRMultiviewToSingleviewPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.vrmultiviewtosingleviewpostprocess#constructor
func (ba *Babylon) NewVRMultiviewToSingleviewPostProcess(name string, camera *Camera, scaleFactor float64) *VRMultiviewToSingleviewPostProcess {

	args := make([]interface{}, 0, 3+0)

	args = append(args, name)
	args = append(args, camera.JSObject())
	args = append(args, scaleFactor)

	p := ba.ctx.Get("VRMultiviewToSingleviewPostProcess").New(args...)
	return VRMultiviewToSingleviewPostProcessFromJSObject(p, ba.ctx)
}
