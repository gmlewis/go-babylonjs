// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// MultiLine represents a babylon.js MultiLine.
// Class used to create multi line control
type MultiLine struct {
	*Control
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (m *MultiLine) JSObject() js.Value { return m.p }

// MultiLine returns a MultiLine JavaScript class.
func (ba *Babylon) MultiLine() *MultiLine {
	p := ba.ctx.Get("MultiLine")
	return MultiLineFromJSObject(p, ba.ctx)
}

// MultiLineFromJSObject returns a wrapped MultiLine JavaScript class.
func MultiLineFromJSObject(p js.Value, ctx js.Value) *MultiLine {
	return &MultiLine{Control: ControlFromJSObject(p, ctx), ctx: ctx}
}

// NewMultiLineOpts contains optional parameters for NewMultiLine.
type NewMultiLineOpts struct {
	Name *JSString
}

// NewMultiLine returns a new MultiLine object.
//
// https://doc.babylonjs.com/api/classes/babylon.multiline
func (ba *Babylon) NewMultiLine(opts *NewMultiLineOpts) *MultiLine {
	if opts == nil {
		opts = &NewMultiLineOpts{}
	}

	p := ba.ctx.Get("MultiLine").New(opts.Name.JSObject())
	return MultiLineFromJSObject(p, ba.ctx)
}

// TODO: methods
