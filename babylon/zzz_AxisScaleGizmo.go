// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// AxisScaleGizmo represents a babylon.js AxisScaleGizmo.
// Single axis scale gizmo
type AxisScaleGizmo struct {
	*Gizmo
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (a *AxisScaleGizmo) JSObject() js.Value { return a.p }

// AxisScaleGizmo returns a AxisScaleGizmo JavaScript class.
func (ba *Babylon) AxisScaleGizmo() *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo")
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// AxisScaleGizmoFromJSObject returns a wrapped AxisScaleGizmo JavaScript class.
func AxisScaleGizmoFromJSObject(p js.Value, ctx js.Value) *AxisScaleGizmo {
	return &AxisScaleGizmo{Gizmo: GizmoFromJSObject(p, ctx), ctx: ctx}
}

// AxisScaleGizmoArrayToJSArray returns a JavaScript Array for the wrapped array.
func AxisScaleGizmoArrayToJSArray(array []*AxisScaleGizmo) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewAxisScaleGizmoOpts contains optional parameters for NewAxisScaleGizmo.
type NewAxisScaleGizmoOpts struct {
	Color      *Color3
	GizmoLayer *UtilityLayerRenderer
	Parent     *ScaleGizmo
}

// NewAxisScaleGizmo returns a new AxisScaleGizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo
func (ba *Babylon) NewAxisScaleGizmo(dragAxis *Vector3, opts *NewAxisScaleGizmoOpts) *AxisScaleGizmo {
	if opts == nil {
		opts = &NewAxisScaleGizmoOpts{}
	}

	args := make([]interface{}, 0, 1+3)

	args = append(args, dragAxis.JSObject())

	if opts.Color == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Color.JSObject())
	}
	if opts.GizmoLayer == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.GizmoLayer.JSObject())
	}
	if opts.Parent == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Parent.JSObject())
	}

	p := ba.ctx.Get("AxisScaleGizmo").New(args...)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// Dispose calls the Dispose method on the AxisScaleGizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#dispose
func (a *AxisScaleGizmo) Dispose() {

	a.p.Call("dispose")
}

// AxisScaleGizmoSetCustomMeshOpts contains optional parameters for AxisScaleGizmo.SetCustomMesh.
type AxisScaleGizmoSetCustomMeshOpts struct {
	UseGizmoMaterial *bool
}

// SetCustomMesh calls the SetCustomMesh method on the AxisScaleGizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#setcustommesh
func (a *AxisScaleGizmo) SetCustomMesh(mesh *Mesh, opts *AxisScaleGizmoSetCustomMeshOpts) {
	if opts == nil {
		opts = &AxisScaleGizmoSetCustomMeshOpts{}
	}

	args := make([]interface{}, 0, 1+1)

	args = append(args, mesh.JSObject())

	if opts.UseGizmoMaterial == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.UseGizmoMaterial)
	}

	a.p.Call("setCustomMesh", args...)
}

/*

// AttachedMesh returns the AttachedMesh property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#attachedmesh
func (a *AxisScaleGizmo) AttachedMesh(attachedMesh *AbstractMesh) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(attachedMesh.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetAttachedMesh sets the AttachedMesh property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#attachedmesh
func (a *AxisScaleGizmo) SetAttachedMesh(attachedMesh *AbstractMesh) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(attachedMesh.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// DragBehavior returns the DragBehavior property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#dragbehavior
func (a *AxisScaleGizmo) DragBehavior(dragBehavior *PointerDragBehavior) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(dragBehavior.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetDragBehavior sets the DragBehavior property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#dragbehavior
func (a *AxisScaleGizmo) SetDragBehavior(dragBehavior *PointerDragBehavior) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(dragBehavior.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// GizmoLayer returns the GizmoLayer property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#gizmolayer
func (a *AxisScaleGizmo) GizmoLayer(gizmoLayer *UtilityLayerRenderer) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(gizmoLayer.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetGizmoLayer sets the GizmoLayer property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#gizmolayer
func (a *AxisScaleGizmo) SetGizmoLayer(gizmoLayer *UtilityLayerRenderer) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(gizmoLayer.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// IsEnabled returns the IsEnabled property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#isenabled
func (a *AxisScaleGizmo) IsEnabled(isEnabled bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(isEnabled)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetIsEnabled sets the IsEnabled property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#isenabled
func (a *AxisScaleGizmo) SetIsEnabled(isEnabled bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(isEnabled)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// OnSnapObservable returns the OnSnapObservable property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#onsnapobservable
func (a *AxisScaleGizmo) OnSnapObservable(onSnapObservable *Observable) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(onSnapObservable.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetOnSnapObservable sets the OnSnapObservable property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#onsnapobservable
func (a *AxisScaleGizmo) SetOnSnapObservable(onSnapObservable *Observable) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(onSnapObservable.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// ScaleRatio returns the ScaleRatio property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#scaleratio
func (a *AxisScaleGizmo) ScaleRatio(scaleRatio float64) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(scaleRatio)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetScaleRatio sets the ScaleRatio property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#scaleratio
func (a *AxisScaleGizmo) SetScaleRatio(scaleRatio float64) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(scaleRatio)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// Sensitivity returns the Sensitivity property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#sensitivity
func (a *AxisScaleGizmo) Sensitivity(sensitivity float64) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(sensitivity)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetSensitivity sets the Sensitivity property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#sensitivity
func (a *AxisScaleGizmo) SetSensitivity(sensitivity float64) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(sensitivity)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SnapDistance returns the SnapDistance property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#snapdistance
func (a *AxisScaleGizmo) SnapDistance(snapDistance float64) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(snapDistance)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetSnapDistance sets the SnapDistance property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#snapdistance
func (a *AxisScaleGizmo) SetSnapDistance(snapDistance float64) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(snapDistance)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// UniformScaling returns the UniformScaling property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#uniformscaling
func (a *AxisScaleGizmo) UniformScaling(uniformScaling bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(uniformScaling)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetUniformScaling sets the UniformScaling property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#uniformscaling
func (a *AxisScaleGizmo) SetUniformScaling(uniformScaling bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(uniformScaling)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// UpdateGizmoPositionToMatchAttachedMesh returns the UpdateGizmoPositionToMatchAttachedMesh property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#updategizmopositiontomatchattachedmesh
func (a *AxisScaleGizmo) UpdateGizmoPositionToMatchAttachedMesh(updateGizmoPositionToMatchAttachedMesh bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(updateGizmoPositionToMatchAttachedMesh)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetUpdateGizmoPositionToMatchAttachedMesh sets the UpdateGizmoPositionToMatchAttachedMesh property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#updategizmopositiontomatchattachedmesh
func (a *AxisScaleGizmo) SetUpdateGizmoPositionToMatchAttachedMesh(updateGizmoPositionToMatchAttachedMesh bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(updateGizmoPositionToMatchAttachedMesh)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// UpdateGizmoRotationToMatchAttachedMesh returns the UpdateGizmoRotationToMatchAttachedMesh property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#updategizmorotationtomatchattachedmesh
func (a *AxisScaleGizmo) UpdateGizmoRotationToMatchAttachedMesh(updateGizmoRotationToMatchAttachedMesh bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(updateGizmoRotationToMatchAttachedMesh)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetUpdateGizmoRotationToMatchAttachedMesh sets the UpdateGizmoRotationToMatchAttachedMesh property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#updategizmorotationtomatchattachedmesh
func (a *AxisScaleGizmo) SetUpdateGizmoRotationToMatchAttachedMesh(updateGizmoRotationToMatchAttachedMesh bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(updateGizmoRotationToMatchAttachedMesh)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// UpdateScale returns the UpdateScale property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#updatescale
func (a *AxisScaleGizmo) UpdateScale(updateScale bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(updateScale)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// SetUpdateScale sets the UpdateScale property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#updatescale
func (a *AxisScaleGizmo) SetUpdateScale(updateScale bool) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(updateScale)
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// _rootMesh returns the _rootMesh property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#_rootmesh
func (a *AxisScaleGizmo) _rootMesh(_rootMesh *Mesh) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(_rootMesh.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

// Set_rootMesh sets the _rootMesh property of class AxisScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.axisscalegizmo#_rootmesh
func (a *AxisScaleGizmo) Set_rootMesh(_rootMesh *Mesh) *AxisScaleGizmo {
	p := ba.ctx.Get("AxisScaleGizmo").New(_rootMesh.JSObject())
	return AxisScaleGizmoFromJSObject(p, ba.ctx)
}

*/
