// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// GrassProceduralTexture represents a babylon.js GrassProceduralTexture.
//
type GrassProceduralTexture struct{ *ProceduralTexture }

// JSObject returns the underlying js.Value.
func (g *GrassProceduralTexture) JSObject() js.Value { return g.p }

// GrassProceduralTexture returns a GrassProceduralTexture JavaScript class.
func (b *Babylon) GrassProceduralTexture() *GrassProceduralTexture {
	p := b.ctx.Get("GrassProceduralTexture")
	return GrassProceduralTextureFromJSObject(p)
}

// GrassProceduralTextureFromJSObject returns a wrapped GrassProceduralTexture JavaScript class.
func GrassProceduralTextureFromJSObject(p js.Value) *GrassProceduralTexture {
	return &GrassProceduralTexture{ProceduralTextureFromJSObject(p)}
}

// NewGrassProceduralTexture returns a new GrassProceduralTexture object.
//
// https://doc.babylonjs.com/api/classes/babylon.grassproceduraltexture
func (b *Babylon) NewGrassProceduralTexture(todo parameters) *GrassProceduralTexture {
	p := b.ctx.Get("GrassProceduralTexture").New(todo)
	return GrassProceduralTextureFromJSObject(p)
}

// TODO: methods
