// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IImage represents a babylon.js IImage.
// Loader interface with additional members.
type IImage struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IImage) JSObject() js.Value { return i.p }

// IImage returns a IImage JavaScript class.
func (ba *Babylon) IImage() *IImage {
	p := ba.ctx.Get("IImage")
	return IImageFromJSObject(p, ba.ctx)
}

// IImageFromJSObject returns a wrapped IImage JavaScript class.
func IImageFromJSObject(p js.Value, ctx js.Value) *IImage {
	return &IImage{p: p, ctx: ctx}
}

// IImageArrayToJSArray returns a JavaScript Array for the wrapped array.
func IImageArrayToJSArray(array []*IImage) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// BufferView returns the BufferView property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#bufferview
func (i *IImage) BufferView(bufferView float64) *IImage {
	p := ba.ctx.Get("IImage").New(bufferView)
	return IImageFromJSObject(p, ba.ctx)
}

// SetBufferView sets the BufferView property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#bufferview
func (i *IImage) SetBufferView(bufferView float64) *IImage {
	p := ba.ctx.Get("IImage").New(bufferView)
	return IImageFromJSObject(p, ba.ctx)
}

// Extensions returns the Extensions property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#extensions
func (i *IImage) Extensions(extensions js.Value) *IImage {
	p := ba.ctx.Get("IImage").New(extensions)
	return IImageFromJSObject(p, ba.ctx)
}

// SetExtensions sets the Extensions property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#extensions
func (i *IImage) SetExtensions(extensions js.Value) *IImage {
	p := ba.ctx.Get("IImage").New(extensions)
	return IImageFromJSObject(p, ba.ctx)
}

// Extras returns the Extras property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#extras
func (i *IImage) Extras(extras interface{}) *IImage {
	p := ba.ctx.Get("IImage").New(extras)
	return IImageFromJSObject(p, ba.ctx)
}

// SetExtras sets the Extras property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#extras
func (i *IImage) SetExtras(extras interface{}) *IImage {
	p := ba.ctx.Get("IImage").New(extras)
	return IImageFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#index
func (i *IImage) Index(index float64) *IImage {
	p := ba.ctx.Get("IImage").New(index)
	return IImageFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#index
func (i *IImage) SetIndex(index float64) *IImage {
	p := ba.ctx.Get("IImage").New(index)
	return IImageFromJSObject(p, ba.ctx)
}

// MimeType returns the MimeType property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#mimetype
func (i *IImage) MimeType(mimeType *ImageMimeType) *IImage {
	p := ba.ctx.Get("IImage").New(mimeType.JSObject())
	return IImageFromJSObject(p, ba.ctx)
}

// SetMimeType sets the MimeType property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#mimetype
func (i *IImage) SetMimeType(mimeType *ImageMimeType) *IImage {
	p := ba.ctx.Get("IImage").New(mimeType.JSObject())
	return IImageFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#name
func (i *IImage) Name(name string) *IImage {
	p := ba.ctx.Get("IImage").New(name)
	return IImageFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#name
func (i *IImage) SetName(name string) *IImage {
	p := ba.ctx.Get("IImage").New(name)
	return IImageFromJSObject(p, ba.ctx)
}

// Uri returns the Uri property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#uri
func (i *IImage) Uri(uri string) *IImage {
	p := ba.ctx.Get("IImage").New(uri)
	return IImageFromJSObject(p, ba.ctx)
}

// SetUri sets the Uri property of class IImage.
//
// https://doc.babylonjs.com/api/classes/babylon.iimage#uri
func (i *IImage) SetUri(uri string) *IImage {
	p := ba.ctx.Get("IImage").New(uri)
	return IImageFromJSObject(p, ba.ctx)
}

*/
