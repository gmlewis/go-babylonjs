// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IImage represents a babylon.js IImage.
// Loader interface with additional members.
type IImage struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IImage) JSObject() js.Value { return i.p }

// IImage returns a IImage JavaScript class.
func (ba *Babylon) IImage() *IImage {
	p := ba.ctx.Get("IImage")
	return IImageFromJSObject(p, ba.ctx)
}

// IImageFromJSObject returns a wrapped IImage JavaScript class.
func IImageFromJSObject(p js.Value, ctx js.Value) *IImage {
	return &IImage{p: p, ctx: ctx}
}

// IImageArrayToJSArray returns a JavaScript Array for the wrapped array.
func IImageArrayToJSArray(array []*IImage) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}
