// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// RecastJSPlugin represents a babylon.js RecastJSPlugin.
// RecastJS navigation plugin
type RecastJSPlugin struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (r *RecastJSPlugin) JSObject() js.Value { return r.p }

// RecastJSPlugin returns a RecastJSPlugin JavaScript class.
func (b *Babylon) RecastJSPlugin() *RecastJSPlugin {
	p := b.ctx.Get("RecastJSPlugin")
	return RecastJSPluginFromJSObject(p)
}

// RecastJSPluginFromJSObject returns a wrapped RecastJSPlugin JavaScript class.
func RecastJSPluginFromJSObject(p js.Value) *RecastJSPlugin {
	return &RecastJSPlugin{p: p}
}

// NewRecastJSPluginOpts contains optional parameters for NewRecastJSPlugin.
type NewRecastJSPluginOpts struct {
	RecastInjection *interface{}
}

// NewRecastJSPlugin returns a new RecastJSPlugin object.
//
// https://doc.babylonjs.com/api/classes/babylon.recastjsplugin
func (b *Babylon) NewRecastJSPlugin(opts *NewRecastJSPluginOpts) *RecastJSPlugin {
	if opts == nil {
		opts = &NewRecastJSPluginOpts{}
	}

	p := b.ctx.Get("RecastJSPlugin").New(opts.RecastInjection)
	return RecastJSPluginFromJSObject(p)
}

// TODO: methods
