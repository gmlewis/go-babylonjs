// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// WebXRControllerTeleportation represents a babylon.js WebXRControllerTeleportation.
// Enables teleportation
type WebXRControllerTeleportation struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (w *WebXRControllerTeleportation) JSObject() js.Value { return w.p }

// WebXRControllerTeleportation returns a WebXRControllerTeleportation JavaScript class.
func (ba *Babylon) WebXRControllerTeleportation() *WebXRControllerTeleportation {
	p := ba.ctx.Get("WebXRControllerTeleportation")
	return WebXRControllerTeleportationFromJSObject(p)
}

// WebXRControllerTeleportationFromJSObject returns a wrapped WebXRControllerTeleportation JavaScript class.
func WebXRControllerTeleportationFromJSObject(p js.Value) *WebXRControllerTeleportation {
	return &WebXRControllerTeleportation{p: p}
}

// NewWebXRControllerTeleportationOpts contains optional parameters for NewWebXRControllerTeleportation.
type NewWebXRControllerTeleportationOpts struct {
	FloorMeshes *[]AbstractMesh
}

// NewWebXRControllerTeleportation returns a new WebXRControllerTeleportation object.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrcontrollerteleportation
func (ba *Babylon) NewWebXRControllerTeleportation(input *WebXRInput, opts *NewWebXRControllerTeleportationOpts) *WebXRControllerTeleportation {
	if opts == nil {
		opts = &NewWebXRControllerTeleportationOpts{}
	}

	p := ba.ctx.Get("WebXRControllerTeleportation").New(input.JSObject(), opts.FloorMeshes.JSObject())
	return WebXRControllerTeleportationFromJSObject(p)
}

// TODO: methods
