// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Color3 represents a babylon.js Color3.
// Class used to hold a RBG color
type Color3 struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (c *Color3) JSObject() js.Value { return c.p }

// Color3 returns a Color3 JavaScript class.
func (ba *Babylon) Color3() *Color3 {
	p := ba.ctx.Get("Color3")
	return Color3FromJSObject(p)
}

// Color3FromJSObject returns a wrapped Color3 JavaScript class.
func Color3FromJSObject(p js.Value) *Color3 {
	return &Color3{p: p}
}

// NewColor3Opts contains optional parameters for NewColor3.
type NewColor3Opts struct {
	R *JSFloat64

	G *JSFloat64

	B *JSFloat64
}

// NewColor3 returns a new Color3 object.
//
// https://doc.babylonjs.com/api/classes/babylon.color3
func (ba *Babylon) NewColor3(opts *NewColor3Opts) *Color3 {
	if opts == nil {
		opts = &NewColor3Opts{}
	}

	p := ba.ctx.Get("Color3").New(opts.R.JSObject(), opts.G.JSObject(), opts.B.JSObject())
	return Color3FromJSObject(p)
}

// TODO: methods
