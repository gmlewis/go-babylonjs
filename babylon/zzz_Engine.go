// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Engine represents a babylon.js Engine.
// The engine class is responsible for interfacing with all lower-level APIs such as WebGL and Audio
type Engine struct{ *ThinEngine }

// JSObject returns the underlying js.Value.
func (e *Engine) JSObject() js.Value { return e.p }

// Engine returns a Engine JavaScript class.
func (b *Babylon) Engine() *Engine {
	p := b.ctx.Get("Engine")
	return EngineFromJSObject(p)
}

// EngineFromJSObject returns a wrapped Engine JavaScript class.
func EngineFromJSObject(p js.Value) *Engine {
	return &Engine{ThinEngineFromJSObject(p)}
}

// NewEngine returns a new Engine object.
//
// https://doc.babylonjs.com/api/classes/babylon.engine
func (b *Babylon) NewEngine(todo parameters) *Engine {
	p := b.ctx.Get("Engine").New(todo)
	return EngineFromJSObject(p)
}

// TODO: methods
