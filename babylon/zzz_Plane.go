// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Plane represents a babylon.js Plane.
// Represens a plane by the equation ax &#43; by &#43; cz &#43; d = 0
type Plane struct{}

// JSObject returns the underlying js.Value.
func (p *Plane) JSObject() js.Value { return p.p }

// Plane returns a Plane JavaScript class.
func (b *Babylon) Plane() *Plane {
	p := b.ctx.Get("Plane")
	return PlaneFromJSObject(p)
}

// PlaneFromJSObject returns a wrapped Plane JavaScript class.
func PlaneFromJSObject(p js.Value) *Plane {
	return &Plane{p: p}
}

// NewPlane returns a new Plane object.
//
// https://doc.babylonjs.com/api/classes/babylon.plane
func (b *Babylon) NewPlane(todo parameters) *Plane {
	p := b.ctx.Get("Plane").New(todo)
	return PlaneFromJSObject(p)
}

// TODO: methods
