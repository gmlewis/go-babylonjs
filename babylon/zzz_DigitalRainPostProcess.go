// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// DigitalRainPostProcess represents a babylon.js DigitalRainPostProcess.
// DigitalRainPostProcess helps rendering everithing in digital rain.

//
// Simmply add it to your scene and let the nerd that lives in you have fun.
// Example usage: var pp = new DigitalRainPostProcess(&amp;quot;digitalRain&amp;quot;, &amp;quot;20px Monospace&amp;quot;, camera);
type DigitalRainPostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (d *DigitalRainPostProcess) JSObject() js.Value { return d.p }

// DigitalRainPostProcess returns a DigitalRainPostProcess JavaScript class.
func (b *Babylon) DigitalRainPostProcess() *DigitalRainPostProcess {
	p := b.ctx.Get("DigitalRainPostProcess")
	return DigitalRainPostProcessFromJSObject(p)
}

// DigitalRainPostProcessFromJSObject returns a wrapped DigitalRainPostProcess JavaScript class.
func DigitalRainPostProcessFromJSObject(p js.Value) *DigitalRainPostProcess {
	return &DigitalRainPostProcess{PostProcessFromJSObject(p)}
}

// NewDigitalRainPostProcess returns a new DigitalRainPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.digitalrainpostprocess
func (b *Babylon) NewDigitalRainPostProcess(todo parameters) *DigitalRainPostProcess {
	p := b.ctx.Get("DigitalRainPostProcess").New(todo)
	return DigitalRainPostProcessFromJSObject(p)
}

// TODO: methods
