// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Container represents a babylon.js Container.
// Root class for 2D containers
//
// See: http://doc.babylonjs.com/how_to/gui#containers
type Container struct{ *Control }

// JSObject returns the underlying js.Value.
func (c *Container) JSObject() js.Value { return c.p }

// Container returns a Container JavaScript class.
func (ba *Babylon) Container() *Container {
	p := ba.ctx.Get("Container")
	return ContainerFromJSObject(p)
}

// ContainerFromJSObject returns a wrapped Container JavaScript class.
func ContainerFromJSObject(p js.Value) *Container {
	return &Container{ControlFromJSObject(p)}
}

// NewContainerOpts contains optional parameters for NewContainer.
type NewContainerOpts struct {
	Name *JSString
}

// NewContainer returns a new Container object.
//
// https://doc.babylonjs.com/api/classes/babylon.container
func (ba *Babylon) NewContainer(opts *NewContainerOpts) *Container {
	if opts == nil {
		opts = &NewContainerOpts{}
	}

	p := ba.ctx.Get("Container").New(opts.Name)
	return ContainerFromJSObject(p)
}

// TODO: methods
