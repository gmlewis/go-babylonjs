// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SubEmitter represents a babylon.js SubEmitter.
// Sub emitter class used to emit particles from an existing particle
type SubEmitter struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (s *SubEmitter) JSObject() js.Value { return s.p }

// SubEmitter returns a SubEmitter JavaScript class.
func (ba *Babylon) SubEmitter() *SubEmitter {
	p := ba.ctx.Get("SubEmitter")
	return SubEmitterFromJSObject(p)
}

// SubEmitterFromJSObject returns a wrapped SubEmitter JavaScript class.
func SubEmitterFromJSObject(p js.Value) *SubEmitter {
	return &SubEmitter{p: p}
}

// NewSubEmitter returns a new SubEmitter object.
//
// https://doc.babylonjs.com/api/classes/babylon.subemitter
func (ba *Babylon) NewSubEmitter(particleSystem *ParticleSystem) *SubEmitter {
	p := ba.ctx.Get("SubEmitter").New(particleSystem.JSObject())
	return SubEmitterFromJSObject(p)
}

// TODO: methods
