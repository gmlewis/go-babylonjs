// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Material represents a babylon.js Material.
// Base class for the main features of a material in Babylon.js
type Material struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (m *Material) JSObject() js.Value { return m.p }

// Material returns a Material JavaScript class.
func (b *Babylon) Material() *Material {
	p := b.ctx.Get("Material")
	return MaterialFromJSObject(p)
}

// MaterialFromJSObject returns a wrapped Material JavaScript class.
func MaterialFromJSObject(p js.Value) *Material {
	return &Material{p: p}
}

// NewMaterialOpts contains optional parameters for NewMaterial.
type NewMaterialOpts struct {
	DoNotAdd *bool
}

// NewMaterial returns a new Material object.
//
// https://doc.babylonjs.com/api/classes/babylon.material
func (b *Babylon) NewMaterial(name string, scene *Scene, opts *NewMaterialOpts) *Material {
	if opts == nil {
		opts = &NewMaterialOpts{}
	}

	p := b.ctx.Get("Material").New(name, scene.JSObject(), opts.DoNotAdd.JSObject())
	return MaterialFromJSObject(p)
}

// TODO: methods
