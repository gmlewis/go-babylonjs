// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PlaneRotationGizmo represents a babylon.js PlaneRotationGizmo.
// Single plane rotation gizmo
type PlaneRotationGizmo struct{ *Gizmo }

// JSObject returns the underlying js.Value.
func (p *PlaneRotationGizmo) JSObject() js.Value { return p.p }

// PlaneRotationGizmo returns a PlaneRotationGizmo JavaScript class.
func (b *Babylon) PlaneRotationGizmo() *PlaneRotationGizmo {
	p := b.ctx.Get("PlaneRotationGizmo")
	return PlaneRotationGizmoFromJSObject(p)
}

// PlaneRotationGizmoFromJSObject returns a wrapped PlaneRotationGizmo JavaScript class.
func PlaneRotationGizmoFromJSObject(p js.Value) *PlaneRotationGizmo {
	return &PlaneRotationGizmo{GizmoFromJSObject(p)}
}

// NewPlaneRotationGizmo returns a new PlaneRotationGizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.planerotationgizmo
func (b *Babylon) NewPlaneRotationGizmo(todo parameters) *PlaneRotationGizmo {
	p := b.ctx.Get("PlaneRotationGizmo").New(todo)
	return PlaneRotationGizmoFromJSObject(p)
}

// TODO: methods
