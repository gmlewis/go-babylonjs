// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PointParticleEmitter represents a babylon.js PointParticleEmitter.
// Particle emitter emitting particles from a point.
// It emits the particles randomly between 2 given directions.
type PointParticleEmitter struct{}

// JSObject returns the underlying js.Value.
func (p *PointParticleEmitter) JSObject() js.Value { return p.p }

// PointParticleEmitter returns a PointParticleEmitter JavaScript class.
func (b *Babylon) PointParticleEmitter() *PointParticleEmitter {
	p := b.ctx.Get("PointParticleEmitter")
	return PointParticleEmitterFromJSObject(p)
}

// PointParticleEmitterFromJSObject returns a wrapped PointParticleEmitter JavaScript class.
func PointParticleEmitterFromJSObject(p js.Value) *PointParticleEmitter {
	return &PointParticleEmitter{p: p}
}

// NewPointParticleEmitter returns a new PointParticleEmitter object.
//
// https://doc.babylonjs.com/api/classes/babylon.pointparticleemitter
func (b *Babylon) NewPointParticleEmitter(todo parameters) *PointParticleEmitter {
	p := b.ctx.Get("PointParticleEmitter").New(todo)
	return PointParticleEmitterFromJSObject(p)
}

// TODO: methods
