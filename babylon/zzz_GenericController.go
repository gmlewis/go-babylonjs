// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// GenericController represents a babylon.js GenericController.
// Generic Controller
type GenericController struct {
	*WebVRController
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (g *GenericController) JSObject() js.Value { return g.p }

// GenericController returns a GenericController JavaScript class.
func (ba *Babylon) GenericController() *GenericController {
	p := ba.ctx.Get("GenericController")
	return GenericControllerFromJSObject(p, ba.ctx)
}

// GenericControllerFromJSObject returns a wrapped GenericController JavaScript class.
func GenericControllerFromJSObject(p js.Value, ctx js.Value) *GenericController {
	return &GenericController{WebVRController: WebVRControllerFromJSObject(p, ctx), ctx: ctx}
}

// NewGenericController returns a new GenericController object.
//
// https://doc.babylonjs.com/api/classes/babylon.genericcontroller
func (ba *Babylon) NewGenericController(vrGamepad interface{}) *GenericController {
	p := ba.ctx.Get("GenericController").New(vrGamepad)
	return GenericControllerFromJSObject(p, ba.ctx)
}

// TODO: methods
