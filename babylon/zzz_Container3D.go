// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Container3D represents a babylon.js Container3D.
// Class used to create containers for controls
type Container3D struct{ *Control3D }

// JSObject returns the underlying js.Value.
func (c *Container3D) JSObject() js.Value { return c.p }

// Container3D returns a Container3D JavaScript class.
func (b *Babylon) Container3D() *Container3D {
	p := b.ctx.Get("Container3D")
	return Container3DFromJSObject(p)
}

// Container3DFromJSObject returns a wrapped Container3D JavaScript class.
func Container3DFromJSObject(p js.Value) *Container3D {
	return &Container3D{Control3DFromJSObject(p)}
}

// NewContainer3D returns a new Container3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.container3d
func (b *Babylon) NewContainer3D(todo parameters) *Container3D {
	p := b.ctx.Get("Container3D").New(todo)
	return Container3DFromJSObject(p)
}

// TODO: methods
