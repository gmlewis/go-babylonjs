// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Vector3 represents a babylon.js Vector3.
// Class used to store (x,y,z) vector representation
// A Vector3 is the main object used in 3D geometry
// It can represent etiher the coordinates of a point the space, either a direction
// Reminder: js uses a left handed forward facing system
type Vector3 struct{}

// JSObject returns the underlying js.Value.
func (v *Vector3) JSObject() js.Value { return v.p }

// Vector3 returns a Vector3 JavaScript class.
func (b *Babylon) Vector3() *Vector3 {
	p := b.ctx.Get("Vector3")
	return Vector3FromJSObject(p)
}

// Vector3FromJSObject returns a wrapped Vector3 JavaScript class.
func Vector3FromJSObject(p js.Value) *Vector3 {
	return &Vector3{p: p}
}

// NewVector3 returns a new Vector3 object.
//
// https://doc.babylonjs.com/api/classes/babylon.vector3
func (b *Babylon) NewVector3(todo parameters) *Vector3 {
	p := b.ctx.Get("Vector3").New(todo)
	return Vector3FromJSObject(p)
}

// TODO: methods
