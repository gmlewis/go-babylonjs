// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// EventState represents a babylon.js EventState.
// A class serves as a medium between the observable and its observers
type EventState struct{}

// JSObject returns the underlying js.Value.
func (e *EventState) JSObject() js.Value { return e.p }

// EventState returns a EventState JavaScript class.
func (b *Babylon) EventState() *EventState {
	p := b.ctx.Get("EventState")
	return EventStateFromJSObject(p)
}

// EventStateFromJSObject returns a wrapped EventState JavaScript class.
func EventStateFromJSObject(p js.Value) *EventState {
	return &EventState{p: p}
}

// NewEventState returns a new EventState object.
//
// https://doc.babylonjs.com/api/classes/babylon.eventstate
func (b *Babylon) NewEventState(todo parameters) *EventState {
	p := b.ctx.Get("EventState").New(todo)
	return EventStateFromJSObject(p)
}

// TODO: methods
