// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ArcRotateCameraInputsManager represents a babylon.js ArcRotateCameraInputsManager.
// Default Inputs manager for the ArcRotateCamera.
// It groups all the default supported inputs for ease of use.
// Interface representing an arc rotate camera inputs manager

//
// See: http://doc.babylonjs.com/how_to/customizing_camera_inputs
type ArcRotateCameraInputsManager struct {
	*CameraInputsManager
	*ArcRotateCamera
}

// JSObject returns the underlying js.Value.
func (a *ArcRotateCameraInputsManager) JSObject() js.Value { return a.p }

// ArcRotateCameraInputsManager returns a ArcRotateCameraInputsManager JavaScript class.
func (b *Babylon) ArcRotateCameraInputsManager() *ArcRotateCameraInputsManager {
	p := b.ctx.Get("ArcRotateCameraInputsManager")
	return ArcRotateCameraInputsManagerFromJSObject(p)
}

// ArcRotateCameraInputsManagerFromJSObject returns a wrapped ArcRotateCameraInputsManager JavaScript class.
func ArcRotateCameraInputsManagerFromJSObject(p js.Value) *ArcRotateCameraInputsManager {
	return &ArcRotateCameraInputsManager{CameraInputsManagerFromJSObject(p)}
}

// NewArcRotateCameraInputsManager returns a new ArcRotateCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerainputsmanager
func (b *Babylon) NewArcRotateCameraInputsManager(todo parameters) *ArcRotateCameraInputsManager {
	p := b.ctx.Get("ArcRotateCameraInputsManager").New(todo)
	return ArcRotateCameraInputsManagerFromJSObject(p)
}

// TODO: methods
