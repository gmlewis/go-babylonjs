// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// StereoscopicInterlacePostProcess represents a babylon.js StereoscopicInterlacePostProcess.
// StereoscopicInterlacePostProcess used to render stereo views from a rigged camera
type StereoscopicInterlacePostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (s *StereoscopicInterlacePostProcess) JSObject() js.Value { return s.p }

// StereoscopicInterlacePostProcess returns a StereoscopicInterlacePostProcess JavaScript class.
func (b *Babylon) StereoscopicInterlacePostProcess() *StereoscopicInterlacePostProcess {
	p := b.ctx.Get("StereoscopicInterlacePostProcess")
	return StereoscopicInterlacePostProcessFromJSObject(p)
}

// StereoscopicInterlacePostProcessFromJSObject returns a wrapped StereoscopicInterlacePostProcess JavaScript class.
func StereoscopicInterlacePostProcessFromJSObject(p js.Value) *StereoscopicInterlacePostProcess {
	return &StereoscopicInterlacePostProcess{PostProcessFromJSObject(p)}
}

// NewStereoscopicInterlacePostProcessOpts contains optional parameters for NewStereoscopicInterlacePostProcess.
type NewStereoscopicInterlacePostProcessOpts struct {
	SamplingMode *float64

	Engine *Engine

	Reusable *bool
}

// NewStereoscopicInterlacePostProcess returns a new StereoscopicInterlacePostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.stereoscopicinterlacepostprocess
func (b *Babylon) NewStereoscopicInterlacePostProcess(name string, rigCameras *Camera, isStereoscopicHoriz bool, opts *NewStereoscopicInterlacePostProcessOpts) *StereoscopicInterlacePostProcess {
	if opts == nil {
		opts = &NewStereoscopicInterlacePostProcessOpts{}
	}

	p := b.ctx.Get("StereoscopicInterlacePostProcess").New(name, rigCameras.JSObject(), isStereoscopicHoriz.JSObject(), opts.SamplingMode, opts.Engine.JSObject(), opts.Reusable.JSObject())
	return StereoscopicInterlacePostProcessFromJSObject(p)
}

// TODO: methods
