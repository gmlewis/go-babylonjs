// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ColorCurves represents a babylon.js ColorCurves.
// The color grading curves provide additional color adjustmnent that is applied after any color grading transform (3D LUT).
// They allow basic adjustment of saturation and small exposure adjustments, along with color filter tinting to provide white balance adjustment or more stylistic effects.
// These are similar to controls found in many professional imaging or colorist software. The global controls are applied to the entire image. For advanced tuning, extra controls are provided to adjust the shadow, midtone and highlight areas of the image;
// corresponding to low luminance, medium luminance, and high luminance areas respectively.
type ColorCurves struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (c *ColorCurves) JSObject() js.Value { return c.p }

// ColorCurves returns a ColorCurves JavaScript class.
func (ba *Babylon) ColorCurves() *ColorCurves {
	p := ba.ctx.Get("ColorCurves")
	return ColorCurvesFromJSObject(p, ba.ctx)
}

// ColorCurvesFromJSObject returns a wrapped ColorCurves JavaScript class.
func ColorCurvesFromJSObject(p js.Value, ctx js.Value) *ColorCurves {
	return &ColorCurves{p: p, ctx: ctx}
}

// ColorCurvesArrayToJSArray returns a JavaScript Array for the wrapped array.
func ColorCurvesArrayToJSArray(array []*ColorCurves) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// ColorCurvesBindOpts contains optional parameters for ColorCurves.Bind.
type ColorCurvesBindOpts struct {
	PositiveUniform *string
	NeutralUniform  *string
	NegativeUniform *string
}

// Bind calls the Bind method on the ColorCurves object.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#bind
func (c *ColorCurves) Bind(colorCurves *ColorCurves, effect *Effect, opts *ColorCurvesBindOpts) {
	if opts == nil {
		opts = &ColorCurvesBindOpts{}
	}

	args := make([]interface{}, 0, 2+3)

	args = append(args, colorCurves.JSObject())
	args = append(args, effect.JSObject())

	if opts.PositiveUniform == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.PositiveUniform)
	}
	if opts.NeutralUniform == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.NeutralUniform)
	}
	if opts.NegativeUniform == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.NegativeUniform)
	}

	c.p.Call("Bind", args...)
}

// Clone calls the Clone method on the ColorCurves object.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#clone
func (c *ColorCurves) Clone() *ColorCurves {

	retVal := c.p.Call("clone")
	return ColorCurvesFromJSObject(retVal, c.ctx)
}

// GetClassName calls the GetClassName method on the ColorCurves object.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#getclassname
func (c *ColorCurves) GetClassName() string {

	retVal := c.p.Call("getClassName")
	return retVal.String()
}

// Parse calls the Parse method on the ColorCurves object.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#parse
func (c *ColorCurves) Parse(source interface{}) *ColorCurves {

	args := make([]interface{}, 0, 1+0)

	args = append(args, source)

	retVal := c.p.Call("Parse", args...)
	return ColorCurvesFromJSObject(retVal, c.ctx)
}

// PrepareUniforms calls the PrepareUniforms method on the ColorCurves object.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#prepareuniforms
func (c *ColorCurves) PrepareUniforms(uniformsList string) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, uniformsList)

	c.p.Call("PrepareUniforms", args...)
}

// Serialize calls the Serialize method on the ColorCurves object.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#serialize
func (c *ColorCurves) Serialize() interface{} {

	retVal := c.p.Call("serialize")
	return retVal
}

// GlobalDensity returns the GlobalDensity property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#globaldensity
func (c *ColorCurves) GlobalDensity() float64 {
	retVal := c.p.Get("globalDensity")
	return retVal.Float()
}

// SetGlobalDensity sets the GlobalDensity property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#globaldensity
func (c *ColorCurves) SetGlobalDensity(globalDensity float64) *ColorCurves {
	c.p.Set("globalDensity", globalDensity)
	return c
}

// GlobalExposure returns the GlobalExposure property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#globalexposure
func (c *ColorCurves) GlobalExposure() float64 {
	retVal := c.p.Get("globalExposure")
	return retVal.Float()
}

// SetGlobalExposure sets the GlobalExposure property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#globalexposure
func (c *ColorCurves) SetGlobalExposure(globalExposure float64) *ColorCurves {
	c.p.Set("globalExposure", globalExposure)
	return c
}

// GlobalHue returns the GlobalHue property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#globalhue
func (c *ColorCurves) GlobalHue() float64 {
	retVal := c.p.Get("globalHue")
	return retVal.Float()
}

// SetGlobalHue sets the GlobalHue property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#globalhue
func (c *ColorCurves) SetGlobalHue(globalHue float64) *ColorCurves {
	c.p.Set("globalHue", globalHue)
	return c
}

// GlobalSaturation returns the GlobalSaturation property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#globalsaturation
func (c *ColorCurves) GlobalSaturation() float64 {
	retVal := c.p.Get("globalSaturation")
	return retVal.Float()
}

// SetGlobalSaturation sets the GlobalSaturation property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#globalsaturation
func (c *ColorCurves) SetGlobalSaturation(globalSaturation float64) *ColorCurves {
	c.p.Set("globalSaturation", globalSaturation)
	return c
}

// HighlightsDensity returns the HighlightsDensity property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#highlightsdensity
func (c *ColorCurves) HighlightsDensity() float64 {
	retVal := c.p.Get("highlightsDensity")
	return retVal.Float()
}

// SetHighlightsDensity sets the HighlightsDensity property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#highlightsdensity
func (c *ColorCurves) SetHighlightsDensity(highlightsDensity float64) *ColorCurves {
	c.p.Set("highlightsDensity", highlightsDensity)
	return c
}

// HighlightsExposure returns the HighlightsExposure property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#highlightsexposure
func (c *ColorCurves) HighlightsExposure() float64 {
	retVal := c.p.Get("highlightsExposure")
	return retVal.Float()
}

// SetHighlightsExposure sets the HighlightsExposure property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#highlightsexposure
func (c *ColorCurves) SetHighlightsExposure(highlightsExposure float64) *ColorCurves {
	c.p.Set("highlightsExposure", highlightsExposure)
	return c
}

// HighlightsHue returns the HighlightsHue property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#highlightshue
func (c *ColorCurves) HighlightsHue() float64 {
	retVal := c.p.Get("highlightsHue")
	return retVal.Float()
}

// SetHighlightsHue sets the HighlightsHue property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#highlightshue
func (c *ColorCurves) SetHighlightsHue(highlightsHue float64) *ColorCurves {
	c.p.Set("highlightsHue", highlightsHue)
	return c
}

// HighlightsSaturation returns the HighlightsSaturation property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#highlightssaturation
func (c *ColorCurves) HighlightsSaturation() float64 {
	retVal := c.p.Get("highlightsSaturation")
	return retVal.Float()
}

// SetHighlightsSaturation sets the HighlightsSaturation property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#highlightssaturation
func (c *ColorCurves) SetHighlightsSaturation(highlightsSaturation float64) *ColorCurves {
	c.p.Set("highlightsSaturation", highlightsSaturation)
	return c
}

// MidtonesDensity returns the MidtonesDensity property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#midtonesdensity
func (c *ColorCurves) MidtonesDensity() float64 {
	retVal := c.p.Get("midtonesDensity")
	return retVal.Float()
}

// SetMidtonesDensity sets the MidtonesDensity property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#midtonesdensity
func (c *ColorCurves) SetMidtonesDensity(midtonesDensity float64) *ColorCurves {
	c.p.Set("midtonesDensity", midtonesDensity)
	return c
}

// MidtonesExposure returns the MidtonesExposure property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#midtonesexposure
func (c *ColorCurves) MidtonesExposure() float64 {
	retVal := c.p.Get("midtonesExposure")
	return retVal.Float()
}

// SetMidtonesExposure sets the MidtonesExposure property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#midtonesexposure
func (c *ColorCurves) SetMidtonesExposure(midtonesExposure float64) *ColorCurves {
	c.p.Set("midtonesExposure", midtonesExposure)
	return c
}

// MidtonesHue returns the MidtonesHue property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#midtoneshue
func (c *ColorCurves) MidtonesHue() float64 {
	retVal := c.p.Get("midtonesHue")
	return retVal.Float()
}

// SetMidtonesHue sets the MidtonesHue property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#midtoneshue
func (c *ColorCurves) SetMidtonesHue(midtonesHue float64) *ColorCurves {
	c.p.Set("midtonesHue", midtonesHue)
	return c
}

// MidtonesSaturation returns the MidtonesSaturation property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#midtonessaturation
func (c *ColorCurves) MidtonesSaturation() float64 {
	retVal := c.p.Get("midtonesSaturation")
	return retVal.Float()
}

// SetMidtonesSaturation sets the MidtonesSaturation property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#midtonessaturation
func (c *ColorCurves) SetMidtonesSaturation(midtonesSaturation float64) *ColorCurves {
	c.p.Set("midtonesSaturation", midtonesSaturation)
	return c
}

// ShadowsDensity returns the ShadowsDensity property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#shadowsdensity
func (c *ColorCurves) ShadowsDensity() float64 {
	retVal := c.p.Get("shadowsDensity")
	return retVal.Float()
}

// SetShadowsDensity sets the ShadowsDensity property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#shadowsdensity
func (c *ColorCurves) SetShadowsDensity(shadowsDensity float64) *ColorCurves {
	c.p.Set("shadowsDensity", shadowsDensity)
	return c
}

// ShadowsExposure returns the ShadowsExposure property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#shadowsexposure
func (c *ColorCurves) ShadowsExposure() float64 {
	retVal := c.p.Get("shadowsExposure")
	return retVal.Float()
}

// SetShadowsExposure sets the ShadowsExposure property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#shadowsexposure
func (c *ColorCurves) SetShadowsExposure(shadowsExposure float64) *ColorCurves {
	c.p.Set("shadowsExposure", shadowsExposure)
	return c
}

// ShadowsHue returns the ShadowsHue property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#shadowshue
func (c *ColorCurves) ShadowsHue() float64 {
	retVal := c.p.Get("shadowsHue")
	return retVal.Float()
}

// SetShadowsHue sets the ShadowsHue property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#shadowshue
func (c *ColorCurves) SetShadowsHue(shadowsHue float64) *ColorCurves {
	c.p.Set("shadowsHue", shadowsHue)
	return c
}

// ShadowsSaturation returns the ShadowsSaturation property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#shadowssaturation
func (c *ColorCurves) ShadowsSaturation() float64 {
	retVal := c.p.Get("shadowsSaturation")
	return retVal.Float()
}

// SetShadowsSaturation sets the ShadowsSaturation property of class ColorCurves.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves#shadowssaturation
func (c *ColorCurves) SetShadowsSaturation(shadowsSaturation float64) *ColorCurves {
	c.p.Set("shadowsSaturation", shadowsSaturation)
	return c
}
