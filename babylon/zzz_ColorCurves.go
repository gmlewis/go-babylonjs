// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ColorCurves represents a babylon.js ColorCurves.
// The color grading curves provide additional color adjustmnent that is applied after any color grading transform (3D LUT).
// They allow basic adjustment of saturation and small exposure adjustments, along with color filter tinting to provide white balance adjustment or more stylistic effects.
// These are similar to controls found in many professional imaging or colorist software. The global controls are applied to the entire image. For advanced tuning, extra controls are provided to adjust the shadow, midtone and highlight areas of the image;
// corresponding to low luminance, medium luminance, and high luminance areas respectively.
type ColorCurves struct{}

// JSObject returns the underlying js.Value.
func (c *ColorCurves) JSObject() js.Value { return c.p }

// ColorCurves returns a ColorCurves JavaScript class.
func (b *Babylon) ColorCurves() *ColorCurves {
	p := b.ctx.Get("ColorCurves")
	return ColorCurvesFromJSObject(p)
}

// ColorCurvesFromJSObject returns a wrapped ColorCurves JavaScript class.
func ColorCurvesFromJSObject(p js.Value) *ColorCurves {
	return &ColorCurves{p: p}
}

// NewColorCurves returns a new ColorCurves object.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcurves
func (b *Babylon) NewColorCurves(todo parameters) *ColorCurves {
	p := b.ctx.Get("ColorCurves").New(todo)
	return ColorCurvesFromJSObject(p)
}

// TODO: methods
