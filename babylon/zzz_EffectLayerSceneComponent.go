// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// EffectLayerSceneComponent represents a babylon.js EffectLayerSceneComponent.
// Defines the layer scene component responsible to manage any effect layers
// in a given scene.
type EffectLayerSceneComponent struct{}

// JSObject returns the underlying js.Value.
func (e *EffectLayerSceneComponent) JSObject() js.Value { return e.p }

// EffectLayerSceneComponent returns a EffectLayerSceneComponent JavaScript class.
func (b *Babylon) EffectLayerSceneComponent() *EffectLayerSceneComponent {
	p := b.ctx.Get("EffectLayerSceneComponent")
	return EffectLayerSceneComponentFromJSObject(p)
}

// EffectLayerSceneComponentFromJSObject returns a wrapped EffectLayerSceneComponent JavaScript class.
func EffectLayerSceneComponentFromJSObject(p js.Value) *EffectLayerSceneComponent {
	return &EffectLayerSceneComponent{p: p}
}

// NewEffectLayerSceneComponent returns a new EffectLayerSceneComponent object.
//
// https://doc.babylonjs.com/api/classes/babylon.effectlayerscenecomponent
func (b *Babylon) NewEffectLayerSceneComponent(todo parameters) *EffectLayerSceneComponent {
	p := b.ctx.Get("EffectLayerSceneComponent").New(todo)
	return EffectLayerSceneComponentFromJSObject(p)
}

// TODO: methods
