// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// RadioButton represents a babylon.js RadioButton.
// Class used to create radio button controls
type RadioButton struct {
	*Control
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (r *RadioButton) JSObject() js.Value { return r.p }

// RadioButton returns a RadioButton JavaScript class.
func (ba *Babylon) RadioButton() *RadioButton {
	p := ba.ctx.Get("RadioButton")
	return RadioButtonFromJSObject(p, ba.ctx)
}

// RadioButtonFromJSObject returns a wrapped RadioButton JavaScript class.
func RadioButtonFromJSObject(p js.Value, ctx js.Value) *RadioButton {
	return &RadioButton{Control: ControlFromJSObject(p, ctx), ctx: ctx}
}

// RadioButtonArrayToJSArray returns a JavaScript Array for the wrapped array.
func RadioButtonArrayToJSArray(array []*RadioButton) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewRadioButtonOpts contains optional parameters for NewRadioButton.
type NewRadioButtonOpts struct {
	Name *string
}

// NewRadioButton returns a new RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton
func (ba *Babylon) NewRadioButton(opts *NewRadioButtonOpts) *RadioButton {
	if opts == nil {
		opts = &NewRadioButtonOpts{}
	}

	args := make([]interface{}, 0, 0+1)

	if opts.Name == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Name)
	}

	p := ba.ctx.Get("RadioButton").New(args...)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// AddRadioButtonWithHeader calls the AddRadioButtonWithHeader method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#addradiobuttonwithheader
func (r *RadioButton) AddRadioButtonWithHeader(title string, group string, isChecked bool, onValueChanged func()) *StackPanel {

	args := make([]interface{}, 0, 4+0)

	args = append(args, title)
	args = append(args, group)
	args = append(args, isChecked)
	args = append(args, js.FuncOf(func(this js.Value, args []js.Value) interface{} { onValueChanged(); return nil }))

	retVal := r.p.Call("AddRadioButtonWithHeader", args...)
	return StackPanelFromJSObject(retVal, r.ctx)
}

// Contains calls the Contains method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#contains
func (r *RadioButton) Contains(x float64, y float64) bool {

	args := make([]interface{}, 0, 2+0)

	args = append(args, x)
	args = append(args, y)

	retVal := r.p.Call("contains", args...)
	return retVal.Bool()
}

// Dispose calls the Dispose method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#dispose
func (r *RadioButton) Dispose() {

	r.p.Call("dispose")
}

// GetAscendantOfClass calls the GetAscendantOfClass method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#getascendantofclass
func (r *RadioButton) GetAscendantOfClass(className string) *Control {

	args := make([]interface{}, 0, 1+0)

	args = append(args, className)

	retVal := r.p.Call("getAscendantOfClass", args...)
	return ControlFromJSObject(retVal, r.ctx)
}

// GetClassName calls the GetClassName method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#getclassname
func (r *RadioButton) GetClassName() string {

	retVal := r.p.Call("getClassName")
	return retVal.String()
}

// RadioButtonGetDescendantsOpts contains optional parameters for RadioButton.GetDescendants.
type RadioButtonGetDescendantsOpts struct {
	DirectDescendantsOnly *bool
	Predicate             func()
}

// GetDescendants calls the GetDescendants method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#getdescendants
func (r *RadioButton) GetDescendants(opts *RadioButtonGetDescendantsOpts) *Control {
	if opts == nil {
		opts = &RadioButtonGetDescendantsOpts{}
	}

	args := make([]interface{}, 0, 0+2)

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	retVal := r.p.Call("getDescendants", args...)
	return ControlFromJSObject(retVal, r.ctx)
}

// RadioButtonGetDescendantsToRefOpts contains optional parameters for RadioButton.GetDescendantsToRef.
type RadioButtonGetDescendantsToRefOpts struct {
	DirectDescendantsOnly *bool
	Predicate             func()
}

// GetDescendantsToRef calls the GetDescendantsToRef method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#getdescendantstoref
func (r *RadioButton) GetDescendantsToRef(results *Control, opts *RadioButtonGetDescendantsToRefOpts) {
	if opts == nil {
		opts = &RadioButtonGetDescendantsToRefOpts{}
	}

	args := make([]interface{}, 0, 1+2)

	args = append(args, results.JSObject())

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	r.p.Call("getDescendantsToRef", args...)
}

// GetLocalCoordinates calls the GetLocalCoordinates method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#getlocalcoordinates
func (r *RadioButton) GetLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := r.p.Call("getLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, r.ctx)
}

// GetLocalCoordinatesToRef calls the GetLocalCoordinatesToRef method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#getlocalcoordinatestoref
func (r *RadioButton) GetLocalCoordinatesToRef(globalCoordinates *Vector2, result *Vector2) *Control {

	args := make([]interface{}, 0, 2+0)

	args = append(args, globalCoordinates.JSObject())
	args = append(args, result.JSObject())

	retVal := r.p.Call("getLocalCoordinatesToRef", args...)
	return ControlFromJSObject(retVal, r.ctx)
}

// GetParentLocalCoordinates calls the GetParentLocalCoordinates method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#getparentlocalcoordinates
func (r *RadioButton) GetParentLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := r.p.Call("getParentLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, r.ctx)
}

// IsAscendant calls the IsAscendant method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#isascendant
func (r *RadioButton) IsAscendant(container *Control) bool {

	args := make([]interface{}, 0, 1+0)

	args = append(args, container.JSObject())

	retVal := r.p.Call("isAscendant", args...)
	return retVal.Bool()
}

// LinkWithMesh calls the LinkWithMesh method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkwithmesh
func (r *RadioButton) LinkWithMesh(mesh *AbstractMesh) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, mesh.JSObject())

	r.p.Call("linkWithMesh", args...)
}

// MoveToVector3 calls the MoveToVector3 method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#movetovector3
func (r *RadioButton) MoveToVector3(position *Vector3, scene *Scene) {

	args := make([]interface{}, 0, 2+0)

	args = append(args, position.JSObject())
	args = append(args, scene.JSObject())

	r.p.Call("moveToVector3", args...)
}

// _draw calls the _draw method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#_draw
func (r *RadioButton) _draw(context js.Value) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, context)

	r.p.Call("_draw", args...)
}

// _onPointerDown calls the _onPointerDown method on the RadioButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#_onpointerdown
func (r *RadioButton) _onPointerDown(target *Control, coordinates *Vector2, pointerId float64, buttonIndex float64) bool {

	args := make([]interface{}, 0, 4+0)

	args = append(args, target.JSObject())
	args = append(args, coordinates.JSObject())
	args = append(args, pointerId)
	args = append(args, buttonIndex)

	retVal := r.p.Call("_onPointerDown", args...)
	return retVal.Bool()
}

/*

// AllowAlphaInheritance returns the AllowAlphaInheritance property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#allowalphainheritance
func (r *RadioButton) AllowAlphaInheritance(AllowAlphaInheritance bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(AllowAlphaInheritance)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetAllowAlphaInheritance sets the AllowAlphaInheritance property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#allowalphainheritance
func (r *RadioButton) SetAllowAlphaInheritance(AllowAlphaInheritance bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(AllowAlphaInheritance)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Alpha returns the Alpha property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#alpha
func (r *RadioButton) Alpha(alpha float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(alpha)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetAlpha sets the Alpha property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#alpha
func (r *RadioButton) SetAlpha(alpha float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(alpha)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Background returns the Background property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#background
func (r *RadioButton) Background(background string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(background)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetBackground sets the Background property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#background
func (r *RadioButton) SetBackground(background string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(background)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// CenterX returns the CenterX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#centerx
func (r *RadioButton) CenterX(centerX float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(centerX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetCenterX sets the CenterX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#centerx
func (r *RadioButton) SetCenterX(centerX float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(centerX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// CenterY returns the CenterY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#centery
func (r *RadioButton) CenterY(centerY float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(centerY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetCenterY sets the CenterY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#centery
func (r *RadioButton) SetCenterY(centerY float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(centerY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// CheckSizeRatio returns the CheckSizeRatio property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#checksizeratio
func (r *RadioButton) CheckSizeRatio(checkSizeRatio float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(checkSizeRatio)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetCheckSizeRatio sets the CheckSizeRatio property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#checksizeratio
func (r *RadioButton) SetCheckSizeRatio(checkSizeRatio float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(checkSizeRatio)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// ClipChildren returns the ClipChildren property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#clipchildren
func (r *RadioButton) ClipChildren(clipChildren bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(clipChildren)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetClipChildren sets the ClipChildren property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#clipchildren
func (r *RadioButton) SetClipChildren(clipChildren bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(clipChildren)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// ClipContent returns the ClipContent property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#clipcontent
func (r *RadioButton) ClipContent(clipContent bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(clipContent)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetClipContent sets the ClipContent property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#clipcontent
func (r *RadioButton) SetClipContent(clipContent bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(clipContent)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Color returns the Color property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#color
func (r *RadioButton) Color(color string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(color)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetColor sets the Color property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#color
func (r *RadioButton) SetColor(color string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(color)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// DisabledColor returns the DisabledColor property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#disabledcolor
func (r *RadioButton) DisabledColor(disabledColor string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(disabledColor)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetDisabledColor sets the DisabledColor property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#disabledcolor
func (r *RadioButton) SetDisabledColor(disabledColor string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(disabledColor)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// FontFamily returns the FontFamily property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontfamily
func (r *RadioButton) FontFamily(fontFamily string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontFamily)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetFontFamily sets the FontFamily property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontfamily
func (r *RadioButton) SetFontFamily(fontFamily string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontFamily)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// FontOffset returns the FontOffset property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontoffset
func (r *RadioButton) FontOffset(fontOffset js.Value) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontOffset)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetFontOffset sets the FontOffset property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontoffset
func (r *RadioButton) SetFontOffset(fontOffset js.Value) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontOffset)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// FontSize returns the FontSize property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontsize
func (r *RadioButton) FontSize(fontSize string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontSize)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetFontSize sets the FontSize property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontsize
func (r *RadioButton) SetFontSize(fontSize string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontSize)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// FontSizeInPixels returns the FontSizeInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontsizeinpixels
func (r *RadioButton) FontSizeInPixels(fontSizeInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontSizeInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetFontSizeInPixels sets the FontSizeInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontsizeinpixels
func (r *RadioButton) SetFontSizeInPixels(fontSizeInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontSizeInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// FontStyle returns the FontStyle property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontstyle
func (r *RadioButton) FontStyle(fontStyle string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontStyle)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetFontStyle sets the FontStyle property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontstyle
func (r *RadioButton) SetFontStyle(fontStyle string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontStyle)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// FontWeight returns the FontWeight property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontweight
func (r *RadioButton) FontWeight(fontWeight string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontWeight)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetFontWeight sets the FontWeight property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#fontweight
func (r *RadioButton) SetFontWeight(fontWeight string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(fontWeight)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Group returns the Group property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#group
func (r *RadioButton) Group(group string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(group)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetGroup sets the Group property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#group
func (r *RadioButton) SetGroup(group string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(group)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_CENTER returns the HORIZONTAL_ALIGNMENT_CENTER property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#horizontal_alignment_center
func (r *RadioButton) HORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(HORIZONTAL_ALIGNMENT_CENTER)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_CENTER sets the HORIZONTAL_ALIGNMENT_CENTER property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#horizontal_alignment_center
func (r *RadioButton) SetHORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(HORIZONTAL_ALIGNMENT_CENTER)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_LEFT returns the HORIZONTAL_ALIGNMENT_LEFT property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#horizontal_alignment_left
func (r *RadioButton) HORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(HORIZONTAL_ALIGNMENT_LEFT)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_LEFT sets the HORIZONTAL_ALIGNMENT_LEFT property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#horizontal_alignment_left
func (r *RadioButton) SetHORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(HORIZONTAL_ALIGNMENT_LEFT)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_RIGHT returns the HORIZONTAL_ALIGNMENT_RIGHT property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#horizontal_alignment_right
func (r *RadioButton) HORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_RIGHT sets the HORIZONTAL_ALIGNMENT_RIGHT property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#horizontal_alignment_right
func (r *RadioButton) SetHORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Height returns the Height property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#height
func (r *RadioButton) Height(height string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(height)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetHeight sets the Height property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#height
func (r *RadioButton) SetHeight(height string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(height)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// HeightInPixels returns the HeightInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#heightinpixels
func (r *RadioButton) HeightInPixels(heightInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(heightInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetHeightInPixels sets the HeightInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#heightinpixels
func (r *RadioButton) SetHeightInPixels(heightInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(heightInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// HorizontalAlignment returns the HorizontalAlignment property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#horizontalalignment
func (r *RadioButton) HorizontalAlignment(horizontalAlignment float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(horizontalAlignment)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetHorizontalAlignment sets the HorizontalAlignment property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#horizontalalignment
func (r *RadioButton) SetHorizontalAlignment(horizontalAlignment float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(horizontalAlignment)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Host returns the Host property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#host
func (r *RadioButton) Host(host *AdvancedDynamicTexture) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(host.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetHost sets the Host property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#host
func (r *RadioButton) SetHost(host *AdvancedDynamicTexture) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(host.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// HoverCursor returns the HoverCursor property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#hovercursor
func (r *RadioButton) HoverCursor(hoverCursor string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(hoverCursor)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetHoverCursor sets the HoverCursor property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#hovercursor
func (r *RadioButton) SetHoverCursor(hoverCursor string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(hoverCursor)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// IsChecked returns the IsChecked property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ischecked
func (r *RadioButton) IsChecked(isChecked bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isChecked)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetIsChecked sets the IsChecked property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ischecked
func (r *RadioButton) SetIsChecked(isChecked bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isChecked)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// IsDirty returns the IsDirty property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#isdirty
func (r *RadioButton) IsDirty(isDirty bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isDirty)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetIsDirty sets the IsDirty property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#isdirty
func (r *RadioButton) SetIsDirty(isDirty bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isDirty)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// IsEnabled returns the IsEnabled property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#isenabled
func (r *RadioButton) IsEnabled(isEnabled bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isEnabled)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetIsEnabled sets the IsEnabled property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#isenabled
func (r *RadioButton) SetIsEnabled(isEnabled bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isEnabled)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// IsFocusInvisible returns the IsFocusInvisible property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#isfocusinvisible
func (r *RadioButton) IsFocusInvisible(isFocusInvisible bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isFocusInvisible)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetIsFocusInvisible sets the IsFocusInvisible property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#isfocusinvisible
func (r *RadioButton) SetIsFocusInvisible(isFocusInvisible bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isFocusInvisible)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// IsHighlighted returns the IsHighlighted property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ishighlighted
func (r *RadioButton) IsHighlighted(isHighlighted bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isHighlighted)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetIsHighlighted sets the IsHighlighted property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ishighlighted
func (r *RadioButton) SetIsHighlighted(isHighlighted bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isHighlighted)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// IsHitTestVisible returns the IsHitTestVisible property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ishittestvisible
func (r *RadioButton) IsHitTestVisible(isHitTestVisible bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isHitTestVisible)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetIsHitTestVisible sets the IsHitTestVisible property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ishittestvisible
func (r *RadioButton) SetIsHitTestVisible(isHitTestVisible bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isHitTestVisible)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// IsPointerBlocker returns the IsPointerBlocker property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ispointerblocker
func (r *RadioButton) IsPointerBlocker(isPointerBlocker bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isPointerBlocker)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetIsPointerBlocker sets the IsPointerBlocker property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ispointerblocker
func (r *RadioButton) SetIsPointerBlocker(isPointerBlocker bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isPointerBlocker)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// IsVisible returns the IsVisible property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#isvisible
func (r *RadioButton) IsVisible(isVisible bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isVisible)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetIsVisible sets the IsVisible property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#isvisible
func (r *RadioButton) SetIsVisible(isVisible bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(isVisible)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Left returns the Left property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#left
func (r *RadioButton) Left(left string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(left)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetLeft sets the Left property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#left
func (r *RadioButton) SetLeft(left string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(left)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// LeftInPixels returns the LeftInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#leftinpixels
func (r *RadioButton) LeftInPixels(leftInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(leftInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetLeftInPixels sets the LeftInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#leftinpixels
func (r *RadioButton) SetLeftInPixels(leftInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(leftInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// LinkOffsetX returns the LinkOffsetX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkoffsetx
func (r *RadioButton) LinkOffsetX(linkOffsetX string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkOffsetX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetLinkOffsetX sets the LinkOffsetX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkoffsetx
func (r *RadioButton) SetLinkOffsetX(linkOffsetX string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkOffsetX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// LinkOffsetXInPixels returns the LinkOffsetXInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkoffsetxinpixels
func (r *RadioButton) LinkOffsetXInPixels(linkOffsetXInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkOffsetXInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetLinkOffsetXInPixels sets the LinkOffsetXInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkoffsetxinpixels
func (r *RadioButton) SetLinkOffsetXInPixels(linkOffsetXInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkOffsetXInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// LinkOffsetY returns the LinkOffsetY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkoffsety
func (r *RadioButton) LinkOffsetY(linkOffsetY string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkOffsetY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetLinkOffsetY sets the LinkOffsetY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkoffsety
func (r *RadioButton) SetLinkOffsetY(linkOffsetY string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkOffsetY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// LinkOffsetYInPixels returns the LinkOffsetYInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkoffsetyinpixels
func (r *RadioButton) LinkOffsetYInPixels(linkOffsetYInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkOffsetYInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetLinkOffsetYInPixels sets the LinkOffsetYInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkoffsetyinpixels
func (r *RadioButton) SetLinkOffsetYInPixels(linkOffsetYInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkOffsetYInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// LinkedMesh returns the LinkedMesh property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkedmesh
func (r *RadioButton) LinkedMesh(linkedMesh *AbstractMesh) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkedMesh.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetLinkedMesh sets the LinkedMesh property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#linkedmesh
func (r *RadioButton) SetLinkedMesh(linkedMesh *AbstractMesh) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(linkedMesh.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Metadata returns the Metadata property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#metadata
func (r *RadioButton) Metadata(metadata interface{}) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(metadata)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetMetadata sets the Metadata property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#metadata
func (r *RadioButton) SetMetadata(metadata interface{}) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(metadata)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#name
func (r *RadioButton) Name(name string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(name)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#name
func (r *RadioButton) SetName(name string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(name)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// NotRenderable returns the NotRenderable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#notrenderable
func (r *RadioButton) NotRenderable(notRenderable bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(notRenderable)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetNotRenderable sets the NotRenderable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#notrenderable
func (r *RadioButton) SetNotRenderable(notRenderable bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(notRenderable)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnAfterDrawObservable returns the OnAfterDrawObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onafterdrawobservable
func (r *RadioButton) OnAfterDrawObservable(onAfterDrawObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onAfterDrawObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnAfterDrawObservable sets the OnAfterDrawObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onafterdrawobservable
func (r *RadioButton) SetOnAfterDrawObservable(onAfterDrawObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onAfterDrawObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnBeforeDrawObservable returns the OnBeforeDrawObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onbeforedrawobservable
func (r *RadioButton) OnBeforeDrawObservable(onBeforeDrawObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onBeforeDrawObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnBeforeDrawObservable sets the OnBeforeDrawObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onbeforedrawobservable
func (r *RadioButton) SetOnBeforeDrawObservable(onBeforeDrawObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onBeforeDrawObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnDirtyObservable returns the OnDirtyObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ondirtyobservable
func (r *RadioButton) OnDirtyObservable(onDirtyObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onDirtyObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnDirtyObservable sets the OnDirtyObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#ondirtyobservable
func (r *RadioButton) SetOnDirtyObservable(onDirtyObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onDirtyObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnIsCheckedChangedObservable returns the OnIsCheckedChangedObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onischeckedchangedobservable
func (r *RadioButton) OnIsCheckedChangedObservable(onIsCheckedChangedObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onIsCheckedChangedObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnIsCheckedChangedObservable sets the OnIsCheckedChangedObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onischeckedchangedobservable
func (r *RadioButton) SetOnIsCheckedChangedObservable(onIsCheckedChangedObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onIsCheckedChangedObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnPointerClickObservable returns the OnPointerClickObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointerclickobservable
func (r *RadioButton) OnPointerClickObservable(onPointerClickObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerClickObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnPointerClickObservable sets the OnPointerClickObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointerclickobservable
func (r *RadioButton) SetOnPointerClickObservable(onPointerClickObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerClickObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnPointerDownObservable returns the OnPointerDownObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointerdownobservable
func (r *RadioButton) OnPointerDownObservable(onPointerDownObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerDownObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnPointerDownObservable sets the OnPointerDownObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointerdownobservable
func (r *RadioButton) SetOnPointerDownObservable(onPointerDownObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerDownObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnPointerEnterObservable returns the OnPointerEnterObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointerenterobservable
func (r *RadioButton) OnPointerEnterObservable(onPointerEnterObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerEnterObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnPointerEnterObservable sets the OnPointerEnterObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointerenterobservable
func (r *RadioButton) SetOnPointerEnterObservable(onPointerEnterObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerEnterObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnPointerMoveObservable returns the OnPointerMoveObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointermoveobservable
func (r *RadioButton) OnPointerMoveObservable(onPointerMoveObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerMoveObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnPointerMoveObservable sets the OnPointerMoveObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointermoveobservable
func (r *RadioButton) SetOnPointerMoveObservable(onPointerMoveObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerMoveObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnPointerOutObservable returns the OnPointerOutObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointeroutobservable
func (r *RadioButton) OnPointerOutObservable(onPointerOutObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerOutObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnPointerOutObservable sets the OnPointerOutObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointeroutobservable
func (r *RadioButton) SetOnPointerOutObservable(onPointerOutObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerOutObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// OnPointerUpObservable returns the OnPointerUpObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointerupobservable
func (r *RadioButton) OnPointerUpObservable(onPointerUpObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerUpObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetOnPointerUpObservable sets the OnPointerUpObservable property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#onpointerupobservable
func (r *RadioButton) SetOnPointerUpObservable(onPointerUpObservable *Observable) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(onPointerUpObservable.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// PaddingBottom returns the PaddingBottom property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingbottom
func (r *RadioButton) PaddingBottom(paddingBottom string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingBottom)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetPaddingBottom sets the PaddingBottom property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingbottom
func (r *RadioButton) SetPaddingBottom(paddingBottom string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingBottom)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// PaddingBottomInPixels returns the PaddingBottomInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingbottominpixels
func (r *RadioButton) PaddingBottomInPixels(paddingBottomInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingBottomInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetPaddingBottomInPixels sets the PaddingBottomInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingbottominpixels
func (r *RadioButton) SetPaddingBottomInPixels(paddingBottomInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingBottomInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// PaddingLeft returns the PaddingLeft property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingleft
func (r *RadioButton) PaddingLeft(paddingLeft string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingLeft)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetPaddingLeft sets the PaddingLeft property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingleft
func (r *RadioButton) SetPaddingLeft(paddingLeft string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingLeft)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// PaddingLeftInPixels returns the PaddingLeftInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingleftinpixels
func (r *RadioButton) PaddingLeftInPixels(paddingLeftInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingLeftInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetPaddingLeftInPixels sets the PaddingLeftInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingleftinpixels
func (r *RadioButton) SetPaddingLeftInPixels(paddingLeftInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingLeftInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// PaddingRight returns the PaddingRight property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingright
func (r *RadioButton) PaddingRight(paddingRight string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingRight)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetPaddingRight sets the PaddingRight property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingright
func (r *RadioButton) SetPaddingRight(paddingRight string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingRight)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// PaddingRightInPixels returns the PaddingRightInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingrightinpixels
func (r *RadioButton) PaddingRightInPixels(paddingRightInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingRightInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetPaddingRightInPixels sets the PaddingRightInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingrightinpixels
func (r *RadioButton) SetPaddingRightInPixels(paddingRightInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingRightInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// PaddingTop returns the PaddingTop property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingtop
func (r *RadioButton) PaddingTop(paddingTop string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingTop)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetPaddingTop sets the PaddingTop property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingtop
func (r *RadioButton) SetPaddingTop(paddingTop string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingTop)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// PaddingTopInPixels returns the PaddingTopInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingtopinpixels
func (r *RadioButton) PaddingTopInPixels(paddingTopInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingTopInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetPaddingTopInPixels sets the PaddingTopInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#paddingtopinpixels
func (r *RadioButton) SetPaddingTopInPixels(paddingTopInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(paddingTopInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Parent returns the Parent property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#parent
func (r *RadioButton) Parent(parent *Container) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(parent.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetParent sets the Parent property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#parent
func (r *RadioButton) SetParent(parent *Container) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(parent.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Rotation returns the Rotation property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#rotation
func (r *RadioButton) Rotation(rotation float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(rotation)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetRotation sets the Rotation property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#rotation
func (r *RadioButton) SetRotation(rotation float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(rotation)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// ScaleX returns the ScaleX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#scalex
func (r *RadioButton) ScaleX(scaleX float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(scaleX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetScaleX sets the ScaleX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#scalex
func (r *RadioButton) SetScaleX(scaleX float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(scaleX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// ScaleY returns the ScaleY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#scaley
func (r *RadioButton) ScaleY(scaleY float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(scaleY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetScaleY sets the ScaleY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#scaley
func (r *RadioButton) SetScaleY(scaleY float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(scaleY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// ShadowBlur returns the ShadowBlur property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#shadowblur
func (r *RadioButton) ShadowBlur(shadowBlur float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(shadowBlur)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetShadowBlur sets the ShadowBlur property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#shadowblur
func (r *RadioButton) SetShadowBlur(shadowBlur float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(shadowBlur)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// ShadowColor returns the ShadowColor property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#shadowcolor
func (r *RadioButton) ShadowColor(shadowColor string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(shadowColor)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetShadowColor sets the ShadowColor property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#shadowcolor
func (r *RadioButton) SetShadowColor(shadowColor string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(shadowColor)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// ShadowOffsetX returns the ShadowOffsetX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#shadowoffsetx
func (r *RadioButton) ShadowOffsetX(shadowOffsetX float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(shadowOffsetX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetShadowOffsetX sets the ShadowOffsetX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#shadowoffsetx
func (r *RadioButton) SetShadowOffsetX(shadowOffsetX float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(shadowOffsetX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// ShadowOffsetY returns the ShadowOffsetY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#shadowoffsety
func (r *RadioButton) ShadowOffsetY(shadowOffsetY float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(shadowOffsetY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetShadowOffsetY sets the ShadowOffsetY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#shadowoffsety
func (r *RadioButton) SetShadowOffsetY(shadowOffsetY float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(shadowOffsetY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Style returns the Style property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#style
func (r *RadioButton) Style(style *Style) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(style.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetStyle sets the Style property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#style
func (r *RadioButton) SetStyle(style *Style) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(style.JSObject())
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Thickness returns the Thickness property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#thickness
func (r *RadioButton) Thickness(thickness float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(thickness)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetThickness sets the Thickness property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#thickness
func (r *RadioButton) SetThickness(thickness float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(thickness)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Top returns the Top property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#top
func (r *RadioButton) Top(top string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(top)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetTop sets the Top property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#top
func (r *RadioButton) SetTop(top string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(top)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// TopInPixels returns the TopInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#topinpixels
func (r *RadioButton) TopInPixels(topInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(topInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetTopInPixels sets the TopInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#topinpixels
func (r *RadioButton) SetTopInPixels(topInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(topInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// TransformCenterX returns the TransformCenterX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#transformcenterx
func (r *RadioButton) TransformCenterX(transformCenterX float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(transformCenterX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetTransformCenterX sets the TransformCenterX property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#transformcenterx
func (r *RadioButton) SetTransformCenterX(transformCenterX float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(transformCenterX)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// TransformCenterY returns the TransformCenterY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#transformcentery
func (r *RadioButton) TransformCenterY(transformCenterY float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(transformCenterY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetTransformCenterY sets the TransformCenterY property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#transformcentery
func (r *RadioButton) SetTransformCenterY(transformCenterY float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(transformCenterY)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// TypeName returns the TypeName property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#typename
func (r *RadioButton) TypeName(typeName string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(typeName)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetTypeName sets the TypeName property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#typename
func (r *RadioButton) SetTypeName(typeName string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(typeName)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// UniqueId returns the UniqueId property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#uniqueid
func (r *RadioButton) UniqueId(uniqueId float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(uniqueId)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetUniqueId sets the UniqueId property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#uniqueid
func (r *RadioButton) SetUniqueId(uniqueId float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(uniqueId)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// UseBitmapCache returns the UseBitmapCache property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#usebitmapcache
func (r *RadioButton) UseBitmapCache(useBitmapCache bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(useBitmapCache)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetUseBitmapCache sets the UseBitmapCache property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#usebitmapcache
func (r *RadioButton) SetUseBitmapCache(useBitmapCache bool) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(useBitmapCache)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_BOTTOM returns the VERTICAL_ALIGNMENT_BOTTOM property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#vertical_alignment_bottom
func (r *RadioButton) VERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(VERTICAL_ALIGNMENT_BOTTOM)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_BOTTOM sets the VERTICAL_ALIGNMENT_BOTTOM property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#vertical_alignment_bottom
func (r *RadioButton) SetVERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(VERTICAL_ALIGNMENT_BOTTOM)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_CENTER returns the VERTICAL_ALIGNMENT_CENTER property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#vertical_alignment_center
func (r *RadioButton) VERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(VERTICAL_ALIGNMENT_CENTER)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_CENTER sets the VERTICAL_ALIGNMENT_CENTER property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#vertical_alignment_center
func (r *RadioButton) SetVERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(VERTICAL_ALIGNMENT_CENTER)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_TOP returns the VERTICAL_ALIGNMENT_TOP property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#vertical_alignment_top
func (r *RadioButton) VERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(VERTICAL_ALIGNMENT_TOP)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_TOP sets the VERTICAL_ALIGNMENT_TOP property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#vertical_alignment_top
func (r *RadioButton) SetVERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(VERTICAL_ALIGNMENT_TOP)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// VerticalAlignment returns the VerticalAlignment property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#verticalalignment
func (r *RadioButton) VerticalAlignment(verticalAlignment float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(verticalAlignment)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetVerticalAlignment sets the VerticalAlignment property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#verticalalignment
func (r *RadioButton) SetVerticalAlignment(verticalAlignment float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(verticalAlignment)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// Width returns the Width property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#width
func (r *RadioButton) Width(width string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(width)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetWidth sets the Width property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#width
func (r *RadioButton) SetWidth(width string) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(width)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// WidthInPixels returns the WidthInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#widthinpixels
func (r *RadioButton) WidthInPixels(widthInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(widthInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetWidthInPixels sets the WidthInPixels property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#widthinpixels
func (r *RadioButton) SetWidthInPixels(widthInPixels float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(widthInPixels)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// ZIndex returns the ZIndex property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#zindex
func (r *RadioButton) ZIndex(zIndex float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(zIndex)
	return RadioButtonFromJSObject(p, ba.ctx)
}

// SetZIndex sets the ZIndex property of class RadioButton.
//
// https://doc.babylonjs.com/api/classes/babylon.radiobutton#zindex
func (r *RadioButton) SetZIndex(zIndex float64) *RadioButton {
	p := ba.ctx.Get("RadioButton").New(zIndex)
	return RadioButtonFromJSObject(p, ba.ctx)
}

*/
