// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IMaterialNormalTextureInfo represents a babylon.js IMaterialNormalTextureInfo.
// Loader interface with additional members.
type IMaterialNormalTextureInfo struct {
	*IMaterialNormalTextureInfo
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IMaterialNormalTextureInfo) JSObject() js.Value { return i.p }

// IMaterialNormalTextureInfo returns a IMaterialNormalTextureInfo JavaScript class.
func (ba *Babylon) IMaterialNormalTextureInfo() *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo")
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// IMaterialNormalTextureInfoFromJSObject returns a wrapped IMaterialNormalTextureInfo JavaScript class.
func IMaterialNormalTextureInfoFromJSObject(p js.Value, ctx js.Value) *IMaterialNormalTextureInfo {
	return &IMaterialNormalTextureInfo{IMaterialNormalTextureInfo: IMaterialNormalTextureInfoFromJSObject(p, ctx), ctx: ctx}
}

// IMaterialNormalTextureInfoArrayToJSArray returns a JavaScript Array for the wrapped array.
func IMaterialNormalTextureInfoArrayToJSArray(array []*IMaterialNormalTextureInfo) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Extensions returns the Extensions property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#extensions
func (i *IMaterialNormalTextureInfo) Extensions(extensions js.Value) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(extensions)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// SetExtensions sets the Extensions property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#extensions
func (i *IMaterialNormalTextureInfo) SetExtensions(extensions js.Value) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(extensions)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// Extras returns the Extras property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#extras
func (i *IMaterialNormalTextureInfo) Extras(extras interface{}) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(extras)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// SetExtras sets the Extras property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#extras
func (i *IMaterialNormalTextureInfo) SetExtras(extras interface{}) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(extras)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#index
func (i *IMaterialNormalTextureInfo) Index(index float64) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(index)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#index
func (i *IMaterialNormalTextureInfo) SetIndex(index float64) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(index)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// Scale returns the Scale property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#scale
func (i *IMaterialNormalTextureInfo) Scale(scale float64) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(scale)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// SetScale sets the Scale property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#scale
func (i *IMaterialNormalTextureInfo) SetScale(scale float64) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(scale)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// TexCoord returns the TexCoord property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#texcoord
func (i *IMaterialNormalTextureInfo) TexCoord(texCoord float64) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(texCoord)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

// SetTexCoord sets the TexCoord property of class IMaterialNormalTextureInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.imaterialnormaltextureinfo#texcoord
func (i *IMaterialNormalTextureInfo) SetTexCoord(texCoord float64) *IMaterialNormalTextureInfo {
	p := ba.ctx.Get("IMaterialNormalTextureInfo").New(texCoord)
	return IMaterialNormalTextureInfoFromJSObject(p, ba.ctx)
}

*/
