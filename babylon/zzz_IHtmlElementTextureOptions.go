// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IHtmlElementTextureOptions represents a babylon.js IHtmlElementTextureOptions.
// Defines the options related to the creation of an HtmlElementTexture
type IHtmlElementTextureOptions struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IHtmlElementTextureOptions) JSObject() js.Value { return i.p }

// IHtmlElementTextureOptions returns a IHtmlElementTextureOptions JavaScript class.
func (ba *Babylon) IHtmlElementTextureOptions() *IHtmlElementTextureOptions {
	p := ba.ctx.Get("IHtmlElementTextureOptions")
	return IHtmlElementTextureOptionsFromJSObject(p, ba.ctx)
}

// IHtmlElementTextureOptionsFromJSObject returns a wrapped IHtmlElementTextureOptions JavaScript class.
func IHtmlElementTextureOptionsFromJSObject(p js.Value, ctx js.Value) *IHtmlElementTextureOptions {
	return &IHtmlElementTextureOptions{p: p, ctx: ctx}
}

// IHtmlElementTextureOptionsArrayToJSArray returns a JavaScript Array for the wrapped array.
func IHtmlElementTextureOptionsArrayToJSArray(array []*IHtmlElementTextureOptions) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Engine returns the Engine property of class IHtmlElementTextureOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ihtmlelementtextureoptions#engine
func (i *IHtmlElementTextureOptions) Engine(engine *ThinEngine) *IHtmlElementTextureOptions {
	p := ba.ctx.Get("IHtmlElementTextureOptions").New(engine.JSObject())
	return IHtmlElementTextureOptionsFromJSObject(p, ba.ctx)
}

// SetEngine sets the Engine property of class IHtmlElementTextureOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ihtmlelementtextureoptions#engine
func (i *IHtmlElementTextureOptions) SetEngine(engine *ThinEngine) *IHtmlElementTextureOptions {
	p := ba.ctx.Get("IHtmlElementTextureOptions").New(engine.JSObject())
	return IHtmlElementTextureOptionsFromJSObject(p, ba.ctx)
}

// GenerateMipMaps returns the GenerateMipMaps property of class IHtmlElementTextureOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ihtmlelementtextureoptions#generatemipmaps
func (i *IHtmlElementTextureOptions) GenerateMipMaps(generateMipMaps bool) *IHtmlElementTextureOptions {
	p := ba.ctx.Get("IHtmlElementTextureOptions").New(generateMipMaps)
	return IHtmlElementTextureOptionsFromJSObject(p, ba.ctx)
}

// SetGenerateMipMaps sets the GenerateMipMaps property of class IHtmlElementTextureOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ihtmlelementtextureoptions#generatemipmaps
func (i *IHtmlElementTextureOptions) SetGenerateMipMaps(generateMipMaps bool) *IHtmlElementTextureOptions {
	p := ba.ctx.Get("IHtmlElementTextureOptions").New(generateMipMaps)
	return IHtmlElementTextureOptionsFromJSObject(p, ba.ctx)
}

// SamplingMode returns the SamplingMode property of class IHtmlElementTextureOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ihtmlelementtextureoptions#samplingmode
func (i *IHtmlElementTextureOptions) SamplingMode(samplingMode float64) *IHtmlElementTextureOptions {
	p := ba.ctx.Get("IHtmlElementTextureOptions").New(samplingMode)
	return IHtmlElementTextureOptionsFromJSObject(p, ba.ctx)
}

// SetSamplingMode sets the SamplingMode property of class IHtmlElementTextureOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ihtmlelementtextureoptions#samplingmode
func (i *IHtmlElementTextureOptions) SetSamplingMode(samplingMode float64) *IHtmlElementTextureOptions {
	p := ba.ctx.Get("IHtmlElementTextureOptions").New(samplingMode)
	return IHtmlElementTextureOptionsFromJSObject(p, ba.ctx)
}

// Scene returns the Scene property of class IHtmlElementTextureOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ihtmlelementtextureoptions#scene
func (i *IHtmlElementTextureOptions) Scene(scene *Scene) *IHtmlElementTextureOptions {
	p := ba.ctx.Get("IHtmlElementTextureOptions").New(scene.JSObject())
	return IHtmlElementTextureOptionsFromJSObject(p, ba.ctx)
}

// SetScene sets the Scene property of class IHtmlElementTextureOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ihtmlelementtextureoptions#scene
func (i *IHtmlElementTextureOptions) SetScene(scene *Scene) *IHtmlElementTextureOptions {
	p := ba.ctx.Get("IHtmlElementTextureOptions").New(scene.JSObject())
	return IHtmlElementTextureOptionsFromJSObject(p, ba.ctx)
}

*/
