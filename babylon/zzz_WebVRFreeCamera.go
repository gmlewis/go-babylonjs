// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// WebVRFreeCamera represents a babylon.js WebVRFreeCamera.
// This represents a WebVR camera.
// The WebVR camera is Babylon&amp;#39;s simple interface to interaction with Windows Mixed Reality, HTC Vive and Oculus Rift.
//
// See: http://doc.babylonjs.com/how_to/webvr_camera
type WebVRFreeCamera struct{ *FreeCamera }

// JSObject returns the underlying js.Value.
func (w *WebVRFreeCamera) JSObject() js.Value { return w.p }

// WebVRFreeCamera returns a WebVRFreeCamera JavaScript class.
func (ba *Babylon) WebVRFreeCamera() *WebVRFreeCamera {
	p := ba.ctx.Get("WebVRFreeCamera")
	return WebVRFreeCameraFromJSObject(p)
}

// WebVRFreeCameraFromJSObject returns a wrapped WebVRFreeCamera JavaScript class.
func WebVRFreeCameraFromJSObject(p js.Value) *WebVRFreeCamera {
	return &WebVRFreeCamera{FreeCameraFromJSObject(p)}
}

// NewWebVRFreeCameraOpts contains optional parameters for NewWebVRFreeCamera.
type NewWebVRFreeCameraOpts struct {
	WebVROptions js.Value
}

// NewWebVRFreeCamera returns a new WebVRFreeCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.webvrfreecamera
func (ba *Babylon) NewWebVRFreeCamera(name string, position *Vector3, scene *Scene, opts *NewWebVRFreeCameraOpts) *WebVRFreeCamera {
	if opts == nil {
		opts = &NewWebVRFreeCameraOpts{}
	}

	p := ba.ctx.Get("WebVRFreeCamera").New(name, position.JSObject(), scene.JSObject(), opts.WebVROptions)
	return WebVRFreeCameraFromJSObject(p)
}

// TODO: methods
