// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// RemapBlock represents a babylon.js RemapBlock.
// Block used to remap a float from a range to a new one
type RemapBlock struct{ *NodeMaterialBlock }

// JSObject returns the underlying js.Value.
func (r *RemapBlock) JSObject() js.Value { return r.p }

// RemapBlock returns a RemapBlock JavaScript class.
func (b *Babylon) RemapBlock() *RemapBlock {
	p := b.ctx.Get("RemapBlock")
	return RemapBlockFromJSObject(p)
}

// RemapBlockFromJSObject returns a wrapped RemapBlock JavaScript class.
func RemapBlockFromJSObject(p js.Value) *RemapBlock {
	return &RemapBlock{NodeMaterialBlockFromJSObject(p)}
}

// NewRemapBlock returns a new RemapBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.remapblock
func (b *Babylon) NewRemapBlock(todo parameters) *RemapBlock {
	p := b.ctx.Get("RemapBlock").New(todo)
	return RemapBlockFromJSObject(p)
}

// TODO: methods
