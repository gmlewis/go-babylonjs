// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IXYZ represents a babylon.js IXYZ.
// Interface for the size containing width and height
type IXYZ struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IXYZ) JSObject() js.Value { return i.p }

// IXYZ returns a IXYZ JavaScript class.
func (ba *Babylon) IXYZ() *IXYZ {
	p := ba.ctx.Get("IXYZ")
	return IXYZFromJSObject(p, ba.ctx)
}

// IXYZFromJSObject returns a wrapped IXYZ JavaScript class.
func IXYZFromJSObject(p js.Value, ctx js.Value) *IXYZ {
	return &IXYZ{p: p, ctx: ctx}
}

// IXYZArrayToJSArray returns a JavaScript Array for the wrapped array.
func IXYZArrayToJSArray(array []*IXYZ) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// X returns the X property of class IXYZ.
//
// https://doc.babylonjs.com/api/classes/babylon.ixyz#x
func (i *IXYZ) X() float64 {
	retVal := i.p.Get("x")
	return retVal.Float()
}

// SetX sets the X property of class IXYZ.
//
// https://doc.babylonjs.com/api/classes/babylon.ixyz#x
func (i *IXYZ) SetX(x float64) *IXYZ {
	i.p.Set("x", x)
	return i
}

// Y returns the Y property of class IXYZ.
//
// https://doc.babylonjs.com/api/classes/babylon.ixyz#y
func (i *IXYZ) Y() float64 {
	retVal := i.p.Get("y")
	return retVal.Float()
}

// SetY sets the Y property of class IXYZ.
//
// https://doc.babylonjs.com/api/classes/babylon.ixyz#y
func (i *IXYZ) SetY(y float64) *IXYZ {
	i.p.Set("y", y)
	return i
}

// Z returns the Z property of class IXYZ.
//
// https://doc.babylonjs.com/api/classes/babylon.ixyz#z
func (i *IXYZ) Z() float64 {
	retVal := i.p.Get("z")
	return retVal.Float()
}

// SetZ sets the Z property of class IXYZ.
//
// https://doc.babylonjs.com/api/classes/babylon.ixyz#z
func (i *IXYZ) SetZ(z float64) *IXYZ {
	i.p.Set("z", z)
	return i
}
