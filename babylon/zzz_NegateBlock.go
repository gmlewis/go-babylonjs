// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// NegateBlock represents a babylon.js NegateBlock.
// Block used to get negative version of a value (i.e. x * -1)
type NegateBlock struct{ *NodeMaterialBlock }

// JSObject returns the underlying js.Value.
func (n *NegateBlock) JSObject() js.Value { return n.p }

// NegateBlock returns a NegateBlock JavaScript class.
func (b *Babylon) NegateBlock() *NegateBlock {
	p := b.ctx.Get("NegateBlock")
	return NegateBlockFromJSObject(p)
}

// NegateBlockFromJSObject returns a wrapped NegateBlock JavaScript class.
func NegateBlockFromJSObject(p js.Value) *NegateBlock {
	return &NegateBlock{NodeMaterialBlockFromJSObject(p)}
}

// NewNegateBlock returns a new NegateBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.negateblock
func (b *Babylon) NewNegateBlock(name string) *NegateBlock {
	p := b.ctx.Get("NegateBlock").New(name)
	return NegateBlockFromJSObject(p)
}

// TODO: methods
