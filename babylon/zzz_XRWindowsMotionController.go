// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// XRWindowsMotionController represents a babylon.js XRWindowsMotionController.
// This class represents a new windows motion controller in XR.
type XRWindowsMotionController struct {
	*WindowsMotionController
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (x *XRWindowsMotionController) JSObject() js.Value { return x.p }

// XRWindowsMotionController returns a XRWindowsMotionController JavaScript class.
func (ba *Babylon) XRWindowsMotionController() *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController")
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// XRWindowsMotionControllerFromJSObject returns a wrapped XRWindowsMotionController JavaScript class.
func XRWindowsMotionControllerFromJSObject(p js.Value, ctx js.Value) *XRWindowsMotionController {
	return &XRWindowsMotionController{WindowsMotionController: WindowsMotionControllerFromJSObject(p, ctx), ctx: ctx}
}

// XRWindowsMotionControllerArrayToJSArray returns a JavaScript Array for the wrapped array.
func XRWindowsMotionControllerArrayToJSArray(array []*XRWindowsMotionController) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewXRWindowsMotionController returns a new XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller
func (ba *Babylon) NewXRWindowsMotionController(gamepadInfo interface{}) *XRWindowsMotionController {

	args := make([]interface{}, 0, 1+0)

	args = append(args, gamepadInfo)

	p := ba.ctx.Get("XRWindowsMotionController").New(args...)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// Dispose calls the Dispose method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#dispose
func (x *XRWindowsMotionController) Dispose() {

	x.p.Call("dispose")
}

/*

// OnThumbstickButtonStateChangedObservable returns the OnThumbstickButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickbuttonstatechangedobservable
func (x *XRWindowsMotionController) OnThumbstickButtonStateChangedObservable(onThumbstickButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnThumbstickButtonStateChangedObservable sets the OnThumbstickButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickbuttonstatechangedobservable
func (x *XRWindowsMotionController) SetOnThumbstickButtonStateChangedObservable(onThumbstickButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnThumbstickStateChangedObservable returns the OnThumbstickStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickstatechangedobservable
func (x *XRWindowsMotionController) OnThumbstickStateChangedObservable(onThumbstickStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnThumbstickStateChangedObservable sets the OnThumbstickStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickstatechangedobservable
func (x *XRWindowsMotionController) SetOnThumbstickStateChangedObservable(onThumbstickStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnThumbstickValuesChangedObservable returns the OnThumbstickValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickvalueschangedobservable
func (x *XRWindowsMotionController) OnThumbstickValuesChangedObservable(onThumbstickValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnThumbstickValuesChangedObservable sets the OnThumbstickValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickvalueschangedobservable
func (x *XRWindowsMotionController) SetOnThumbstickValuesChangedObservable(onThumbstickValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnTrackpadChangedObservable returns the OnTrackpadChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontrackpadchangedobservable
func (x *XRWindowsMotionController) OnTrackpadChangedObservable(onTrackpadChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTrackpadChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnTrackpadChangedObservable sets the OnTrackpadChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontrackpadchangedobservable
func (x *XRWindowsMotionController) SetOnTrackpadChangedObservable(onTrackpadChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTrackpadChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnTrackpadValuesChangedObservable returns the OnTrackpadValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontrackpadvalueschangedobservable
func (x *XRWindowsMotionController) OnTrackpadValuesChangedObservable(onTrackpadValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTrackpadValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnTrackpadValuesChangedObservable sets the OnTrackpadValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontrackpadvalueschangedobservable
func (x *XRWindowsMotionController) SetOnTrackpadValuesChangedObservable(onTrackpadValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTrackpadValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// ThumbstickValues returns the ThumbstickValues property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#thumbstickvalues
func (x *XRWindowsMotionController) ThumbstickValues(thumbstickValues *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(thumbstickValues.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetThumbstickValues sets the ThumbstickValues property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#thumbstickvalues
func (x *XRWindowsMotionController) SetThumbstickValues(thumbstickValues *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(thumbstickValues.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

*/
