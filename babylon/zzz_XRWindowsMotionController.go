// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// XRWindowsMotionController represents a babylon.js XRWindowsMotionController.
// This class represents a new windows motion controller in XR.
type XRWindowsMotionController struct {
	*WindowsMotionController
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (x *XRWindowsMotionController) JSObject() js.Value { return x.p }

// XRWindowsMotionController returns a XRWindowsMotionController JavaScript class.
func (ba *Babylon) XRWindowsMotionController() *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController")
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// XRWindowsMotionControllerFromJSObject returns a wrapped XRWindowsMotionController JavaScript class.
func XRWindowsMotionControllerFromJSObject(p js.Value, ctx js.Value) *XRWindowsMotionController {
	return &XRWindowsMotionController{WindowsMotionController: WindowsMotionControllerFromJSObject(p, ctx), ctx: ctx}
}

// XRWindowsMotionControllerArrayToJSArray returns a JavaScript Array for the wrapped array.
func XRWindowsMotionControllerArrayToJSArray(array []*XRWindowsMotionController) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewXRWindowsMotionController returns a new XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller
func (ba *Babylon) NewXRWindowsMotionController(gamepadInfo interface{}) *XRWindowsMotionController {

	args := make([]interface{}, 0, 1+0)

	args = append(args, gamepadInfo)

	p := ba.ctx.Get("XRWindowsMotionController").New(args...)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// AttachToMesh calls the AttachToMesh method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#attachtomesh
func (x *XRWindowsMotionController) AttachToMesh(mesh *AbstractMesh) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, mesh.JSObject())

	x.p.Call("attachToMesh", args...)
}

// AttachToPoseControlledCamera calls the AttachToPoseControlledCamera method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#attachtoposecontrolledcamera
func (x *XRWindowsMotionController) AttachToPoseControlledCamera(camera *TargetCamera) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, camera.JSObject())

	x.p.Call("attachToPoseControlledCamera", args...)
}

// Dispose calls the Dispose method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#dispose
func (x *XRWindowsMotionController) Dispose() {

	x.p.Call("dispose")
}

// XRWindowsMotionControllerGetForwardRayOpts contains optional parameters for XRWindowsMotionController.GetForwardRay.
type XRWindowsMotionControllerGetForwardRayOpts struct {
	Length *float64
}

// GetForwardRay calls the GetForwardRay method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#getforwardray
func (x *XRWindowsMotionController) GetForwardRay(opts *XRWindowsMotionControllerGetForwardRayOpts) *Ray {
	if opts == nil {
		opts = &XRWindowsMotionControllerGetForwardRayOpts{}
	}

	args := make([]interface{}, 0, 0+1)

	if opts.Length == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Length)
	}

	retVal := x.p.Call("getForwardRay", args...)
	return RayFromJSObject(retVal, x.ctx)
}

// XRWindowsMotionControllerInitControllerMeshOpts contains optional parameters for XRWindowsMotionController.InitControllerMesh.
type XRWindowsMotionControllerInitControllerMeshOpts struct {
	MeshLoaded   *func()
	ForceDefault *bool
}

// InitControllerMesh calls the InitControllerMesh method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#initcontrollermesh
func (x *XRWindowsMotionController) InitControllerMesh(scene *Scene, opts *XRWindowsMotionControllerInitControllerMeshOpts) {
	if opts == nil {
		opts = &XRWindowsMotionControllerInitControllerMeshOpts{}
	}

	args := make([]interface{}, 0, 1+2)

	args = append(args, scene.JSObject())

	if opts.MeshLoaded == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.MeshLoaded)
	}
	if opts.ForceDefault == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.ForceDefault)
	}

	x.p.Call("initControllerMesh", args...)
}

// OnButtonStateChange calls the OnButtonStateChange method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onbuttonstatechange
func (x *XRWindowsMotionController) OnButtonStateChange(callback func()) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, js.FuncOf(func(this js.Value, args []js.Value) interface{} { callback(); return nil }))

	x.p.Call("onButtonStateChange", args...)
}

// Onleftstickchanged calls the Onleftstickchanged method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onleftstickchanged
func (x *XRWindowsMotionController) Onleftstickchanged(callback func()) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, js.FuncOf(func(this js.Value, args []js.Value) interface{} { callback(); return nil }))

	x.p.Call("onleftstickchanged", args...)
}

// Onrightstickchanged calls the Onrightstickchanged method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onrightstickchanged
func (x *XRWindowsMotionController) Onrightstickchanged(callback func()) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, js.FuncOf(func(this js.Value, args []js.Value) interface{} { callback(); return nil }))

	x.p.Call("onrightstickchanged", args...)
}

// Update calls the Update method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#update
func (x *XRWindowsMotionController) Update() {

	x.p.Call("update")
}

// UpdateFromDevice calls the UpdateFromDevice method on the XRWindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#updatefromdevice
func (x *XRWindowsMotionController) UpdateFromDevice(poseData js.Value) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, poseData)

	x.p.Call("updateFromDevice", args...)
}

/*

// BrowserGamepad returns the BrowserGamepad property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#browsergamepad
func (x *XRWindowsMotionController) BrowserGamepad(browserGamepad interface{}) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(browserGamepad)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetBrowserGamepad sets the BrowserGamepad property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#browsergamepad
func (x *XRWindowsMotionController) SetBrowserGamepad(browserGamepad interface{}) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(browserGamepad)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// ControllerType returns the ControllerType property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#controllertype
func (x *XRWindowsMotionController) ControllerType(controllerType *PoseEnabledControllerType) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(controllerType.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetControllerType sets the ControllerType property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#controllertype
func (x *XRWindowsMotionController) SetControllerType(controllerType *PoseEnabledControllerType) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(controllerType.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// DUALSHOCK returns the DUALSHOCK property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#dualshock
func (x *XRWindowsMotionController) DUALSHOCK(DUALSHOCK float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(DUALSHOCK)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetDUALSHOCK sets the DUALSHOCK property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#dualshock
func (x *XRWindowsMotionController) SetDUALSHOCK(DUALSHOCK float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(DUALSHOCK)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// DefaultModel returns the DefaultModel property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#defaultmodel
func (x *XRWindowsMotionController) DefaultModel(defaultModel *AbstractMesh) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(defaultModel.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetDefaultModel sets the DefaultModel property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#defaultmodel
func (x *XRWindowsMotionController) SetDefaultModel(defaultModel *AbstractMesh) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(defaultModel.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// DevicePosition returns the DevicePosition property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#deviceposition
func (x *XRWindowsMotionController) DevicePosition(devicePosition *Vector3) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(devicePosition.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetDevicePosition sets the DevicePosition property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#deviceposition
func (x *XRWindowsMotionController) SetDevicePosition(devicePosition *Vector3) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(devicePosition.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// DeviceRotationQuaternion returns the DeviceRotationQuaternion property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#devicerotationquaternion
func (x *XRWindowsMotionController) DeviceRotationQuaternion(deviceRotationQuaternion *Quaternion) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(deviceRotationQuaternion.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetDeviceRotationQuaternion sets the DeviceRotationQuaternion property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#devicerotationquaternion
func (x *XRWindowsMotionController) SetDeviceRotationQuaternion(deviceRotationQuaternion *Quaternion) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(deviceRotationQuaternion.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// DeviceScaleFactor returns the DeviceScaleFactor property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#devicescalefactor
func (x *XRWindowsMotionController) DeviceScaleFactor(deviceScaleFactor float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(deviceScaleFactor)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetDeviceScaleFactor sets the DeviceScaleFactor property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#devicescalefactor
func (x *XRWindowsMotionController) SetDeviceScaleFactor(deviceScaleFactor float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(deviceScaleFactor)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// GAMEPAD returns the GAMEPAD property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#gamepad
func (x *XRWindowsMotionController) GAMEPAD(GAMEPAD float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(GAMEPAD)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetGAMEPAD sets the GAMEPAD property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#gamepad
func (x *XRWindowsMotionController) SetGAMEPAD(GAMEPAD float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(GAMEPAD)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// GAMEPAD_ID_PREFIX returns the GAMEPAD_ID_PREFIX property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#gamepad_id_prefix
func (x *XRWindowsMotionController) GAMEPAD_ID_PREFIX(GAMEPAD_ID_PREFIX string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(GAMEPAD_ID_PREFIX)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetGAMEPAD_ID_PREFIX sets the GAMEPAD_ID_PREFIX property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#gamepad_id_prefix
func (x *XRWindowsMotionController) SetGAMEPAD_ID_PREFIX(GAMEPAD_ID_PREFIX string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(GAMEPAD_ID_PREFIX)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// GENERIC returns the GENERIC property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#generic
func (x *XRWindowsMotionController) GENERIC(GENERIC float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(GENERIC)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetGENERIC sets the GENERIC property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#generic
func (x *XRWindowsMotionController) SetGENERIC(GENERIC float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(GENERIC)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// Hand returns the Hand property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#hand
func (x *XRWindowsMotionController) Hand(hand string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(hand)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetHand sets the Hand property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#hand
func (x *XRWindowsMotionController) SetHand(hand string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(hand)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// Id returns the Id property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#id
func (x *XRWindowsMotionController) Id(id string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(id)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetId sets the Id property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#id
func (x *XRWindowsMotionController) SetId(id string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(id)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#index
func (x *XRWindowsMotionController) Index(index float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(index)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#index
func (x *XRWindowsMotionController) SetIndex(index float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(index)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// IsConnected returns the IsConnected property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#isconnected
func (x *XRWindowsMotionController) IsConnected(isConnected bool) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(isConnected)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetIsConnected sets the IsConnected property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#isconnected
func (x *XRWindowsMotionController) SetIsConnected(isConnected bool) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(isConnected)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// IsXR returns the IsXR property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#isxr
func (x *XRWindowsMotionController) IsXR(isXR bool) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(isXR)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetIsXR sets the IsXR property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#isxr
func (x *XRWindowsMotionController) SetIsXR(isXR bool) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(isXR)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// LeftStick returns the LeftStick property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#leftstick
func (x *XRWindowsMotionController) LeftStick(leftStick *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(leftStick.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetLeftStick sets the LeftStick property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#leftstick
func (x *XRWindowsMotionController) SetLeftStick(leftStick *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(leftStick.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// MODEL_BASE_URL returns the MODEL_BASE_URL property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#model_base_url
func (x *XRWindowsMotionController) MODEL_BASE_URL(MODEL_BASE_URL string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(MODEL_BASE_URL)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetMODEL_BASE_URL sets the MODEL_BASE_URL property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#model_base_url
func (x *XRWindowsMotionController) SetMODEL_BASE_URL(MODEL_BASE_URL string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(MODEL_BASE_URL)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// MODEL_LEFT_FILENAME returns the MODEL_LEFT_FILENAME property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#model_left_filename
func (x *XRWindowsMotionController) MODEL_LEFT_FILENAME(MODEL_LEFT_FILENAME string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(MODEL_LEFT_FILENAME)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetMODEL_LEFT_FILENAME sets the MODEL_LEFT_FILENAME property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#model_left_filename
func (x *XRWindowsMotionController) SetMODEL_LEFT_FILENAME(MODEL_LEFT_FILENAME string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(MODEL_LEFT_FILENAME)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// MODEL_RIGHT_FILENAME returns the MODEL_RIGHT_FILENAME property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#model_right_filename
func (x *XRWindowsMotionController) MODEL_RIGHT_FILENAME(MODEL_RIGHT_FILENAME string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(MODEL_RIGHT_FILENAME)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetMODEL_RIGHT_FILENAME sets the MODEL_RIGHT_FILENAME property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#model_right_filename
func (x *XRWindowsMotionController) SetMODEL_RIGHT_FILENAME(MODEL_RIGHT_FILENAME string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(MODEL_RIGHT_FILENAME)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// Mesh returns the Mesh property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#mesh
func (x *XRWindowsMotionController) Mesh(mesh *AbstractMesh) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(mesh.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetMesh sets the Mesh property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#mesh
func (x *XRWindowsMotionController) SetMesh(mesh *AbstractMesh) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(mesh.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnGripButtonStateChangedObservable returns the OnGripButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ongripbuttonstatechangedobservable
func (x *XRWindowsMotionController) OnGripButtonStateChangedObservable(onGripButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onGripButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnGripButtonStateChangedObservable sets the OnGripButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ongripbuttonstatechangedobservable
func (x *XRWindowsMotionController) SetOnGripButtonStateChangedObservable(onGripButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onGripButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnMainButtonStateChangedObservable returns the OnMainButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onmainbuttonstatechangedobservable
func (x *XRWindowsMotionController) OnMainButtonStateChangedObservable(onMainButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onMainButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnMainButtonStateChangedObservable sets the OnMainButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onmainbuttonstatechangedobservable
func (x *XRWindowsMotionController) SetOnMainButtonStateChangedObservable(onMainButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onMainButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnMenuButtonStateChangedObservable returns the OnMenuButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onmenubuttonstatechangedobservable
func (x *XRWindowsMotionController) OnMenuButtonStateChangedObservable(onMenuButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onMenuButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnMenuButtonStateChangedObservable sets the OnMenuButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onmenubuttonstatechangedobservable
func (x *XRWindowsMotionController) SetOnMenuButtonStateChangedObservable(onMenuButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onMenuButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnPadStateChangedObservable returns the OnPadStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onpadstatechangedobservable
func (x *XRWindowsMotionController) OnPadStateChangedObservable(onPadStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onPadStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnPadStateChangedObservable sets the OnPadStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onpadstatechangedobservable
func (x *XRWindowsMotionController) SetOnPadStateChangedObservable(onPadStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onPadStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnPadValuesChangedObservable returns the OnPadValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onpadvalueschangedobservable
func (x *XRWindowsMotionController) OnPadValuesChangedObservable(onPadValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onPadValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnPadValuesChangedObservable sets the OnPadValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onpadvalueschangedobservable
func (x *XRWindowsMotionController) SetOnPadValuesChangedObservable(onPadValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onPadValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnSecondaryButtonStateChangedObservable returns the OnSecondaryButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onsecondarybuttonstatechangedobservable
func (x *XRWindowsMotionController) OnSecondaryButtonStateChangedObservable(onSecondaryButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onSecondaryButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnSecondaryButtonStateChangedObservable sets the OnSecondaryButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onsecondarybuttonstatechangedobservable
func (x *XRWindowsMotionController) SetOnSecondaryButtonStateChangedObservable(onSecondaryButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onSecondaryButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnThumbstickButtonStateChangedObservable returns the OnThumbstickButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickbuttonstatechangedobservable
func (x *XRWindowsMotionController) OnThumbstickButtonStateChangedObservable(onThumbstickButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnThumbstickButtonStateChangedObservable sets the OnThumbstickButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickbuttonstatechangedobservable
func (x *XRWindowsMotionController) SetOnThumbstickButtonStateChangedObservable(onThumbstickButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnThumbstickStateChangedObservable returns the OnThumbstickStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickstatechangedobservable
func (x *XRWindowsMotionController) OnThumbstickStateChangedObservable(onThumbstickStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnThumbstickStateChangedObservable sets the OnThumbstickStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickstatechangedobservable
func (x *XRWindowsMotionController) SetOnThumbstickStateChangedObservable(onThumbstickStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnThumbstickValuesChangedObservable returns the OnThumbstickValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickvalueschangedobservable
func (x *XRWindowsMotionController) OnThumbstickValuesChangedObservable(onThumbstickValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnThumbstickValuesChangedObservable sets the OnThumbstickValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#onthumbstickvalueschangedobservable
func (x *XRWindowsMotionController) SetOnThumbstickValuesChangedObservable(onThumbstickValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onThumbstickValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnTouchpadButtonStateChangedObservable returns the OnTouchpadButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontouchpadbuttonstatechangedobservable
func (x *XRWindowsMotionController) OnTouchpadButtonStateChangedObservable(onTouchpadButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTouchpadButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnTouchpadButtonStateChangedObservable sets the OnTouchpadButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontouchpadbuttonstatechangedobservable
func (x *XRWindowsMotionController) SetOnTouchpadButtonStateChangedObservable(onTouchpadButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTouchpadButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnTouchpadValuesChangedObservable returns the OnTouchpadValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontouchpadvalueschangedobservable
func (x *XRWindowsMotionController) OnTouchpadValuesChangedObservable(onTouchpadValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTouchpadValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnTouchpadValuesChangedObservable sets the OnTouchpadValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontouchpadvalueschangedobservable
func (x *XRWindowsMotionController) SetOnTouchpadValuesChangedObservable(onTouchpadValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTouchpadValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnTrackpadChangedObservable returns the OnTrackpadChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontrackpadchangedobservable
func (x *XRWindowsMotionController) OnTrackpadChangedObservable(onTrackpadChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTrackpadChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnTrackpadChangedObservable sets the OnTrackpadChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontrackpadchangedobservable
func (x *XRWindowsMotionController) SetOnTrackpadChangedObservable(onTrackpadChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTrackpadChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnTrackpadValuesChangedObservable returns the OnTrackpadValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontrackpadvalueschangedobservable
func (x *XRWindowsMotionController) OnTrackpadValuesChangedObservable(onTrackpadValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTrackpadValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnTrackpadValuesChangedObservable sets the OnTrackpadValuesChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontrackpadvalueschangedobservable
func (x *XRWindowsMotionController) SetOnTrackpadValuesChangedObservable(onTrackpadValuesChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTrackpadValuesChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnTriggerButtonStateChangedObservable returns the OnTriggerButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontriggerbuttonstatechangedobservable
func (x *XRWindowsMotionController) OnTriggerButtonStateChangedObservable(onTriggerButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTriggerButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnTriggerButtonStateChangedObservable sets the OnTriggerButtonStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontriggerbuttonstatechangedobservable
func (x *XRWindowsMotionController) SetOnTriggerButtonStateChangedObservable(onTriggerButtonStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTriggerButtonStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// OnTriggerStateChangedObservable returns the OnTriggerStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontriggerstatechangedobservable
func (x *XRWindowsMotionController) OnTriggerStateChangedObservable(onTriggerStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTriggerStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetOnTriggerStateChangedObservable sets the OnTriggerStateChangedObservable property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#ontriggerstatechangedobservable
func (x *XRWindowsMotionController) SetOnTriggerStateChangedObservable(onTriggerStateChangedObservable *Observable) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(onTriggerStateChangedObservable.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// POINTING_POSE returns the POINTING_POSE property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#pointing_pose
func (x *XRWindowsMotionController) POINTING_POSE(POINTING_POSE string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(POINTING_POSE)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetPOINTING_POSE sets the POINTING_POSE property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#pointing_pose
func (x *XRWindowsMotionController) SetPOINTING_POSE(POINTING_POSE string) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(POINTING_POSE)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// POSE_ENABLED returns the POSE_ENABLED property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#pose_enabled
func (x *XRWindowsMotionController) POSE_ENABLED(POSE_ENABLED float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(POSE_ENABLED)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetPOSE_ENABLED sets the POSE_ENABLED property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#pose_enabled
func (x *XRWindowsMotionController) SetPOSE_ENABLED(POSE_ENABLED float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(POSE_ENABLED)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// Pad returns the Pad property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#pad
func (x *XRWindowsMotionController) Pad(pad *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(pad.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetPad sets the Pad property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#pad
func (x *XRWindowsMotionController) SetPad(pad *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(pad.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// Position returns the Position property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#position
func (x *XRWindowsMotionController) Position(position *Vector3) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(position.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetPosition sets the Position property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#position
func (x *XRWindowsMotionController) SetPosition(position *Vector3) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(position.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// RawPose returns the RawPose property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#rawpose
func (x *XRWindowsMotionController) RawPose(rawPose js.Value) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(rawPose)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetRawPose sets the RawPose property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#rawpose
func (x *XRWindowsMotionController) SetRawPose(rawPose js.Value) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(rawPose)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// RightStick returns the RightStick property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#rightstick
func (x *XRWindowsMotionController) RightStick(rightStick *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(rightStick.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetRightStick sets the RightStick property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#rightstick
func (x *XRWindowsMotionController) SetRightStick(rightStick *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(rightStick.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// RotationQuaternion returns the RotationQuaternion property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#rotationquaternion
func (x *XRWindowsMotionController) RotationQuaternion(rotationQuaternion *Quaternion) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(rotationQuaternion.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetRotationQuaternion sets the RotationQuaternion property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#rotationquaternion
func (x *XRWindowsMotionController) SetRotationQuaternion(rotationQuaternion *Quaternion) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(rotationQuaternion.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// ThumbstickValues returns the ThumbstickValues property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#thumbstickvalues
func (x *XRWindowsMotionController) ThumbstickValues(thumbstickValues *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(thumbstickValues.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetThumbstickValues sets the ThumbstickValues property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#thumbstickvalues
func (x *XRWindowsMotionController) SetThumbstickValues(thumbstickValues *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(thumbstickValues.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// Trackpad returns the Trackpad property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#trackpad
func (x *XRWindowsMotionController) Trackpad(trackpad *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(trackpad.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetTrackpad sets the Trackpad property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#trackpad
func (x *XRWindowsMotionController) SetTrackpad(trackpad *StickValues) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(trackpad.JSObject())
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// Type returns the Type property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#type
func (x *XRWindowsMotionController) Type(jsType float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(jsType)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetType sets the Type property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#type
func (x *XRWindowsMotionController) SetType(jsType float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(jsType)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// XBOX returns the XBOX property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#xbox
func (x *XRWindowsMotionController) XBOX(XBOX float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(XBOX)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

// SetXBOX sets the XBOX property of class XRWindowsMotionController.
//
// https://doc.babylonjs.com/api/classes/babylon.xrwindowsmotioncontroller#xbox
func (x *XRWindowsMotionController) SetXBOX(XBOX float64) *XRWindowsMotionController {
	p := ba.ctx.Get("XRWindowsMotionController").New(XBOX)
	return XRWindowsMotionControllerFromJSObject(p, ba.ctx)
}

*/
