// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// VertexOutputBlock represents a babylon.js VertexOutputBlock.
// Block used to output the vertex position
type VertexOutputBlock struct {
	*NodeMaterialBlock
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (v *VertexOutputBlock) JSObject() js.Value { return v.p }

// VertexOutputBlock returns a VertexOutputBlock JavaScript class.
func (ba *Babylon) VertexOutputBlock() *VertexOutputBlock {
	p := ba.ctx.Get("VertexOutputBlock")
	return VertexOutputBlockFromJSObject(p, ba.ctx)
}

// VertexOutputBlockFromJSObject returns a wrapped VertexOutputBlock JavaScript class.
func VertexOutputBlockFromJSObject(p js.Value, ctx js.Value) *VertexOutputBlock {
	return &VertexOutputBlock{NodeMaterialBlock: NodeMaterialBlockFromJSObject(p, ctx), ctx: ctx}
}

// VertexOutputBlockArrayToJSArray returns a JavaScript Array for the wrapped array.
func VertexOutputBlockArrayToJSArray(array []*VertexOutputBlock) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewVertexOutputBlock returns a new VertexOutputBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.vertexoutputblock#constructor
func (ba *Babylon) NewVertexOutputBlock(name string) *VertexOutputBlock {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	p := ba.ctx.Get("VertexOutputBlock").New(args...)
	return VertexOutputBlockFromJSObject(p, ba.ctx)
}

// GetClassName calls the GetClassName method on the VertexOutputBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.vertexoutputblock#getclassname
func (v *VertexOutputBlock) GetClassName() string {

	retVal := v.p.Call("getClassName")
	return retVal.String()
}

// Vector returns the Vector property of class VertexOutputBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.vertexoutputblock#vector
func (v *VertexOutputBlock) Vector() *NodeMaterialConnectionPoint {
	retVal := v.p.Get("vector")
	return NodeMaterialConnectionPointFromJSObject(retVal, v.ctx)
}

// SetVector sets the Vector property of class VertexOutputBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.vertexoutputblock#vector
func (v *VertexOutputBlock) SetVector(vector *NodeMaterialConnectionPoint) *VertexOutputBlock {
	v.p.Set("vector", vector.JSObject())
	return v
}
