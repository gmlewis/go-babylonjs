// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// StopSoundAction represents a babylon.js StopSoundAction.
// This defines an action helpful to stop a defined sound on a triggered action.
type StopSoundAction struct {
	*Action
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (s *StopSoundAction) JSObject() js.Value { return s.p }

// StopSoundAction returns a StopSoundAction JavaScript class.
func (ba *Babylon) StopSoundAction() *StopSoundAction {
	p := ba.ctx.Get("StopSoundAction")
	return StopSoundActionFromJSObject(p, ba.ctx)
}

// StopSoundActionFromJSObject returns a wrapped StopSoundAction JavaScript class.
func StopSoundActionFromJSObject(p js.Value, ctx js.Value) *StopSoundAction {
	return &StopSoundAction{Action: ActionFromJSObject(p, ctx), ctx: ctx}
}

// NewStopSoundActionOpts contains optional parameters for NewStopSoundAction.
type NewStopSoundActionOpts struct {
	Condition *Condition
}

// NewStopSoundAction returns a new StopSoundAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.stopsoundaction
func (ba *Babylon) NewStopSoundAction(triggerOptions interface{}, sound *Sound, opts *NewStopSoundActionOpts) *StopSoundAction {
	if opts == nil {
		opts = &NewStopSoundActionOpts{}
	}

	p := ba.ctx.Get("StopSoundAction").New(triggerOptions, sound.JSObject(), opts.Condition.JSObject())
	return StopSoundActionFromJSObject(p, ba.ctx)
}

// TODO: methods
