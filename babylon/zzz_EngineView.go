// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// EngineView represents a babylon.js EngineView.
// Class used to define an additional view for the engine
//
// See: https://doc.babylonjs.com/how_to/multi_canvases
type EngineView struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (e *EngineView) JSObject() js.Value { return e.p }

// EngineView returns a EngineView JavaScript class.
func (ba *Babylon) EngineView() *EngineView {
	p := ba.ctx.Get("EngineView")
	return EngineViewFromJSObject(p, ba.ctx)
}

// EngineViewFromJSObject returns a wrapped EngineView JavaScript class.
func EngineViewFromJSObject(p js.Value, ctx js.Value) *EngineView {
	return &EngineView{p: p, ctx: ctx}
}

// EngineViewArrayToJSArray returns a JavaScript Array for the wrapped array.
func EngineViewArrayToJSArray(array []*EngineView) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Camera returns the Camera property of class EngineView.
//
// https://doc.babylonjs.com/api/classes/babylon.engineview#camera
func (e *EngineView) Camera(camera *Camera) *EngineView {
	p := ba.ctx.Get("EngineView").New(camera.JSObject())
	return EngineViewFromJSObject(p, ba.ctx)
}

// SetCamera sets the Camera property of class EngineView.
//
// https://doc.babylonjs.com/api/classes/babylon.engineview#camera
func (e *EngineView) SetCamera(camera *Camera) *EngineView {
	p := ba.ctx.Get("EngineView").New(camera.JSObject())
	return EngineViewFromJSObject(p, ba.ctx)
}

// Target returns the Target property of class EngineView.
//
// https://doc.babylonjs.com/api/classes/babylon.engineview#target
func (e *EngineView) Target(target js.Value) *EngineView {
	p := ba.ctx.Get("EngineView").New(target)
	return EngineViewFromJSObject(p, ba.ctx)
}

// SetTarget sets the Target property of class EngineView.
//
// https://doc.babylonjs.com/api/classes/babylon.engineview#target
func (e *EngineView) SetTarget(target js.Value) *EngineView {
	p := ba.ctx.Get("EngineView").New(target)
	return EngineViewFromJSObject(p, ba.ctx)
}

*/
