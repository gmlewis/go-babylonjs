// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// NodeMaterialBuildStateSharedData represents a babylon.js NodeMaterialBuildStateSharedData.
// Class used to store shared data between 2 NodeMaterialBuildState
type NodeMaterialBuildStateSharedData struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (n *NodeMaterialBuildStateSharedData) JSObject() js.Value { return n.p }

// NodeMaterialBuildStateSharedData returns a NodeMaterialBuildStateSharedData JavaScript class.
func (ba *Babylon) NodeMaterialBuildStateSharedData() *NodeMaterialBuildStateSharedData {
	p := ba.ctx.Get("NodeMaterialBuildStateSharedData")
	return NodeMaterialBuildStateSharedDataFromJSObject(p, ba.ctx)
}

// NodeMaterialBuildStateSharedDataFromJSObject returns a wrapped NodeMaterialBuildStateSharedData JavaScript class.
func NodeMaterialBuildStateSharedDataFromJSObject(p js.Value, ctx js.Value) *NodeMaterialBuildStateSharedData {
	return &NodeMaterialBuildStateSharedData{p: p, ctx: ctx}
}

// NewNodeMaterialBuildStateSharedData returns a new NodeMaterialBuildStateSharedData object.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata
func (ba *Babylon) NewNodeMaterialBuildStateSharedData() *NodeMaterialBuildStateSharedData {
	p := ba.ctx.Get("NodeMaterialBuildStateSharedData").New()
	return NodeMaterialBuildStateSharedDataFromJSObject(p, ba.ctx)
}

// TODO: methods
