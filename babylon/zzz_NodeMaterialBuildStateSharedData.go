// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// NodeMaterialBuildStateSharedData represents a babylon.js NodeMaterialBuildStateSharedData.
// Class used to store shared data between 2 NodeMaterialBuildState
type NodeMaterialBuildStateSharedData struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (n *NodeMaterialBuildStateSharedData) JSObject() js.Value { return n.p }

// NodeMaterialBuildStateSharedData returns a NodeMaterialBuildStateSharedData JavaScript class.
func (ba *Babylon) NodeMaterialBuildStateSharedData() *NodeMaterialBuildStateSharedData {
	p := ba.ctx.Get("NodeMaterialBuildStateSharedData")
	return NodeMaterialBuildStateSharedDataFromJSObject(p, ba.ctx)
}

// NodeMaterialBuildStateSharedDataFromJSObject returns a wrapped NodeMaterialBuildStateSharedData JavaScript class.
func NodeMaterialBuildStateSharedDataFromJSObject(p js.Value, ctx js.Value) *NodeMaterialBuildStateSharedData {
	return &NodeMaterialBuildStateSharedData{p: p, ctx: ctx}
}

// NodeMaterialBuildStateSharedDataArrayToJSArray returns a JavaScript Array for the wrapped array.
func NodeMaterialBuildStateSharedDataArrayToJSArray(array []*NodeMaterialBuildStateSharedData) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewNodeMaterialBuildStateSharedData returns a new NodeMaterialBuildStateSharedData object.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata
func (ba *Babylon) NewNodeMaterialBuildStateSharedData() *NodeMaterialBuildStateSharedData {

	args := make([]interface{}, 0, 0+0)

	p := ba.ctx.Get("NodeMaterialBuildStateSharedData").New(args...)
	return NodeMaterialBuildStateSharedDataFromJSObject(p, ba.ctx)
}

// EmitErrors calls the EmitErrors method on the NodeMaterialBuildStateSharedData object.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#emiterrors
func (n *NodeMaterialBuildStateSharedData) EmitErrors() {

	n.p.Call("emitErrors")
}

// AnimatedInputs returns the AnimatedInputs property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#animatedinputs
func (n *NodeMaterialBuildStateSharedData) AnimatedInputs() *InputBlock {
	retVal := n.p.Get("animatedInputs")
	return InputBlockFromJSObject(retVal, n.ctx)
}

// SetAnimatedInputs sets the AnimatedInputs property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#animatedinputs
func (n *NodeMaterialBuildStateSharedData) SetAnimatedInputs(animatedInputs *InputBlock) *NodeMaterialBuildStateSharedData {
	n.p.Set("animatedInputs", animatedInputs.JSObject())
	return n
}

// BindableBlocks returns the BindableBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#bindableblocks
func (n *NodeMaterialBuildStateSharedData) BindableBlocks() *NodeMaterialBlock {
	retVal := n.p.Get("bindableBlocks")
	return NodeMaterialBlockFromJSObject(retVal, n.ctx)
}

// SetBindableBlocks sets the BindableBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#bindableblocks
func (n *NodeMaterialBuildStateSharedData) SetBindableBlocks(bindableBlocks *NodeMaterialBlock) *NodeMaterialBuildStateSharedData {
	n.p.Set("bindableBlocks", bindableBlocks.JSObject())
	return n
}

// BlockingBlocks returns the BlockingBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#blockingblocks
func (n *NodeMaterialBuildStateSharedData) BlockingBlocks() *NodeMaterialBlock {
	retVal := n.p.Get("blockingBlocks")
	return NodeMaterialBlockFromJSObject(retVal, n.ctx)
}

// SetBlockingBlocks sets the BlockingBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#blockingblocks
func (n *NodeMaterialBuildStateSharedData) SetBlockingBlocks(blockingBlocks *NodeMaterialBlock) *NodeMaterialBuildStateSharedData {
	n.p.Set("blockingBlocks", blockingBlocks.JSObject())
	return n
}

// BlocksWithDefines returns the BlocksWithDefines property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#blockswithdefines
func (n *NodeMaterialBuildStateSharedData) BlocksWithDefines() *NodeMaterialBlock {
	retVal := n.p.Get("blocksWithDefines")
	return NodeMaterialBlockFromJSObject(retVal, n.ctx)
}

// SetBlocksWithDefines sets the BlocksWithDefines property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#blockswithdefines
func (n *NodeMaterialBuildStateSharedData) SetBlocksWithDefines(blocksWithDefines *NodeMaterialBlock) *NodeMaterialBuildStateSharedData {
	n.p.Set("blocksWithDefines", blocksWithDefines.JSObject())
	return n
}

// BlocksWithFallbacks returns the BlocksWithFallbacks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#blockswithfallbacks
func (n *NodeMaterialBuildStateSharedData) BlocksWithFallbacks() *NodeMaterialBlock {
	retVal := n.p.Get("blocksWithFallbacks")
	return NodeMaterialBlockFromJSObject(retVal, n.ctx)
}

// SetBlocksWithFallbacks sets the BlocksWithFallbacks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#blockswithfallbacks
func (n *NodeMaterialBuildStateSharedData) SetBlocksWithFallbacks(blocksWithFallbacks *NodeMaterialBlock) *NodeMaterialBuildStateSharedData {
	n.p.Set("blocksWithFallbacks", blocksWithFallbacks.JSObject())
	return n
}

// BuildId returns the BuildId property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#buildid
func (n *NodeMaterialBuildStateSharedData) BuildId() float64 {
	retVal := n.p.Get("buildId")
	return retVal.Float()
}

// SetBuildId sets the BuildId property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#buildid
func (n *NodeMaterialBuildStateSharedData) SetBuildId(buildId float64) *NodeMaterialBuildStateSharedData {
	n.p.Set("buildId", buildId)
	return n
}

// Checks returns the Checks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#checks
func (n *NodeMaterialBuildStateSharedData) Checks() js.Value {
	retVal := n.p.Get("checks")
	return retVal
}

// SetChecks sets the Checks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#checks
func (n *NodeMaterialBuildStateSharedData) SetChecks(checks js.Value) *NodeMaterialBuildStateSharedData {
	n.p.Set("checks", checks)
	return n
}

// DefineNames returns the DefineNames property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#definenames
func (n *NodeMaterialBuildStateSharedData) DefineNames() js.Value {
	retVal := n.p.Get("defineNames")
	return retVal
}

// SetDefineNames sets the DefineNames property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#definenames
func (n *NodeMaterialBuildStateSharedData) SetDefineNames(defineNames js.Value) *NodeMaterialBuildStateSharedData {
	n.p.Set("defineNames", defineNames)
	return n
}

// DynamicUniformBlocks returns the DynamicUniformBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#dynamicuniformblocks
func (n *NodeMaterialBuildStateSharedData) DynamicUniformBlocks() *NodeMaterialBlock {
	retVal := n.p.Get("dynamicUniformBlocks")
	return NodeMaterialBlockFromJSObject(retVal, n.ctx)
}

// SetDynamicUniformBlocks sets the DynamicUniformBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#dynamicuniformblocks
func (n *NodeMaterialBuildStateSharedData) SetDynamicUniformBlocks(dynamicUniformBlocks *NodeMaterialBlock) *NodeMaterialBuildStateSharedData {
	n.p.Set("dynamicUniformBlocks", dynamicUniformBlocks.JSObject())
	return n
}

// EmitComments returns the EmitComments property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#emitcomments
func (n *NodeMaterialBuildStateSharedData) EmitComments() bool {
	retVal := n.p.Get("emitComments")
	return retVal.Bool()
}

// SetEmitComments sets the EmitComments property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#emitcomments
func (n *NodeMaterialBuildStateSharedData) SetEmitComments(emitComments bool) *NodeMaterialBuildStateSharedData {
	n.p.Set("emitComments", emitComments)
	return n
}

// Hints returns the Hints property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#hints
func (n *NodeMaterialBuildStateSharedData) Hints() js.Value {
	retVal := n.p.Get("hints")
	return retVal
}

// SetHints sets the Hints property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#hints
func (n *NodeMaterialBuildStateSharedData) SetHints(hints js.Value) *NodeMaterialBuildStateSharedData {
	n.p.Set("hints", hints)
	return n
}

// InputBlocks returns the InputBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#inputblocks
func (n *NodeMaterialBuildStateSharedData) InputBlocks() *InputBlock {
	retVal := n.p.Get("inputBlocks")
	return InputBlockFromJSObject(retVal, n.ctx)
}

// SetInputBlocks sets the InputBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#inputblocks
func (n *NodeMaterialBuildStateSharedData) SetInputBlocks(inputBlocks *InputBlock) *NodeMaterialBuildStateSharedData {
	n.p.Set("inputBlocks", inputBlocks.JSObject())
	return n
}

// RepeatableContentBlocks returns the RepeatableContentBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#repeatablecontentblocks
func (n *NodeMaterialBuildStateSharedData) RepeatableContentBlocks() *NodeMaterialBlock {
	retVal := n.p.Get("repeatableContentBlocks")
	return NodeMaterialBlockFromJSObject(retVal, n.ctx)
}

// SetRepeatableContentBlocks sets the RepeatableContentBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#repeatablecontentblocks
func (n *NodeMaterialBuildStateSharedData) SetRepeatableContentBlocks(repeatableContentBlocks *NodeMaterialBlock) *NodeMaterialBuildStateSharedData {
	n.p.Set("repeatableContentBlocks", repeatableContentBlocks.JSObject())
	return n
}

// Scene returns the Scene property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#scene
func (n *NodeMaterialBuildStateSharedData) Scene() *Scene {
	retVal := n.p.Get("scene")
	return SceneFromJSObject(retVal, n.ctx)
}

// SetScene sets the Scene property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#scene
func (n *NodeMaterialBuildStateSharedData) SetScene(scene *Scene) *NodeMaterialBuildStateSharedData {
	n.p.Set("scene", scene.JSObject())
	return n
}

// Temps returns the Temps property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#temps
func (n *NodeMaterialBuildStateSharedData) Temps() string {
	retVal := n.p.Get("temps")
	return retVal.String()
}

// SetTemps sets the Temps property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#temps
func (n *NodeMaterialBuildStateSharedData) SetTemps(temps string) *NodeMaterialBuildStateSharedData {
	n.p.Set("temps", temps)
	return n
}

// TextureBlocks returns the TextureBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#textureblocks
func (n *NodeMaterialBuildStateSharedData) TextureBlocks() *ReflectionTextureBlock {
	retVal := n.p.Get("textureBlocks")
	return ReflectionTextureBlockFromJSObject(retVal, n.ctx)
}

// SetTextureBlocks sets the TextureBlocks property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#textureblocks
func (n *NodeMaterialBuildStateSharedData) SetTextureBlocks(textureBlocks *ReflectionTextureBlock) *NodeMaterialBuildStateSharedData {
	n.p.Set("textureBlocks", textureBlocks.JSObject())
	return n
}

// VariableNames returns the VariableNames property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#variablenames
func (n *NodeMaterialBuildStateSharedData) VariableNames() js.Value {
	retVal := n.p.Get("variableNames")
	return retVal
}

// SetVariableNames sets the VariableNames property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#variablenames
func (n *NodeMaterialBuildStateSharedData) SetVariableNames(variableNames js.Value) *NodeMaterialBuildStateSharedData {
	n.p.Set("variableNames", variableNames)
	return n
}

// VaryingDeclaration returns the VaryingDeclaration property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#varyingdeclaration
func (n *NodeMaterialBuildStateSharedData) VaryingDeclaration() string {
	retVal := n.p.Get("varyingDeclaration")
	return retVal.String()
}

// SetVaryingDeclaration sets the VaryingDeclaration property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#varyingdeclaration
func (n *NodeMaterialBuildStateSharedData) SetVaryingDeclaration(varyingDeclaration string) *NodeMaterialBuildStateSharedData {
	n.p.Set("varyingDeclaration", varyingDeclaration)
	return n
}

// Varyings returns the Varyings property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#varyings
func (n *NodeMaterialBuildStateSharedData) Varyings() string {
	retVal := n.p.Get("varyings")
	return retVal.String()
}

// SetVaryings sets the Varyings property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#varyings
func (n *NodeMaterialBuildStateSharedData) SetVaryings(varyings string) *NodeMaterialBuildStateSharedData {
	n.p.Set("varyings", varyings)
	return n
}

// Verbose returns the Verbose property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#verbose
func (n *NodeMaterialBuildStateSharedData) Verbose() bool {
	retVal := n.p.Get("verbose")
	return retVal.Bool()
}

// SetVerbose sets the Verbose property of class NodeMaterialBuildStateSharedData.
//
// https://doc.babylonjs.com/api/classes/babylon.nodematerialbuildstateshareddata#verbose
func (n *NodeMaterialBuildStateSharedData) SetVerbose(verbose bool) *NodeMaterialBuildStateSharedData {
	n.p.Set("verbose", verbose)
	return n
}
