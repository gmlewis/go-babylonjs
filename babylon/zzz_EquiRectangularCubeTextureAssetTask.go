// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// EquiRectangularCubeTextureAssetTask represents a babylon.js EquiRectangularCubeTextureAssetTask.
// Define a task used by AssetsManager to load Equirectangular cube textures
type EquiRectangularCubeTextureAssetTask struct{ *AbstractAssetTask }

// JSObject returns the underlying js.Value.
func (e *EquiRectangularCubeTextureAssetTask) JSObject() js.Value { return e.p }

// EquiRectangularCubeTextureAssetTask returns a EquiRectangularCubeTextureAssetTask JavaScript class.
func (ba *Babylon) EquiRectangularCubeTextureAssetTask() *EquiRectangularCubeTextureAssetTask {
	p := ba.ctx.Get("EquiRectangularCubeTextureAssetTask")
	return EquiRectangularCubeTextureAssetTaskFromJSObject(p)
}

// EquiRectangularCubeTextureAssetTaskFromJSObject returns a wrapped EquiRectangularCubeTextureAssetTask JavaScript class.
func EquiRectangularCubeTextureAssetTaskFromJSObject(p js.Value) *EquiRectangularCubeTextureAssetTask {
	return &EquiRectangularCubeTextureAssetTask{AbstractAssetTaskFromJSObject(p)}
}

// NewEquiRectangularCubeTextureAssetTaskOpts contains optional parameters for NewEquiRectangularCubeTextureAssetTask.
type NewEquiRectangularCubeTextureAssetTaskOpts struct {
	NoMipmap *JSBool

	GammaSpace *JSBool
}

// NewEquiRectangularCubeTextureAssetTask returns a new EquiRectangularCubeTextureAssetTask object.
//
// https://doc.babylonjs.com/api/classes/babylon.equirectangularcubetextureassettask
func (ba *Babylon) NewEquiRectangularCubeTextureAssetTask(name string, url string, size float64, opts *NewEquiRectangularCubeTextureAssetTaskOpts) *EquiRectangularCubeTextureAssetTask {
	if opts == nil {
		opts = &NewEquiRectangularCubeTextureAssetTaskOpts{}
	}

	p := ba.ctx.Get("EquiRectangularCubeTextureAssetTask").New(name, url, size, opts.NoMipmap.JSObject(), opts.GammaSpace.JSObject())
	return EquiRectangularCubeTextureAssetTaskFromJSObject(p)
}

// TODO: methods
