// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// MeshAssetTask represents a babylon.js MeshAssetTask.
// Define a task used by AssetsManager to load meshes
type MeshAssetTask struct{ *AbstractAssetTask }

// JSObject returns the underlying js.Value.
func (m *MeshAssetTask) JSObject() js.Value { return m.p }

// MeshAssetTask returns a MeshAssetTask JavaScript class.
func (b *Babylon) MeshAssetTask() *MeshAssetTask {
	p := b.ctx.Get("MeshAssetTask")
	return MeshAssetTaskFromJSObject(p)
}

// MeshAssetTaskFromJSObject returns a wrapped MeshAssetTask JavaScript class.
func MeshAssetTaskFromJSObject(p js.Value) *MeshAssetTask {
	return &MeshAssetTask{AbstractAssetTaskFromJSObject(p)}
}

// NewMeshAssetTask returns a new MeshAssetTask object.
//
// https://doc.babylonjs.com/api/classes/babylon.meshassettask
func (b *Babylon) NewMeshAssetTask(todo parameters) *MeshAssetTask {
	p := b.ctx.Get("MeshAssetTask").New(todo)
	return MeshAssetTaskFromJSObject(p)
}

// TODO: methods
