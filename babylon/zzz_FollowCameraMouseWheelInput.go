// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// FollowCameraMouseWheelInput represents a babylon.js FollowCameraMouseWheelInput.
// Manage the mouse wheel inputs to control a follow camera.
//
// See: http://doc.babylonjs.com/how_to/customizing_camera_inputs
type FollowCameraMouseWheelInput struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (f *FollowCameraMouseWheelInput) JSObject() js.Value { return f.p }

// FollowCameraMouseWheelInput returns a FollowCameraMouseWheelInput JavaScript class.
func (ba *Babylon) FollowCameraMouseWheelInput() *FollowCameraMouseWheelInput {
	p := ba.ctx.Get("FollowCameraMouseWheelInput")
	return FollowCameraMouseWheelInputFromJSObject(p, ba.ctx)
}

// FollowCameraMouseWheelInputFromJSObject returns a wrapped FollowCameraMouseWheelInput JavaScript class.
func FollowCameraMouseWheelInputFromJSObject(p js.Value, ctx js.Value) *FollowCameraMouseWheelInput {
	return &FollowCameraMouseWheelInput{p: p, ctx: ctx}
}

// FollowCameraMouseWheelInputArrayToJSArray returns a JavaScript Array for the wrapped array.
func FollowCameraMouseWheelInputArrayToJSArray(array []*FollowCameraMouseWheelInput) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// FollowCameraMouseWheelInputAttachControlOpts contains optional parameters for FollowCameraMouseWheelInput.AttachControl.
type FollowCameraMouseWheelInputAttachControlOpts struct {
	NoPreventDefault *bool
}

// AttachControl calls the AttachControl method on the FollowCameraMouseWheelInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#attachcontrol
func (f *FollowCameraMouseWheelInput) AttachControl(element js.Value, opts *FollowCameraMouseWheelInputAttachControlOpts) {
	if opts == nil {
		opts = &FollowCameraMouseWheelInputAttachControlOpts{}
	}

	args := make([]interface{}, 0, 1+1)

	args = append(args, element)

	if opts.NoPreventDefault == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.NoPreventDefault)
	}

	f.p.Call("attachControl", args...)
}

// DetachControl calls the DetachControl method on the FollowCameraMouseWheelInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#detachcontrol
func (f *FollowCameraMouseWheelInput) DetachControl(element js.Value) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, element)

	f.p.Call("detachControl", args...)
}

// GetClassName calls the GetClassName method on the FollowCameraMouseWheelInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#getclassname
func (f *FollowCameraMouseWheelInput) GetClassName() string {

	retVal := f.p.Call("getClassName")
	return retVal.String()
}

// GetSimpleName calls the GetSimpleName method on the FollowCameraMouseWheelInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#getsimplename
func (f *FollowCameraMouseWheelInput) GetSimpleName() string {

	retVal := f.p.Call("getSimpleName")
	return retVal.String()
}

// AxisControlHeight returns the AxisControlHeight property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#axiscontrolheight
func (f *FollowCameraMouseWheelInput) AxisControlHeight() bool {
	retVal := f.p.Get("axisControlHeight")
	return retVal.Bool()
}

// SetAxisControlHeight sets the AxisControlHeight property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#axiscontrolheight
func (f *FollowCameraMouseWheelInput) SetAxisControlHeight(axisControlHeight bool) *FollowCameraMouseWheelInput {
	f.p.Set("axisControlHeight", axisControlHeight)
	return f
}

// AxisControlRadius returns the AxisControlRadius property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#axiscontrolradius
func (f *FollowCameraMouseWheelInput) AxisControlRadius() bool {
	retVal := f.p.Get("axisControlRadius")
	return retVal.Bool()
}

// SetAxisControlRadius sets the AxisControlRadius property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#axiscontrolradius
func (f *FollowCameraMouseWheelInput) SetAxisControlRadius(axisControlRadius bool) *FollowCameraMouseWheelInput {
	f.p.Set("axisControlRadius", axisControlRadius)
	return f
}

// AxisControlRotation returns the AxisControlRotation property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#axiscontrolrotation
func (f *FollowCameraMouseWheelInput) AxisControlRotation() bool {
	retVal := f.p.Get("axisControlRotation")
	return retVal.Bool()
}

// SetAxisControlRotation sets the AxisControlRotation property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#axiscontrolrotation
func (f *FollowCameraMouseWheelInput) SetAxisControlRotation(axisControlRotation bool) *FollowCameraMouseWheelInput {
	f.p.Set("axisControlRotation", axisControlRotation)
	return f
}

// Camera returns the Camera property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#camera
func (f *FollowCameraMouseWheelInput) Camera() *FollowCamera {
	retVal := f.p.Get("camera")
	return FollowCameraFromJSObject(retVal, f.ctx)
}

// SetCamera sets the Camera property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#camera
func (f *FollowCameraMouseWheelInput) SetCamera(camera *FollowCamera) *FollowCameraMouseWheelInput {
	f.p.Set("camera", camera.JSObject())
	return f
}

// WheelDeltaPercentage returns the WheelDeltaPercentage property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#wheeldeltapercentage
func (f *FollowCameraMouseWheelInput) WheelDeltaPercentage() float64 {
	retVal := f.p.Get("wheelDeltaPercentage")
	return retVal.Float()
}

// SetWheelDeltaPercentage sets the WheelDeltaPercentage property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#wheeldeltapercentage
func (f *FollowCameraMouseWheelInput) SetWheelDeltaPercentage(wheelDeltaPercentage float64) *FollowCameraMouseWheelInput {
	f.p.Set("wheelDeltaPercentage", wheelDeltaPercentage)
	return f
}

// WheelPrecision returns the WheelPrecision property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#wheelprecision
func (f *FollowCameraMouseWheelInput) WheelPrecision() float64 {
	retVal := f.p.Get("wheelPrecision")
	return retVal.Float()
}

// SetWheelPrecision sets the WheelPrecision property of class FollowCameraMouseWheelInput.
//
// https://doc.babylonjs.com/api/classes/babylon.followcameramousewheelinput#wheelprecision
func (f *FollowCameraMouseWheelInput) SetWheelPrecision(wheelPrecision float64) *FollowCameraMouseWheelInput {
	f.p.Set("wheelPrecision", wheelPrecision)
	return f
}
