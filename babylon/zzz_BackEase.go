// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// BackEase represents a babylon.js BackEase.
// Easing function with a ease back shape (see link below).
//
// See: http://doc.babylonjs.com/babylon101/animations#easing-functions
type BackEase struct{ *EasingFunction }

// JSObject returns the underlying js.Value.
func (b *BackEase) JSObject() js.Value { return b.p }

// BackEase returns a BackEase JavaScript class.
func (ba *Babylon) BackEase() *BackEase {
	p := ba.ctx.Get("BackEase")
	return BackEaseFromJSObject(p)
}

// BackEaseFromJSObject returns a wrapped BackEase JavaScript class.
func BackEaseFromJSObject(p js.Value) *BackEase {
	return &BackEase{EasingFunctionFromJSObject(p)}
}

// NewBackEaseOpts contains optional parameters for NewBackEase.
type NewBackEaseOpts struct {
	Amplitude *JSFloat64
}

// NewBackEase returns a new BackEase object.
//
// https://doc.babylonjs.com/api/classes/babylon.backease
func (ba *Babylon) NewBackEase(opts *NewBackEaseOpts) *BackEase {
	if opts == nil {
		opts = &NewBackEaseOpts{}
	}

	p := ba.ctx.Get("BackEase").New(opts.Amplitude)
	return BackEaseFromJSObject(p)
}

// TODO: methods
