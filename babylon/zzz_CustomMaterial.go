// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// CustomMaterial represents a babylon.js CustomMaterial.
//
type CustomMaterial struct {
	*StandardMaterial
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (c *CustomMaterial) JSObject() js.Value { return c.p }

// CustomMaterial returns a CustomMaterial JavaScript class.
func (ba *Babylon) CustomMaterial() *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial")
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CustomMaterialFromJSObject returns a wrapped CustomMaterial JavaScript class.
func CustomMaterialFromJSObject(p js.Value, ctx js.Value) *CustomMaterial {
	return &CustomMaterial{StandardMaterial: StandardMaterialFromJSObject(p, ctx), ctx: ctx}
}

// NewCustomMaterial returns a new CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial
func (ba *Babylon) NewCustomMaterial(name string, scene *Scene) *CustomMaterial {

	args := make([]interface{}, 0, 2+0)

	args = append(args, name)
	args = append(args, scene.JSObject())

	p := ba.ctx.Get("CustomMaterial").New(args...)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// AddUniform calls the AddUniform method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#adduniform
func (c *CustomMaterial) AddUniform(name string, kind string, param interface{}) *CustomMaterial {

	args := make([]interface{}, 0, 3+0)

	args = append(args, name)
	args = append(args, kind)
	args = append(args, param)

	retVal := c.p.Call("AddUniform", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// AttachAfterBind calls the AttachAfterBind method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#attachafterbind
func (c *CustomMaterial) AttachAfterBind(mesh *Mesh, effect *Effect) {

	args := make([]interface{}, 0, 2+0)

	args = append(args, mesh.JSObject())
	args = append(args, effect.JSObject())

	c.p.Call("AttachAfterBind", args...)
}

// CustomMaterialBindOpts contains optional parameters for CustomMaterial.Bind.
type CustomMaterialBindOpts struct {
	Mesh *Mesh
}

// Bind calls the Bind method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bind
func (c *CustomMaterial) Bind(world *Matrix, opts *CustomMaterialBindOpts) {
	if opts == nil {
		opts = &CustomMaterialBindOpts{}
	}

	args := make([]interface{}, 0, 1+1)

	args = append(args, world.JSObject())

	if opts.Mesh == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Mesh.JSObject())
	}

	c.p.Call("bind", args...)
}

// BindForSubMesh calls the BindForSubMesh method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bindforsubmesh
func (c *CustomMaterial) BindForSubMesh(world *Matrix, mesh *Mesh, subMesh *SubMesh) {

	args := make([]interface{}, 0, 3+0)

	args = append(args, world.JSObject())
	args = append(args, mesh.JSObject())
	args = append(args, subMesh.JSObject())

	c.p.Call("bindForSubMesh", args...)
}

// BindOnlyNormalMatrix calls the BindOnlyNormalMatrix method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bindonlynormalmatrix
func (c *CustomMaterial) BindOnlyNormalMatrix(normalMatrix *Matrix) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, normalMatrix.JSObject())

	c.p.Call("bindOnlyNormalMatrix", args...)
}

// BindOnlyWorldMatrix calls the BindOnlyWorldMatrix method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bindonlyworldmatrix
func (c *CustomMaterial) BindOnlyWorldMatrix(world *Matrix) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, world.JSObject())

	c.p.Call("bindOnlyWorldMatrix", args...)
}

// BindSceneUniformBuffer calls the BindSceneUniformBuffer method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bindsceneuniformbuffer
func (c *CustomMaterial) BindSceneUniformBuffer(effect *Effect, sceneUbo *UniformBuffer) {

	args := make([]interface{}, 0, 2+0)

	args = append(args, effect.JSObject())
	args = append(args, sceneUbo.JSObject())

	c.p.Call("bindSceneUniformBuffer", args...)
}

// BindView calls the BindView method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bindview
func (c *CustomMaterial) BindView(effect *Effect) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, effect.JSObject())

	c.p.Call("bindView", args...)
}

// BindViewProjection calls the BindViewProjection method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bindviewprojection
func (c *CustomMaterial) BindViewProjection(effect *Effect) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, effect.JSObject())

	c.p.Call("bindViewProjection", args...)
}

// BuildUniformLayout calls the BuildUniformLayout method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#builduniformlayout
func (c *CustomMaterial) BuildUniformLayout() {

	args := make([]interface{}, 0, 0+0)

	c.p.Call("buildUniformLayout", args...)
}

// Builder calls the Builder method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#builder
func (c *CustomMaterial) Builder(shaderName string, uniforms string, uniformBuffers string, samplers string, defines js.Value) string {

	args := make([]interface{}, 0, 5+0)

	args = append(args, shaderName)
	args = append(args, uniforms)
	args = append(args, uniformBuffers)
	args = append(args, samplers)
	args = append(args, defines)

	retVal := c.p.Call("Builder", args...)
	return retVal.String()
}

// Clone calls the Clone method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#clone
func (c *CustomMaterial) Clone(name string) *StandardMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	retVal := c.p.Call("clone", args...)
	return StandardMaterialFromJSObject(retVal, c.ctx)
}

// CustomMaterialDisposeOpts contains optional parameters for CustomMaterial.Dispose.
type CustomMaterialDisposeOpts struct {
	ForceDisposeEffect   *bool
	ForceDisposeTextures *bool
}

// Dispose calls the Dispose method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#dispose
func (c *CustomMaterial) Dispose(opts *CustomMaterialDisposeOpts) {
	if opts == nil {
		opts = &CustomMaterialDisposeOpts{}
	}

	args := make([]interface{}, 0, 0+2)

	if opts.ForceDisposeEffect == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.ForceDisposeEffect)
	}
	if opts.ForceDisposeTextures == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.ForceDisposeTextures)
	}

	c.p.Call("dispose", args...)
}

// CustomMaterialForceCompilationOpts contains optional parameters for CustomMaterial.ForceCompilation.
type CustomMaterialForceCompilationOpts struct {
	OnCompiled *func()
	Options    js.Value
	OnError    *func()
}

// ForceCompilation calls the ForceCompilation method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#forcecompilation
func (c *CustomMaterial) ForceCompilation(mesh *AbstractMesh, opts *CustomMaterialForceCompilationOpts) {
	if opts == nil {
		opts = &CustomMaterialForceCompilationOpts{}
	}

	args := make([]interface{}, 0, 1+3)

	args = append(args, mesh.JSObject())

	if opts.OnCompiled == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.OnCompiled)
	}
	if opts.Options == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Options)
	}
	if opts.OnError == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.OnError)
	}

	c.p.Call("forceCompilation", args...)
}

// CustomMaterialForceCompilationAsyncOpts contains optional parameters for CustomMaterial.ForceCompilationAsync.
type CustomMaterialForceCompilationAsyncOpts struct {
	Options js.Value
}

// ForceCompilationAsync calls the ForceCompilationAsync method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#forcecompilationasync
func (c *CustomMaterial) ForceCompilationAsync(mesh *AbstractMesh, opts *CustomMaterialForceCompilationAsyncOpts) {
	if opts == nil {
		opts = &CustomMaterialForceCompilationAsyncOpts{}
	}

	args := make([]interface{}, 0, 1+1)

	args = append(args, mesh.JSObject())

	if opts.Options == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Options)
	}

	c.p.Call("forceCompilationAsync", args...)
}

// Fragment_Before_Fog calls the Fragment_Before_Fog method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragment_before_fog
func (c *CustomMaterial) Fragment_Before_Fog(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Fragment_Before_Fog", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Fragment_Before_FragColor calls the Fragment_Before_FragColor method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragment_before_fragcolor
func (c *CustomMaterial) Fragment_Before_FragColor(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Fragment_Before_FragColor", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Fragment_Before_Lights calls the Fragment_Before_Lights method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragment_before_lights
func (c *CustomMaterial) Fragment_Before_Lights(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Fragment_Before_Lights", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Fragment_Begin calls the Fragment_Begin method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragment_begin
func (c *CustomMaterial) Fragment_Begin(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Fragment_Begin", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Fragment_Custom_Alpha calls the Fragment_Custom_Alpha method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragment_custom_alpha
func (c *CustomMaterial) Fragment_Custom_Alpha(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Fragment_Custom_Alpha", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Fragment_Custom_Diffuse calls the Fragment_Custom_Diffuse method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragment_custom_diffuse
func (c *CustomMaterial) Fragment_Custom_Diffuse(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Fragment_Custom_Diffuse", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Fragment_Definitions calls the Fragment_Definitions method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragment_definitions
func (c *CustomMaterial) Fragment_Definitions(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Fragment_Definitions", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Fragment_MainBegin calls the Fragment_MainBegin method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragment_mainbegin
func (c *CustomMaterial) Fragment_MainBegin(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Fragment_MainBegin", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Freeze calls the Freeze method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#freeze
func (c *CustomMaterial) Freeze() {

	args := make([]interface{}, 0, 0+0)

	c.p.Call("freeze", args...)
}

// GetActiveTextures calls the GetActiveTextures method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#getactivetextures
func (c *CustomMaterial) GetActiveTextures() *BaseTexture {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("getActiveTextures", args...)
	return BaseTextureFromJSObject(retVal, c.ctx)
}

// GetAlphaTestTexture calls the GetAlphaTestTexture method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#getalphatesttexture
func (c *CustomMaterial) GetAlphaTestTexture() *BaseTexture {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("getAlphaTestTexture", args...)
	return BaseTextureFromJSObject(retVal, c.ctx)
}

// GetAnimatables calls the GetAnimatables method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#getanimatables
func (c *CustomMaterial) GetAnimatables() js.Value {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("getAnimatables", args...)
	return retVal
}

// GetBindedMeshes calls the GetBindedMeshes method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#getbindedmeshes
func (c *CustomMaterial) GetBindedMeshes() *AbstractMesh {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("getBindedMeshes", args...)
	return AbstractMeshFromJSObject(retVal, c.ctx)
}

// GetClassName calls the GetClassName method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#getclassname
func (c *CustomMaterial) GetClassName() string {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("getClassName", args...)
	return retVal.String()
}

// GetEffect calls the GetEffect method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#geteffect
func (c *CustomMaterial) GetEffect() *Effect {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("getEffect", args...)
	return EffectFromJSObject(retVal, c.ctx)
}

// GetScene calls the GetScene method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#getscene
func (c *CustomMaterial) GetScene() *Scene {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("getScene", args...)
	return SceneFromJSObject(retVal, c.ctx)
}

// HasTexture calls the HasTexture method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#hastexture
func (c *CustomMaterial) HasTexture(texture *BaseTexture) bool {

	args := make([]interface{}, 0, 1+0)

	args = append(args, texture.JSObject())

	retVal := c.p.Call("hasTexture", args...)
	return retVal.Bool()
}

// CustomMaterialIsReadyOpts contains optional parameters for CustomMaterial.IsReady.
type CustomMaterialIsReadyOpts struct {
	Mesh         *AbstractMesh
	UseInstances *bool
}

// IsReady calls the IsReady method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#isready
func (c *CustomMaterial) IsReady(opts *CustomMaterialIsReadyOpts) bool {
	if opts == nil {
		opts = &CustomMaterialIsReadyOpts{}
	}

	args := make([]interface{}, 0, 0+2)

	if opts.Mesh == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Mesh.JSObject())
	}
	if opts.UseInstances == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.UseInstances)
	}

	retVal := c.p.Call("isReady", args...)
	return retVal.Bool()
}

// CustomMaterialIsReadyForSubMeshOpts contains optional parameters for CustomMaterial.IsReadyForSubMesh.
type CustomMaterialIsReadyForSubMeshOpts struct {
	UseInstances *bool
}

// IsReadyForSubMesh calls the IsReadyForSubMesh method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#isreadyforsubmesh
func (c *CustomMaterial) IsReadyForSubMesh(mesh *AbstractMesh, subMesh *SubMesh, opts *CustomMaterialIsReadyForSubMeshOpts) bool {
	if opts == nil {
		opts = &CustomMaterialIsReadyForSubMeshOpts{}
	}

	args := make([]interface{}, 0, 2+1)

	args = append(args, mesh.JSObject())
	args = append(args, subMesh.JSObject())

	if opts.UseInstances == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.UseInstances)
	}

	retVal := c.p.Call("isReadyForSubMesh", args...)
	return retVal.Bool()
}

// MarkAsDirty calls the MarkAsDirty method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#markasdirty
func (c *CustomMaterial) MarkAsDirty(flag float64) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, flag)

	c.p.Call("markAsDirty", args...)
}

// MarkDirty calls the MarkDirty method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#markdirty
func (c *CustomMaterial) MarkDirty() {

	args := make([]interface{}, 0, 0+0)

	c.p.Call("markDirty", args...)
}

// NeedAlphaBlending calls the NeedAlphaBlending method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#needalphablending
func (c *CustomMaterial) NeedAlphaBlending() bool {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("needAlphaBlending", args...)
	return retVal.Bool()
}

// NeedAlphaBlendingForMesh calls the NeedAlphaBlendingForMesh method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#needalphablendingformesh
func (c *CustomMaterial) NeedAlphaBlendingForMesh(mesh *AbstractMesh) bool {

	args := make([]interface{}, 0, 1+0)

	args = append(args, mesh.JSObject())

	retVal := c.p.Call("needAlphaBlendingForMesh", args...)
	return retVal.Bool()
}

// NeedAlphaTesting calls the NeedAlphaTesting method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#needalphatesting
func (c *CustomMaterial) NeedAlphaTesting() bool {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("needAlphaTesting", args...)
	return retVal.Bool()
}

// Parse calls the Parse method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#parse
func (c *CustomMaterial) Parse(source interface{}, scene *Scene, rootUrl string) *StandardMaterial {

	args := make([]interface{}, 0, 3+0)

	args = append(args, source)
	args = append(args, scene.JSObject())
	args = append(args, rootUrl)

	retVal := c.p.Call("Parse", args...)
	return StandardMaterialFromJSObject(retVal, c.ctx)
}

// ReviewUniform calls the ReviewUniform method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#reviewuniform
func (c *CustomMaterial) ReviewUniform(name string, arr string) string {

	args := make([]interface{}, 0, 2+0)

	args = append(args, name)
	args = append(args, arr)

	retVal := c.p.Call("ReviewUniform", args...)
	return retVal.String()
}

// Serialize calls the Serialize method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#serialize
func (c *CustomMaterial) Serialize() interface{} {

	args := make([]interface{}, 0, 0+0)

	retVal := c.p.Call("serialize", args...)
	return retVal
}

// CustomMaterialToStringOpts contains optional parameters for CustomMaterial.ToString.
type CustomMaterialToStringOpts struct {
	FullDetails *bool
}

// ToString calls the ToString method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#tostring
func (c *CustomMaterial) ToString(opts *CustomMaterialToStringOpts) string {
	if opts == nil {
		opts = &CustomMaterialToStringOpts{}
	}

	args := make([]interface{}, 0, 0+1)

	if opts.FullDetails == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.FullDetails)
	}

	retVal := c.p.Call("toString", args...)
	return retVal.String()
}

// Unbind calls the Unbind method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#unbind
func (c *CustomMaterial) Unbind() {

	args := make([]interface{}, 0, 0+0)

	c.p.Call("unbind", args...)
}

// Unfreeze calls the Unfreeze method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#unfreeze
func (c *CustomMaterial) Unfreeze() {

	args := make([]interface{}, 0, 0+0)

	c.p.Call("unfreeze", args...)
}

// Vertex_Before_NormalUpdated calls the Vertex_Before_NormalUpdated method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#vertex_before_normalupdated
func (c *CustomMaterial) Vertex_Before_NormalUpdated(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Vertex_Before_NormalUpdated", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Vertex_Before_PositionUpdated calls the Vertex_Before_PositionUpdated method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#vertex_before_positionupdated
func (c *CustomMaterial) Vertex_Before_PositionUpdated(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Vertex_Before_PositionUpdated", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Vertex_Begin calls the Vertex_Begin method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#vertex_begin
func (c *CustomMaterial) Vertex_Begin(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Vertex_Begin", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Vertex_Definitions calls the Vertex_Definitions method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#vertex_definitions
func (c *CustomMaterial) Vertex_Definitions(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Vertex_Definitions", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Vertex_MainBegin calls the Vertex_MainBegin method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#vertex_mainbegin
func (c *CustomMaterial) Vertex_MainBegin(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Vertex_MainBegin", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

// Vertex_MainEnd calls the Vertex_MainEnd method on the CustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#vertex_mainend
func (c *CustomMaterial) Vertex_MainEnd(shaderPart string) *CustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := c.p.Call("Vertex_MainEnd", args...)
	return CustomMaterialFromJSObject(retVal, c.ctx)
}

/*

// AllDirtyFlag returns the AllDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#alldirtyflag
func (c *CustomMaterial) AllDirtyFlag(AllDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(AllDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAllDirtyFlag sets the AllDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#alldirtyflag
func (c *CustomMaterial) SetAllDirtyFlag(AllDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(AllDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// AllowShaderHotSwapping returns the AllowShaderHotSwapping property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#allowshaderhotswapping
func (c *CustomMaterial) AllowShaderHotSwapping(allowShaderHotSwapping bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(allowShaderHotSwapping)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAllowShaderHotSwapping sets the AllowShaderHotSwapping property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#allowshaderhotswapping
func (c *CustomMaterial) SetAllowShaderHotSwapping(allowShaderHotSwapping bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(allowShaderHotSwapping)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Alpha returns the Alpha property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#alpha
func (c *CustomMaterial) Alpha(alpha float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(alpha)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAlpha sets the Alpha property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#alpha
func (c *CustomMaterial) SetAlpha(alpha float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(alpha)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// AlphaCutOff returns the AlphaCutOff property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#alphacutoff
func (c *CustomMaterial) AlphaCutOff(alphaCutOff float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(alphaCutOff)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAlphaCutOff sets the AlphaCutOff property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#alphacutoff
func (c *CustomMaterial) SetAlphaCutOff(alphaCutOff float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(alphaCutOff)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// AlphaMode returns the AlphaMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#alphamode
func (c *CustomMaterial) AlphaMode(alphaMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(alphaMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAlphaMode sets the AlphaMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#alphamode
func (c *CustomMaterial) SetAlphaMode(alphaMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(alphaMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// AmbientColor returns the AmbientColor property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ambientcolor
func (c *CustomMaterial) AmbientColor(ambientColor *Color3) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ambientColor.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAmbientColor sets the AmbientColor property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ambientcolor
func (c *CustomMaterial) SetAmbientColor(ambientColor *Color3) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ambientColor.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// AmbientTexture returns the AmbientTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ambienttexture
func (c *CustomMaterial) AmbientTexture(ambientTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ambientTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAmbientTexture sets the AmbientTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ambienttexture
func (c *CustomMaterial) SetAmbientTexture(ambientTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ambientTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// AmbientTextureEnabled returns the AmbientTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ambienttextureenabled
func (c *CustomMaterial) AmbientTextureEnabled(AmbientTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(AmbientTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAmbientTextureEnabled sets the AmbientTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ambienttextureenabled
func (c *CustomMaterial) SetAmbientTextureEnabled(AmbientTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(AmbientTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Animations returns the Animations property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#animations
func (c *CustomMaterial) Animations(animations []Animation) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(animations.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAnimations sets the Animations property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#animations
func (c *CustomMaterial) SetAnimations(animations []Animation) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(animations.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// AttributesDirtyFlag returns the AttributesDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#attributesdirtyflag
func (c *CustomMaterial) AttributesDirtyFlag(AttributesDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(AttributesDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetAttributesDirtyFlag sets the AttributesDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#attributesdirtyflag
func (c *CustomMaterial) SetAttributesDirtyFlag(AttributesDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(AttributesDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// BackFaceCulling returns the BackFaceCulling property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#backfaceculling
func (c *CustomMaterial) BackFaceCulling(backFaceCulling bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(backFaceCulling)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetBackFaceCulling sets the BackFaceCulling property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#backfaceculling
func (c *CustomMaterial) SetBackFaceCulling(backFaceCulling bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(backFaceCulling)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// BumpTexture returns the BumpTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bumptexture
func (c *CustomMaterial) BumpTexture(bumpTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(bumpTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetBumpTexture sets the BumpTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bumptexture
func (c *CustomMaterial) SetBumpTexture(bumpTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(bumpTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// BumpTextureEnabled returns the BumpTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bumptextureenabled
func (c *CustomMaterial) BumpTextureEnabled(BumpTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(BumpTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetBumpTextureEnabled sets the BumpTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#bumptextureenabled
func (c *CustomMaterial) SetBumpTextureEnabled(BumpTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(BumpTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CameraColorCurves returns the CameraColorCurves property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracolorcurves
func (c *CustomMaterial) CameraColorCurves(cameraColorCurves *ColorCurves) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraColorCurves.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCameraColorCurves sets the CameraColorCurves property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracolorcurves
func (c *CustomMaterial) SetCameraColorCurves(cameraColorCurves *ColorCurves) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraColorCurves.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CameraColorCurvesEnabled returns the CameraColorCurvesEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracolorcurvesenabled
func (c *CustomMaterial) CameraColorCurvesEnabled(cameraColorCurvesEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraColorCurvesEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCameraColorCurvesEnabled sets the CameraColorCurvesEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracolorcurvesenabled
func (c *CustomMaterial) SetCameraColorCurvesEnabled(cameraColorCurvesEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraColorCurvesEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CameraColorGradingEnabled returns the CameraColorGradingEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracolorgradingenabled
func (c *CustomMaterial) CameraColorGradingEnabled(cameraColorGradingEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraColorGradingEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCameraColorGradingEnabled sets the CameraColorGradingEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracolorgradingenabled
func (c *CustomMaterial) SetCameraColorGradingEnabled(cameraColorGradingEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraColorGradingEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CameraColorGradingTexture returns the CameraColorGradingTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracolorgradingtexture
func (c *CustomMaterial) CameraColorGradingTexture(cameraColorGradingTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraColorGradingTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCameraColorGradingTexture sets the CameraColorGradingTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracolorgradingtexture
func (c *CustomMaterial) SetCameraColorGradingTexture(cameraColorGradingTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraColorGradingTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CameraContrast returns the CameraContrast property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracontrast
func (c *CustomMaterial) CameraContrast(cameraContrast float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraContrast)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCameraContrast sets the CameraContrast property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameracontrast
func (c *CustomMaterial) SetCameraContrast(cameraContrast float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraContrast)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CameraExposure returns the CameraExposure property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameraexposure
func (c *CustomMaterial) CameraExposure(cameraExposure float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraExposure)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCameraExposure sets the CameraExposure property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameraexposure
func (c *CustomMaterial) SetCameraExposure(cameraExposure float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraExposure)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CameraToneMappingEnabled returns the CameraToneMappingEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameratonemappingenabled
func (c *CustomMaterial) CameraToneMappingEnabled(cameraToneMappingEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraToneMappingEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCameraToneMappingEnabled sets the CameraToneMappingEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#cameratonemappingenabled
func (c *CustomMaterial) SetCameraToneMappingEnabled(cameraToneMappingEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(cameraToneMappingEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CheckReadyOnEveryCall returns the CheckReadyOnEveryCall property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#checkreadyoneverycall
func (c *CustomMaterial) CheckReadyOnEveryCall(checkReadyOnEveryCall bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(checkReadyOnEveryCall)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCheckReadyOnEveryCall sets the CheckReadyOnEveryCall property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#checkreadyoneverycall
func (c *CustomMaterial) SetCheckReadyOnEveryCall(checkReadyOnEveryCall bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(checkReadyOnEveryCall)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CheckReadyOnlyOnce returns the CheckReadyOnlyOnce property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#checkreadyonlyonce
func (c *CustomMaterial) CheckReadyOnlyOnce(checkReadyOnlyOnce bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(checkReadyOnlyOnce)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCheckReadyOnlyOnce sets the CheckReadyOnlyOnce property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#checkreadyonlyonce
func (c *CustomMaterial) SetCheckReadyOnlyOnce(checkReadyOnlyOnce bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(checkReadyOnlyOnce)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ClockWiseSideOrientation returns the ClockWiseSideOrientation property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#clockwisesideorientation
func (c *CustomMaterial) ClockWiseSideOrientation(ClockWiseSideOrientation float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ClockWiseSideOrientation)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetClockWiseSideOrientation sets the ClockWiseSideOrientation property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#clockwisesideorientation
func (c *CustomMaterial) SetClockWiseSideOrientation(ClockWiseSideOrientation float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ClockWiseSideOrientation)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ColorGradingTextureEnabled returns the ColorGradingTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#colorgradingtextureenabled
func (c *CustomMaterial) ColorGradingTextureEnabled(ColorGradingTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ColorGradingTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetColorGradingTextureEnabled sets the ColorGradingTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#colorgradingtextureenabled
func (c *CustomMaterial) SetColorGradingTextureEnabled(ColorGradingTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ColorGradingTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CounterClockWiseSideOrientation returns the CounterClockWiseSideOrientation property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#counterclockwisesideorientation
func (c *CustomMaterial) CounterClockWiseSideOrientation(CounterClockWiseSideOrientation float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(CounterClockWiseSideOrientation)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCounterClockWiseSideOrientation sets the CounterClockWiseSideOrientation property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#counterclockwisesideorientation
func (c *CustomMaterial) SetCounterClockWiseSideOrientation(CounterClockWiseSideOrientation float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(CounterClockWiseSideOrientation)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CustomParts returns the CustomParts property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#customparts
func (c *CustomMaterial) CustomParts(CustomParts *ShaderSpecialParts) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(CustomParts.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCustomParts sets the CustomParts property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#customparts
func (c *CustomMaterial) SetCustomParts(CustomParts *ShaderSpecialParts) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(CustomParts.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// CustomShaderNameResolve returns the CustomShaderNameResolve property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#customshadernameresolve
func (c *CustomMaterial) CustomShaderNameResolve(customShaderNameResolve func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(customShaderNameResolve)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetCustomShaderNameResolve sets the CustomShaderNameResolve property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#customshadernameresolve
func (c *CustomMaterial) SetCustomShaderNameResolve(customShaderNameResolve func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(customShaderNameResolve)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// DepthFunction returns the DepthFunction property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#depthfunction
func (c *CustomMaterial) DepthFunction(depthFunction float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(depthFunction)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetDepthFunction sets the DepthFunction property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#depthfunction
func (c *CustomMaterial) SetDepthFunction(depthFunction float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(depthFunction)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// DiffuseColor returns the DiffuseColor property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#diffusecolor
func (c *CustomMaterial) DiffuseColor(diffuseColor *Color3) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(diffuseColor.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetDiffuseColor sets the DiffuseColor property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#diffusecolor
func (c *CustomMaterial) SetDiffuseColor(diffuseColor *Color3) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(diffuseColor.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// DiffuseFresnelParameters returns the DiffuseFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#diffusefresnelparameters
func (c *CustomMaterial) DiffuseFresnelParameters(diffuseFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(diffuseFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetDiffuseFresnelParameters sets the DiffuseFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#diffusefresnelparameters
func (c *CustomMaterial) SetDiffuseFresnelParameters(diffuseFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(diffuseFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// DiffuseTexture returns the DiffuseTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#diffusetexture
func (c *CustomMaterial) DiffuseTexture(diffuseTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(diffuseTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetDiffuseTexture sets the DiffuseTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#diffusetexture
func (c *CustomMaterial) SetDiffuseTexture(diffuseTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(diffuseTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// DiffuseTextureEnabled returns the DiffuseTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#diffusetextureenabled
func (c *CustomMaterial) DiffuseTextureEnabled(DiffuseTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(DiffuseTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetDiffuseTextureEnabled sets the DiffuseTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#diffusetextureenabled
func (c *CustomMaterial) SetDiffuseTextureEnabled(DiffuseTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(DiffuseTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// DisableDepthWrite returns the DisableDepthWrite property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#disabledepthwrite
func (c *CustomMaterial) DisableDepthWrite(disableDepthWrite bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(disableDepthWrite)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetDisableDepthWrite sets the DisableDepthWrite property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#disabledepthwrite
func (c *CustomMaterial) SetDisableDepthWrite(disableDepthWrite bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(disableDepthWrite)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// DisableLighting returns the DisableLighting property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#disablelighting
func (c *CustomMaterial) DisableLighting(disableLighting bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(disableLighting)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetDisableLighting sets the DisableLighting property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#disablelighting
func (c *CustomMaterial) SetDisableLighting(disableLighting bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(disableLighting)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// DoNotSerialize returns the DoNotSerialize property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#donotserialize
func (c *CustomMaterial) DoNotSerialize(doNotSerialize bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(doNotSerialize)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetDoNotSerialize sets the DoNotSerialize property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#donotserialize
func (c *CustomMaterial) SetDoNotSerialize(doNotSerialize bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(doNotSerialize)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// EmissiveColor returns the EmissiveColor property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#emissivecolor
func (c *CustomMaterial) EmissiveColor(emissiveColor *Color3) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(emissiveColor.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetEmissiveColor sets the EmissiveColor property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#emissivecolor
func (c *CustomMaterial) SetEmissiveColor(emissiveColor *Color3) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(emissiveColor.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// EmissiveFresnelParameters returns the EmissiveFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#emissivefresnelparameters
func (c *CustomMaterial) EmissiveFresnelParameters(emissiveFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(emissiveFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetEmissiveFresnelParameters sets the EmissiveFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#emissivefresnelparameters
func (c *CustomMaterial) SetEmissiveFresnelParameters(emissiveFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(emissiveFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// EmissiveTexture returns the EmissiveTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#emissivetexture
func (c *CustomMaterial) EmissiveTexture(emissiveTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(emissiveTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetEmissiveTexture sets the EmissiveTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#emissivetexture
func (c *CustomMaterial) SetEmissiveTexture(emissiveTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(emissiveTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// EmissiveTextureEnabled returns the EmissiveTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#emissivetextureenabled
func (c *CustomMaterial) EmissiveTextureEnabled(EmissiveTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(EmissiveTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetEmissiveTextureEnabled sets the EmissiveTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#emissivetextureenabled
func (c *CustomMaterial) SetEmissiveTextureEnabled(EmissiveTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(EmissiveTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// FillMode returns the FillMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fillmode
func (c *CustomMaterial) FillMode(fillMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(fillMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetFillMode sets the FillMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fillmode
func (c *CustomMaterial) SetFillMode(fillMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(fillMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// FogEnabled returns the FogEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fogenabled
func (c *CustomMaterial) FogEnabled(fogEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(fogEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetFogEnabled sets the FogEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fogenabled
func (c *CustomMaterial) SetFogEnabled(fogEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(fogEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ForceDepthWrite returns the ForceDepthWrite property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#forcedepthwrite
func (c *CustomMaterial) ForceDepthWrite(forceDepthWrite bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(forceDepthWrite)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetForceDepthWrite sets the ForceDepthWrite property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#forcedepthwrite
func (c *CustomMaterial) SetForceDepthWrite(forceDepthWrite bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(forceDepthWrite)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// FragmentShader returns the FragmentShader property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragmentshader
func (c *CustomMaterial) FragmentShader(FragmentShader string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(FragmentShader)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetFragmentShader sets the FragmentShader property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fragmentshader
func (c *CustomMaterial) SetFragmentShader(FragmentShader string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(FragmentShader)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// FresnelDirtyFlag returns the FresnelDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fresneldirtyflag
func (c *CustomMaterial) FresnelDirtyFlag(FresnelDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(FresnelDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetFresnelDirtyFlag sets the FresnelDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fresneldirtyflag
func (c *CustomMaterial) SetFresnelDirtyFlag(FresnelDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(FresnelDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// FresnelEnabled returns the FresnelEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fresnelenabled
func (c *CustomMaterial) FresnelEnabled(FresnelEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(FresnelEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetFresnelEnabled sets the FresnelEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#fresnelenabled
func (c *CustomMaterial) SetFresnelEnabled(FresnelEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(FresnelEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// GetRenderTargetTextures returns the GetRenderTargetTextures property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#getrendertargettextures
func (c *CustomMaterial) GetRenderTargetTextures(getRenderTargetTextures func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(getRenderTargetTextures)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetGetRenderTargetTextures sets the GetRenderTargetTextures property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#getrendertargettextures
func (c *CustomMaterial) SetGetRenderTargetTextures(getRenderTargetTextures func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(getRenderTargetTextures)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// HasRenderTargetTextures returns the HasRenderTargetTextures property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#hasrendertargettextures
func (c *CustomMaterial) HasRenderTargetTextures(hasRenderTargetTextures bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(hasRenderTargetTextures)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetHasRenderTargetTextures sets the HasRenderTargetTextures property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#hasrendertargettextures
func (c *CustomMaterial) SetHasRenderTargetTextures(hasRenderTargetTextures bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(hasRenderTargetTextures)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Id returns the Id property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#id
func (c *CustomMaterial) Id(id string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(id)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetId sets the Id property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#id
func (c *CustomMaterial) SetId(id string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(id)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ImageProcessingConfiguration returns the ImageProcessingConfiguration property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#imageprocessingconfiguration
func (c *CustomMaterial) ImageProcessingConfiguration(imageProcessingConfiguration *ImageProcessingConfiguration) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(imageProcessingConfiguration.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetImageProcessingConfiguration sets the ImageProcessingConfiguration property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#imageprocessingconfiguration
func (c *CustomMaterial) SetImageProcessingConfiguration(imageProcessingConfiguration *ImageProcessingConfiguration) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(imageProcessingConfiguration.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// IndexOfRefraction returns the IndexOfRefraction property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#indexofrefraction
func (c *CustomMaterial) IndexOfRefraction(indexOfRefraction float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(indexOfRefraction)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetIndexOfRefraction sets the IndexOfRefraction property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#indexofrefraction
func (c *CustomMaterial) SetIndexOfRefraction(indexOfRefraction float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(indexOfRefraction)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// InspectableCustomProperties returns the InspectableCustomProperties property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#inspectablecustomproperties
func (c *CustomMaterial) InspectableCustomProperties(inspectableCustomProperties *IInspectable) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(inspectableCustomProperties.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetInspectableCustomProperties sets the InspectableCustomProperties property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#inspectablecustomproperties
func (c *CustomMaterial) SetInspectableCustomProperties(inspectableCustomProperties *IInspectable) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(inspectableCustomProperties.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// InvertNormalMapX returns the InvertNormalMapX property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#invertnormalmapx
func (c *CustomMaterial) InvertNormalMapX(invertNormalMapX bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(invertNormalMapX)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetInvertNormalMapX sets the InvertNormalMapX property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#invertnormalmapx
func (c *CustomMaterial) SetInvertNormalMapX(invertNormalMapX bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(invertNormalMapX)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// InvertNormalMapY returns the InvertNormalMapY property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#invertnormalmapy
func (c *CustomMaterial) InvertNormalMapY(invertNormalMapY bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(invertNormalMapY)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetInvertNormalMapY sets the InvertNormalMapY property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#invertnormalmapy
func (c *CustomMaterial) SetInvertNormalMapY(invertNormalMapY bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(invertNormalMapY)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// InvertRefractionY returns the InvertRefractionY property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#invertrefractiony
func (c *CustomMaterial) InvertRefractionY(invertRefractionY bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(invertRefractionY)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetInvertRefractionY sets the InvertRefractionY property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#invertrefractiony
func (c *CustomMaterial) SetInvertRefractionY(invertRefractionY bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(invertRefractionY)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// IsFrozen returns the IsFrozen property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#isfrozen
func (c *CustomMaterial) IsFrozen(isFrozen bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(isFrozen)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetIsFrozen sets the IsFrozen property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#isfrozen
func (c *CustomMaterial) SetIsFrozen(isFrozen bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(isFrozen)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// LightDirtyFlag returns the LightDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#lightdirtyflag
func (c *CustomMaterial) LightDirtyFlag(LightDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LightDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetLightDirtyFlag sets the LightDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#lightdirtyflag
func (c *CustomMaterial) SetLightDirtyFlag(LightDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LightDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// LightmapTexture returns the LightmapTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#lightmaptexture
func (c *CustomMaterial) LightmapTexture(lightmapTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(lightmapTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetLightmapTexture sets the LightmapTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#lightmaptexture
func (c *CustomMaterial) SetLightmapTexture(lightmapTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(lightmapTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// LightmapTextureEnabled returns the LightmapTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#lightmaptextureenabled
func (c *CustomMaterial) LightmapTextureEnabled(LightmapTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LightmapTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetLightmapTextureEnabled sets the LightmapTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#lightmaptextureenabled
func (c *CustomMaterial) SetLightmapTextureEnabled(LightmapTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LightmapTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// LineListDrawMode returns the LineListDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#linelistdrawmode
func (c *CustomMaterial) LineListDrawMode(LineListDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LineListDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetLineListDrawMode sets the LineListDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#linelistdrawmode
func (c *CustomMaterial) SetLineListDrawMode(LineListDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LineListDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// LineLoopDrawMode returns the LineLoopDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#lineloopdrawmode
func (c *CustomMaterial) LineLoopDrawMode(LineLoopDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LineLoopDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetLineLoopDrawMode sets the LineLoopDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#lineloopdrawmode
func (c *CustomMaterial) SetLineLoopDrawMode(LineLoopDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LineLoopDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// LineStripDrawMode returns the LineStripDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#linestripdrawmode
func (c *CustomMaterial) LineStripDrawMode(LineStripDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LineStripDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetLineStripDrawMode sets the LineStripDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#linestripdrawmode
func (c *CustomMaterial) SetLineStripDrawMode(LineStripDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(LineStripDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// LinkEmissiveWithDiffuse returns the LinkEmissiveWithDiffuse property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#linkemissivewithdiffuse
func (c *CustomMaterial) LinkEmissiveWithDiffuse(linkEmissiveWithDiffuse bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(linkEmissiveWithDiffuse)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetLinkEmissiveWithDiffuse sets the LinkEmissiveWithDiffuse property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#linkemissivewithdiffuse
func (c *CustomMaterial) SetLinkEmissiveWithDiffuse(linkEmissiveWithDiffuse bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(linkEmissiveWithDiffuse)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// MaxSimultaneousLights returns the MaxSimultaneousLights property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#maxsimultaneouslights
func (c *CustomMaterial) MaxSimultaneousLights(maxSimultaneousLights float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(maxSimultaneousLights)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetMaxSimultaneousLights sets the MaxSimultaneousLights property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#maxsimultaneouslights
func (c *CustomMaterial) SetMaxSimultaneousLights(maxSimultaneousLights float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(maxSimultaneousLights)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Metadata returns the Metadata property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#metadata
func (c *CustomMaterial) Metadata(metadata interface{}) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(metadata)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetMetadata sets the Metadata property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#metadata
func (c *CustomMaterial) SetMetadata(metadata interface{}) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(metadata)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// MiscDirtyFlag returns the MiscDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#miscdirtyflag
func (c *CustomMaterial) MiscDirtyFlag(MiscDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(MiscDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetMiscDirtyFlag sets the MiscDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#miscdirtyflag
func (c *CustomMaterial) SetMiscDirtyFlag(MiscDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(MiscDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#name
func (c *CustomMaterial) Name(name string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(name)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#name
func (c *CustomMaterial) SetName(name string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(name)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// NeedDepthPrePass returns the NeedDepthPrePass property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#needdepthprepass
func (c *CustomMaterial) NeedDepthPrePass(needDepthPrePass bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(needDepthPrePass)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetNeedDepthPrePass sets the NeedDepthPrePass property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#needdepthprepass
func (c *CustomMaterial) SetNeedDepthPrePass(needDepthPrePass bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(needDepthPrePass)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OnBind returns the OnBind property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#onbind
func (c *CustomMaterial) OnBind(onBind func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onBind)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOnBind sets the OnBind property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#onbind
func (c *CustomMaterial) SetOnBind(onBind func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onBind)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OnBindObservable returns the OnBindObservable property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#onbindobservable
func (c *CustomMaterial) OnBindObservable(onBindObservable *Observable) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onBindObservable.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOnBindObservable sets the OnBindObservable property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#onbindobservable
func (c *CustomMaterial) SetOnBindObservable(onBindObservable *Observable) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onBindObservable.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OnCompiled returns the OnCompiled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#oncompiled
func (c *CustomMaterial) OnCompiled(onCompiled func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onCompiled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOnCompiled sets the OnCompiled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#oncompiled
func (c *CustomMaterial) SetOnCompiled(onCompiled func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onCompiled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OnDispose returns the OnDispose property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ondispose
func (c *CustomMaterial) OnDispose(onDispose func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onDispose)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOnDispose sets the OnDispose property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ondispose
func (c *CustomMaterial) SetOnDispose(onDispose func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onDispose)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OnDisposeObservable returns the OnDisposeObservable property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ondisposeobservable
func (c *CustomMaterial) OnDisposeObservable(onDisposeObservable *Observable) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onDisposeObservable.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOnDisposeObservable sets the OnDisposeObservable property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#ondisposeobservable
func (c *CustomMaterial) SetOnDisposeObservable(onDisposeObservable *Observable) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onDisposeObservable.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OnError returns the OnError property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#onerror
func (c *CustomMaterial) OnError(onError func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onError)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOnError sets the OnError property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#onerror
func (c *CustomMaterial) SetOnError(onError func()) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onError)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OnUnBindObservable returns the OnUnBindObservable property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#onunbindobservable
func (c *CustomMaterial) OnUnBindObservable(onUnBindObservable *Observable) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onUnBindObservable.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOnUnBindObservable sets the OnUnBindObservable property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#onunbindobservable
func (c *CustomMaterial) SetOnUnBindObservable(onUnBindObservable *Observable) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(onUnBindObservable.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OpacityFresnelParameters returns the OpacityFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#opacityfresnelparameters
func (c *CustomMaterial) OpacityFresnelParameters(opacityFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(opacityFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOpacityFresnelParameters sets the OpacityFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#opacityfresnelparameters
func (c *CustomMaterial) SetOpacityFresnelParameters(opacityFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(opacityFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OpacityTexture returns the OpacityTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#opacitytexture
func (c *CustomMaterial) OpacityTexture(opacityTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(opacityTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOpacityTexture sets the OpacityTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#opacitytexture
func (c *CustomMaterial) SetOpacityTexture(opacityTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(opacityTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// OpacityTextureEnabled returns the OpacityTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#opacitytextureenabled
func (c *CustomMaterial) OpacityTextureEnabled(OpacityTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(OpacityTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetOpacityTextureEnabled sets the OpacityTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#opacitytextureenabled
func (c *CustomMaterial) SetOpacityTextureEnabled(OpacityTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(OpacityTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ParallaxScaleBias returns the ParallaxScaleBias property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#parallaxscalebias
func (c *CustomMaterial) ParallaxScaleBias(parallaxScaleBias float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(parallaxScaleBias)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetParallaxScaleBias sets the ParallaxScaleBias property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#parallaxscalebias
func (c *CustomMaterial) SetParallaxScaleBias(parallaxScaleBias float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(parallaxScaleBias)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// PointFillMode returns the PointFillMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#pointfillmode
func (c *CustomMaterial) PointFillMode(PointFillMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(PointFillMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetPointFillMode sets the PointFillMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#pointfillmode
func (c *CustomMaterial) SetPointFillMode(PointFillMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(PointFillMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// PointListDrawMode returns the PointListDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#pointlistdrawmode
func (c *CustomMaterial) PointListDrawMode(PointListDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(PointListDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetPointListDrawMode sets the PointListDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#pointlistdrawmode
func (c *CustomMaterial) SetPointListDrawMode(PointListDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(PointListDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// PointSize returns the PointSize property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#pointsize
func (c *CustomMaterial) PointSize(pointSize float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(pointSize)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetPointSize sets the PointSize property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#pointsize
func (c *CustomMaterial) SetPointSize(pointSize float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(pointSize)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// PointsCloud returns the PointsCloud property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#pointscloud
func (c *CustomMaterial) PointsCloud(pointsCloud bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(pointsCloud)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetPointsCloud sets the PointsCloud property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#pointscloud
func (c *CustomMaterial) SetPointsCloud(pointsCloud bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(pointsCloud)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ReflectionFresnelParameters returns the ReflectionFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#reflectionfresnelparameters
func (c *CustomMaterial) ReflectionFresnelParameters(reflectionFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(reflectionFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetReflectionFresnelParameters sets the ReflectionFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#reflectionfresnelparameters
func (c *CustomMaterial) SetReflectionFresnelParameters(reflectionFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(reflectionFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ReflectionTexture returns the ReflectionTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#reflectiontexture
func (c *CustomMaterial) ReflectionTexture(reflectionTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(reflectionTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetReflectionTexture sets the ReflectionTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#reflectiontexture
func (c *CustomMaterial) SetReflectionTexture(reflectionTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(reflectionTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ReflectionTextureEnabled returns the ReflectionTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#reflectiontextureenabled
func (c *CustomMaterial) ReflectionTextureEnabled(ReflectionTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ReflectionTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetReflectionTextureEnabled sets the ReflectionTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#reflectiontextureenabled
func (c *CustomMaterial) SetReflectionTextureEnabled(ReflectionTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ReflectionTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// RefractionFresnelParameters returns the RefractionFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#refractionfresnelparameters
func (c *CustomMaterial) RefractionFresnelParameters(refractionFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(refractionFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetRefractionFresnelParameters sets the RefractionFresnelParameters property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#refractionfresnelparameters
func (c *CustomMaterial) SetRefractionFresnelParameters(refractionFresnelParameters *FresnelParameters) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(refractionFresnelParameters.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// RefractionTexture returns the RefractionTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#refractiontexture
func (c *CustomMaterial) RefractionTexture(refractionTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(refractionTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetRefractionTexture sets the RefractionTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#refractiontexture
func (c *CustomMaterial) SetRefractionTexture(refractionTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(refractionTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// RefractionTextureEnabled returns the RefractionTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#refractiontextureenabled
func (c *CustomMaterial) RefractionTextureEnabled(RefractionTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(RefractionTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetRefractionTextureEnabled sets the RefractionTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#refractiontextureenabled
func (c *CustomMaterial) SetRefractionTextureEnabled(RefractionTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(RefractionTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ReservedDataStore returns the ReservedDataStore property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#reserveddatastore
func (c *CustomMaterial) ReservedDataStore(reservedDataStore interface{}) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(reservedDataStore)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetReservedDataStore sets the ReservedDataStore property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#reserveddatastore
func (c *CustomMaterial) SetReservedDataStore(reservedDataStore interface{}) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(reservedDataStore)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Roughness returns the Roughness property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#roughness
func (c *CustomMaterial) Roughness(roughness float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(roughness)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetRoughness sets the Roughness property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#roughness
func (c *CustomMaterial) SetRoughness(roughness float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(roughness)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SeparateCullingPass returns the SeparateCullingPass property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#separatecullingpass
func (c *CustomMaterial) SeparateCullingPass(separateCullingPass bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(separateCullingPass)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetSeparateCullingPass sets the SeparateCullingPass property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#separatecullingpass
func (c *CustomMaterial) SetSeparateCullingPass(separateCullingPass bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(separateCullingPass)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ShaderIndexer returns the ShaderIndexer property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#shaderindexer
func (c *CustomMaterial) ShaderIndexer(ShaderIndexer float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ShaderIndexer)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetShaderIndexer sets the ShaderIndexer property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#shaderindexer
func (c *CustomMaterial) SetShaderIndexer(ShaderIndexer float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(ShaderIndexer)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SideOrientation returns the SideOrientation property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#sideorientation
func (c *CustomMaterial) SideOrientation(sideOrientation float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(sideOrientation)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetSideOrientation sets the SideOrientation property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#sideorientation
func (c *CustomMaterial) SetSideOrientation(sideOrientation float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(sideOrientation)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SpecularColor returns the SpecularColor property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#specularcolor
func (c *CustomMaterial) SpecularColor(specularColor *Color3) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(specularColor.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetSpecularColor sets the SpecularColor property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#specularcolor
func (c *CustomMaterial) SetSpecularColor(specularColor *Color3) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(specularColor.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SpecularPower returns the SpecularPower property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#specularpower
func (c *CustomMaterial) SpecularPower(specularPower float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(specularPower)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetSpecularPower sets the SpecularPower property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#specularpower
func (c *CustomMaterial) SetSpecularPower(specularPower float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(specularPower)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SpecularTexture returns the SpecularTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#speculartexture
func (c *CustomMaterial) SpecularTexture(specularTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(specularTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetSpecularTexture sets the SpecularTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#speculartexture
func (c *CustomMaterial) SetSpecularTexture(specularTexture *BaseTexture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(specularTexture.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SpecularTextureEnabled returns the SpecularTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#speculartextureenabled
func (c *CustomMaterial) SpecularTextureEnabled(SpecularTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(SpecularTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetSpecularTextureEnabled sets the SpecularTextureEnabled property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#speculartextureenabled
func (c *CustomMaterial) SetSpecularTextureEnabled(SpecularTextureEnabled bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(SpecularTextureEnabled)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// State returns the State property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#state
func (c *CustomMaterial) State(state string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(state)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetState sets the State property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#state
func (c *CustomMaterial) SetState(state string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(state)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// TextureDirtyFlag returns the TextureDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#texturedirtyflag
func (c *CustomMaterial) TextureDirtyFlag(TextureDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(TextureDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetTextureDirtyFlag sets the TextureDirtyFlag property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#texturedirtyflag
func (c *CustomMaterial) SetTextureDirtyFlag(TextureDirtyFlag float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(TextureDirtyFlag)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// TriangleFanDrawMode returns the TriangleFanDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#trianglefandrawmode
func (c *CustomMaterial) TriangleFanDrawMode(TriangleFanDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(TriangleFanDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetTriangleFanDrawMode sets the TriangleFanDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#trianglefandrawmode
func (c *CustomMaterial) SetTriangleFanDrawMode(TriangleFanDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(TriangleFanDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// TriangleFillMode returns the TriangleFillMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#trianglefillmode
func (c *CustomMaterial) TriangleFillMode(TriangleFillMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(TriangleFillMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetTriangleFillMode sets the TriangleFillMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#trianglefillmode
func (c *CustomMaterial) SetTriangleFillMode(TriangleFillMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(TriangleFillMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// TriangleStripDrawMode returns the TriangleStripDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#trianglestripdrawmode
func (c *CustomMaterial) TriangleStripDrawMode(TriangleStripDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(TriangleStripDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetTriangleStripDrawMode sets the TriangleStripDrawMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#trianglestripdrawmode
func (c *CustomMaterial) SetTriangleStripDrawMode(TriangleStripDrawMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(TriangleStripDrawMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// TwoSidedLighting returns the TwoSidedLighting property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#twosidedlighting
func (c *CustomMaterial) TwoSidedLighting(twoSidedLighting bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(twoSidedLighting)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetTwoSidedLighting sets the TwoSidedLighting property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#twosidedlighting
func (c *CustomMaterial) SetTwoSidedLighting(twoSidedLighting bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(twoSidedLighting)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UniqueId returns the UniqueId property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#uniqueid
func (c *CustomMaterial) UniqueId(uniqueId float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(uniqueId)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUniqueId sets the UniqueId property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#uniqueid
func (c *CustomMaterial) SetUniqueId(uniqueId float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(uniqueId)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseAlphaFromDiffuseTexture returns the UseAlphaFromDiffuseTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#usealphafromdiffusetexture
func (c *CustomMaterial) UseAlphaFromDiffuseTexture(useAlphaFromDiffuseTexture bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useAlphaFromDiffuseTexture)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseAlphaFromDiffuseTexture sets the UseAlphaFromDiffuseTexture property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#usealphafromdiffusetexture
func (c *CustomMaterial) SetUseAlphaFromDiffuseTexture(useAlphaFromDiffuseTexture bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useAlphaFromDiffuseTexture)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseEmissiveAsIllumination returns the UseEmissiveAsIllumination property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useemissiveasillumination
func (c *CustomMaterial) UseEmissiveAsIllumination(useEmissiveAsIllumination bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useEmissiveAsIllumination)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseEmissiveAsIllumination sets the UseEmissiveAsIllumination property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useemissiveasillumination
func (c *CustomMaterial) SetUseEmissiveAsIllumination(useEmissiveAsIllumination bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useEmissiveAsIllumination)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseGlossinessFromSpecularMapAlpha returns the UseGlossinessFromSpecularMapAlpha property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useglossinessfromspecularmapalpha
func (c *CustomMaterial) UseGlossinessFromSpecularMapAlpha(useGlossinessFromSpecularMapAlpha bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useGlossinessFromSpecularMapAlpha)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseGlossinessFromSpecularMapAlpha sets the UseGlossinessFromSpecularMapAlpha property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useglossinessfromspecularmapalpha
func (c *CustomMaterial) SetUseGlossinessFromSpecularMapAlpha(useGlossinessFromSpecularMapAlpha bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useGlossinessFromSpecularMapAlpha)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseLightmapAsShadowmap returns the UseLightmapAsShadowmap property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#uselightmapasshadowmap
func (c *CustomMaterial) UseLightmapAsShadowmap(useLightmapAsShadowmap bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useLightmapAsShadowmap)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseLightmapAsShadowmap sets the UseLightmapAsShadowmap property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#uselightmapasshadowmap
func (c *CustomMaterial) SetUseLightmapAsShadowmap(useLightmapAsShadowmap bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useLightmapAsShadowmap)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseLogarithmicDepth returns the UseLogarithmicDepth property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#uselogarithmicdepth
func (c *CustomMaterial) UseLogarithmicDepth(useLogarithmicDepth bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useLogarithmicDepth)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseLogarithmicDepth sets the UseLogarithmicDepth property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#uselogarithmicdepth
func (c *CustomMaterial) SetUseLogarithmicDepth(useLogarithmicDepth bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useLogarithmicDepth)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseObjectSpaceNormalMap returns the UseObjectSpaceNormalMap property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useobjectspacenormalmap
func (c *CustomMaterial) UseObjectSpaceNormalMap(useObjectSpaceNormalMap bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useObjectSpaceNormalMap)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseObjectSpaceNormalMap sets the UseObjectSpaceNormalMap property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useobjectspacenormalmap
func (c *CustomMaterial) SetUseObjectSpaceNormalMap(useObjectSpaceNormalMap bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useObjectSpaceNormalMap)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseParallax returns the UseParallax property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useparallax
func (c *CustomMaterial) UseParallax(useParallax bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useParallax)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseParallax sets the UseParallax property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useparallax
func (c *CustomMaterial) SetUseParallax(useParallax bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useParallax)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseParallaxOcclusion returns the UseParallaxOcclusion property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useparallaxocclusion
func (c *CustomMaterial) UseParallaxOcclusion(useParallaxOcclusion bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useParallaxOcclusion)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseParallaxOcclusion sets the UseParallaxOcclusion property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#useparallaxocclusion
func (c *CustomMaterial) SetUseParallaxOcclusion(useParallaxOcclusion bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useParallaxOcclusion)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseReflectionFresnelFromSpecular returns the UseReflectionFresnelFromSpecular property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#usereflectionfresnelfromspecular
func (c *CustomMaterial) UseReflectionFresnelFromSpecular(useReflectionFresnelFromSpecular bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useReflectionFresnelFromSpecular)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseReflectionFresnelFromSpecular sets the UseReflectionFresnelFromSpecular property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#usereflectionfresnelfromspecular
func (c *CustomMaterial) SetUseReflectionFresnelFromSpecular(useReflectionFresnelFromSpecular bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useReflectionFresnelFromSpecular)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseReflectionOverAlpha returns the UseReflectionOverAlpha property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#usereflectionoveralpha
func (c *CustomMaterial) UseReflectionOverAlpha(useReflectionOverAlpha bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useReflectionOverAlpha)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseReflectionOverAlpha sets the UseReflectionOverAlpha property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#usereflectionoveralpha
func (c *CustomMaterial) SetUseReflectionOverAlpha(useReflectionOverAlpha bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useReflectionOverAlpha)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// UseSpecularOverAlpha returns the UseSpecularOverAlpha property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#usespecularoveralpha
func (c *CustomMaterial) UseSpecularOverAlpha(useSpecularOverAlpha bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useSpecularOverAlpha)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetUseSpecularOverAlpha sets the UseSpecularOverAlpha property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#usespecularoveralpha
func (c *CustomMaterial) SetUseSpecularOverAlpha(useSpecularOverAlpha bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(useSpecularOverAlpha)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// VertexShader returns the VertexShader property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#vertexshader
func (c *CustomMaterial) VertexShader(VertexShader string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(VertexShader)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetVertexShader sets the VertexShader property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#vertexshader
func (c *CustomMaterial) SetVertexShader(VertexShader string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(VertexShader)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// WireFrameFillMode returns the WireFrameFillMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#wireframefillmode
func (c *CustomMaterial) WireFrameFillMode(WireFrameFillMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(WireFrameFillMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetWireFrameFillMode sets the WireFrameFillMode property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#wireframefillmode
func (c *CustomMaterial) SetWireFrameFillMode(WireFrameFillMode float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(WireFrameFillMode)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Wireframe returns the Wireframe property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#wireframe
func (c *CustomMaterial) Wireframe(wireframe bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(wireframe)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetWireframe sets the Wireframe property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#wireframe
func (c *CustomMaterial) SetWireframe(wireframe bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(wireframe)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// ZOffset returns the ZOffset property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#zoffset
func (c *CustomMaterial) ZOffset(zOffset float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(zOffset)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// SetZOffset sets the ZOffset property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#zoffset
func (c *CustomMaterial) SetZOffset(zOffset float64) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(zOffset)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// _createdShaderName returns the _createdShaderName property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_createdshadername
func (c *CustomMaterial) _createdShaderName(_createdShaderName string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_createdShaderName)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Set_createdShaderName sets the _createdShaderName property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_createdshadername
func (c *CustomMaterial) Set_createdShaderName(_createdShaderName string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_createdShaderName)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// _customUniform returns the _customUniform property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_customuniform
func (c *CustomMaterial) _customUniform(_customUniform string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_customUniform)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Set_customUniform sets the _customUniform property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_customuniform
func (c *CustomMaterial) Set_customUniform(_customUniform string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_customUniform)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// _isCreatedShader returns the _isCreatedShader property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_iscreatedshader
func (c *CustomMaterial) _isCreatedShader(_isCreatedShader bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_isCreatedShader)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Set_isCreatedShader sets the _isCreatedShader property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_iscreatedshader
func (c *CustomMaterial) Set_isCreatedShader(_isCreatedShader bool) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_isCreatedShader)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// _newSamplerInstances returns the _newSamplerInstances property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_newsamplerinstances
func (c *CustomMaterial) _newSamplerInstances(_newSamplerInstances *Texture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_newSamplerInstances.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Set_newSamplerInstances sets the _newSamplerInstances property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_newsamplerinstances
func (c *CustomMaterial) Set_newSamplerInstances(_newSamplerInstances *Texture) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_newSamplerInstances.JSObject())
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// _newUniformInstances returns the _newUniformInstances property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_newuniforminstances
func (c *CustomMaterial) _newUniformInstances(_newUniformInstances interface{}) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_newUniformInstances)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Set_newUniformInstances sets the _newUniformInstances property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_newuniforminstances
func (c *CustomMaterial) Set_newUniformInstances(_newUniformInstances interface{}) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_newUniformInstances)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// _newUniforms returns the _newUniforms property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_newuniforms
func (c *CustomMaterial) _newUniforms(_newUniforms string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_newUniforms)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

// Set_newUniforms sets the _newUniforms property of class CustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.custommaterial#_newuniforms
func (c *CustomMaterial) Set_newUniforms(_newUniforms string) *CustomMaterial {
	p := ba.ctx.Get("CustomMaterial").New(_newUniforms)
	return CustomMaterialFromJSObject(p, ba.ctx)
}

*/
