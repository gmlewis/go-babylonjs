// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Gizmo represents a babylon.js Gizmo.
// Renders gizmos on top of an existing scene which provide controls for position, rotation, etc.
type Gizmo struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (g *Gizmo) JSObject() js.Value { return g.p }

// Gizmo returns a Gizmo JavaScript class.
func (ba *Babylon) Gizmo() *Gizmo {
	p := ba.ctx.Get("Gizmo")
	return GizmoFromJSObject(p, ba.ctx)
}

// GizmoFromJSObject returns a wrapped Gizmo JavaScript class.
func GizmoFromJSObject(p js.Value, ctx js.Value) *Gizmo {
	return &Gizmo{p: p, ctx: ctx}
}

// NewGizmoOpts contains optional parameters for NewGizmo.
type NewGizmoOpts struct {
	GizmoLayer *UtilityLayerRenderer
}

// NewGizmo returns a new Gizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.gizmo
func (ba *Babylon) NewGizmo(opts *NewGizmoOpts) *Gizmo {
	if opts == nil {
		opts = &NewGizmoOpts{}
	}

	p := ba.ctx.Get("Gizmo").New(opts.GizmoLayer.JSObject())
	return GizmoFromJSObject(p, ba.ctx)
}

// TODO: methods
