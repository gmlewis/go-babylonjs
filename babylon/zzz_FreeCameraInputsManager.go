// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// FreeCameraInputsManager represents a babylon.js FreeCameraInputsManager.
// Default Inputs manager for the FreeCamera.
// It groups all the default supported inputs for ease of use.
// Interface representing a free camera inputs manager
//
// See: http://doc.babylonjs.com/how_to/customizing_camera_inputs
type FreeCameraInputsManager struct {
	*CameraInputsManager
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (f *FreeCameraInputsManager) JSObject() js.Value { return f.p }

// FreeCameraInputsManager returns a FreeCameraInputsManager JavaScript class.
func (ba *Babylon) FreeCameraInputsManager() *FreeCameraInputsManager {
	p := ba.ctx.Get("FreeCameraInputsManager")
	return FreeCameraInputsManagerFromJSObject(p, ba.ctx)
}

// FreeCameraInputsManagerFromJSObject returns a wrapped FreeCameraInputsManager JavaScript class.
func FreeCameraInputsManagerFromJSObject(p js.Value, ctx js.Value) *FreeCameraInputsManager {
	return &FreeCameraInputsManager{CameraInputsManager: CameraInputsManagerFromJSObject(p, ctx), ctx: ctx}
}

// FreeCameraInputsManagerArrayToJSArray returns a JavaScript Array for the wrapped array.
func FreeCameraInputsManagerArrayToJSArray(array []*FreeCameraInputsManager) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewFreeCameraInputsManager returns a new FreeCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecamerainputsmanager
func (ba *Babylon) NewFreeCameraInputsManager(camera *FreeCamera) *FreeCameraInputsManager {

	args := make([]interface{}, 0, 1+0)

	args = append(args, camera.JSObject())

	p := ba.ctx.Get("FreeCameraInputsManager").New(args...)
	return FreeCameraInputsManagerFromJSObject(p, ba.ctx)
}

// AddDeviceOrientation calls the AddDeviceOrientation method on the FreeCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecamerainputsmanager#adddeviceorientation
func (f *FreeCameraInputsManager) AddDeviceOrientation() *FreeCameraInputsManager {

	retVal := f.p.Call("addDeviceOrientation")
	return FreeCameraInputsManagerFromJSObject(retVal, f.ctx)
}

// AddGamepad calls the AddGamepad method on the FreeCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecamerainputsmanager#addgamepad
func (f *FreeCameraInputsManager) AddGamepad() *FreeCameraInputsManager {

	retVal := f.p.Call("addGamepad")
	return FreeCameraInputsManagerFromJSObject(retVal, f.ctx)
}

// AddKeyboard calls the AddKeyboard method on the FreeCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecamerainputsmanager#addkeyboard
func (f *FreeCameraInputsManager) AddKeyboard() *FreeCameraInputsManager {

	retVal := f.p.Call("addKeyboard")
	return FreeCameraInputsManagerFromJSObject(retVal, f.ctx)
}

// FreeCameraInputsManagerAddMouseOpts contains optional parameters for FreeCameraInputsManager.AddMouse.
type FreeCameraInputsManagerAddMouseOpts struct {
	TouchEnabled *bool
}

// AddMouse calls the AddMouse method on the FreeCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecamerainputsmanager#addmouse
func (f *FreeCameraInputsManager) AddMouse(opts *FreeCameraInputsManagerAddMouseOpts) *FreeCameraInputsManager {
	if opts == nil {
		opts = &FreeCameraInputsManagerAddMouseOpts{}
	}

	args := make([]interface{}, 0, 0+1)

	if opts.TouchEnabled == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.TouchEnabled)
	}

	retVal := f.p.Call("addMouse", args...)
	return FreeCameraInputsManagerFromJSObject(retVal, f.ctx)
}

// AddTouch calls the AddTouch method on the FreeCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecamerainputsmanager#addtouch
func (f *FreeCameraInputsManager) AddTouch() *FreeCameraInputsManager {

	retVal := f.p.Call("addTouch")
	return FreeCameraInputsManagerFromJSObject(retVal, f.ctx)
}

// AddVirtualJoystick calls the AddVirtualJoystick method on the FreeCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecamerainputsmanager#addvirtualjoystick
func (f *FreeCameraInputsManager) AddVirtualJoystick() *FreeCameraInputsManager {

	retVal := f.p.Call("addVirtualJoystick")
	return FreeCameraInputsManagerFromJSObject(retVal, f.ctx)
}

// Clear calls the Clear method on the FreeCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecamerainputsmanager#clear
func (f *FreeCameraInputsManager) Clear() {

	f.p.Call("clear")
}

// RemoveMouse calls the RemoveMouse method on the FreeCameraInputsManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecamerainputsmanager#removemouse
func (f *FreeCameraInputsManager) RemoveMouse() *FreeCameraInputsManager {

	retVal := f.p.Call("removeMouse")
	return FreeCameraInputsManagerFromJSObject(retVal, f.ctx)
}

/*

 */
