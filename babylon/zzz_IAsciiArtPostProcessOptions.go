// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IAsciiArtPostProcessOptions represents a babylon.js IAsciiArtPostProcessOptions.
// Option available in the Ascii Art Post Process.
type IAsciiArtPostProcessOptions struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IAsciiArtPostProcessOptions) JSObject() js.Value { return i.p }

// IAsciiArtPostProcessOptions returns a IAsciiArtPostProcessOptions JavaScript class.
func (ba *Babylon) IAsciiArtPostProcessOptions() *IAsciiArtPostProcessOptions {
	p := ba.ctx.Get("IAsciiArtPostProcessOptions")
	return IAsciiArtPostProcessOptionsFromJSObject(p, ba.ctx)
}

// IAsciiArtPostProcessOptionsFromJSObject returns a wrapped IAsciiArtPostProcessOptions JavaScript class.
func IAsciiArtPostProcessOptionsFromJSObject(p js.Value, ctx js.Value) *IAsciiArtPostProcessOptions {
	return &IAsciiArtPostProcessOptions{p: p, ctx: ctx}
}

// IAsciiArtPostProcessOptionsArrayToJSArray returns a JavaScript Array for the wrapped array.
func IAsciiArtPostProcessOptionsArrayToJSArray(array []*IAsciiArtPostProcessOptions) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// CharacterSet returns the CharacterSet property of class IAsciiArtPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.iasciiartpostprocessoptions#characterset
func (i *IAsciiArtPostProcessOptions) CharacterSet(characterSet string) *IAsciiArtPostProcessOptions {
	p := ba.ctx.Get("IAsciiArtPostProcessOptions").New(characterSet)
	return IAsciiArtPostProcessOptionsFromJSObject(p, ba.ctx)
}

// SetCharacterSet sets the CharacterSet property of class IAsciiArtPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.iasciiartpostprocessoptions#characterset
func (i *IAsciiArtPostProcessOptions) SetCharacterSet(characterSet string) *IAsciiArtPostProcessOptions {
	p := ba.ctx.Get("IAsciiArtPostProcessOptions").New(characterSet)
	return IAsciiArtPostProcessOptionsFromJSObject(p, ba.ctx)
}

// Font returns the Font property of class IAsciiArtPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.iasciiartpostprocessoptions#font
func (i *IAsciiArtPostProcessOptions) Font(font string) *IAsciiArtPostProcessOptions {
	p := ba.ctx.Get("IAsciiArtPostProcessOptions").New(font)
	return IAsciiArtPostProcessOptionsFromJSObject(p, ba.ctx)
}

// SetFont sets the Font property of class IAsciiArtPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.iasciiartpostprocessoptions#font
func (i *IAsciiArtPostProcessOptions) SetFont(font string) *IAsciiArtPostProcessOptions {
	p := ba.ctx.Get("IAsciiArtPostProcessOptions").New(font)
	return IAsciiArtPostProcessOptionsFromJSObject(p, ba.ctx)
}

// MixToNormal returns the MixToNormal property of class IAsciiArtPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.iasciiartpostprocessoptions#mixtonormal
func (i *IAsciiArtPostProcessOptions) MixToNormal(mixToNormal float64) *IAsciiArtPostProcessOptions {
	p := ba.ctx.Get("IAsciiArtPostProcessOptions").New(mixToNormal)
	return IAsciiArtPostProcessOptionsFromJSObject(p, ba.ctx)
}

// SetMixToNormal sets the MixToNormal property of class IAsciiArtPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.iasciiartpostprocessoptions#mixtonormal
func (i *IAsciiArtPostProcessOptions) SetMixToNormal(mixToNormal float64) *IAsciiArtPostProcessOptions {
	p := ba.ctx.Get("IAsciiArtPostProcessOptions").New(mixToNormal)
	return IAsciiArtPostProcessOptionsFromJSObject(p, ba.ctx)
}

// MixToTile returns the MixToTile property of class IAsciiArtPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.iasciiartpostprocessoptions#mixtotile
func (i *IAsciiArtPostProcessOptions) MixToTile(mixToTile float64) *IAsciiArtPostProcessOptions {
	p := ba.ctx.Get("IAsciiArtPostProcessOptions").New(mixToTile)
	return IAsciiArtPostProcessOptionsFromJSObject(p, ba.ctx)
}

// SetMixToTile sets the MixToTile property of class IAsciiArtPostProcessOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.iasciiartpostprocessoptions#mixtotile
func (i *IAsciiArtPostProcessOptions) SetMixToTile(mixToTile float64) *IAsciiArtPostProcessOptions {
	p := ba.ctx.Get("IAsciiArtPostProcessOptions").New(mixToTile)
	return IAsciiArtPostProcessOptionsFromJSObject(p, ba.ctx)
}

*/
