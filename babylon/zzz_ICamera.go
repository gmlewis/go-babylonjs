// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ICamera represents a babylon.js ICamera.
// Loader interface with additional members.
type ICamera struct {
	*ICamera
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *ICamera) JSObject() js.Value { return i.p }

// ICamera returns a ICamera JavaScript class.
func (ba *Babylon) ICamera() *ICamera {
	p := ba.ctx.Get("ICamera")
	return ICameraFromJSObject(p, ba.ctx)
}

// ICameraFromJSObject returns a wrapped ICamera JavaScript class.
func ICameraFromJSObject(p js.Value, ctx js.Value) *ICamera {
	return &ICamera{ICamera: ICameraFromJSObject(p, ctx), ctx: ctx}
}

// ICameraArrayToJSArray returns a JavaScript Array for the wrapped array.
func ICameraArrayToJSArray(array []*ICamera) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Extensions returns the Extensions property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#extensions
func (i *ICamera) Extensions(extensions js.Value) *ICamera {
	p := ba.ctx.Get("ICamera").New(extensions)
	return ICameraFromJSObject(p, ba.ctx)
}

// SetExtensions sets the Extensions property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#extensions
func (i *ICamera) SetExtensions(extensions js.Value) *ICamera {
	p := ba.ctx.Get("ICamera").New(extensions)
	return ICameraFromJSObject(p, ba.ctx)
}

// Extras returns the Extras property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#extras
func (i *ICamera) Extras(extras interface{}) *ICamera {
	p := ba.ctx.Get("ICamera").New(extras)
	return ICameraFromJSObject(p, ba.ctx)
}

// SetExtras sets the Extras property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#extras
func (i *ICamera) SetExtras(extras interface{}) *ICamera {
	p := ba.ctx.Get("ICamera").New(extras)
	return ICameraFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#index
func (i *ICamera) Index(index float64) *ICamera {
	p := ba.ctx.Get("ICamera").New(index)
	return ICameraFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#index
func (i *ICamera) SetIndex(index float64) *ICamera {
	p := ba.ctx.Get("ICamera").New(index)
	return ICameraFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#name
func (i *ICamera) Name(name string) *ICamera {
	p := ba.ctx.Get("ICamera").New(name)
	return ICameraFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#name
func (i *ICamera) SetName(name string) *ICamera {
	p := ba.ctx.Get("ICamera").New(name)
	return ICameraFromJSObject(p, ba.ctx)
}

// Orthographic returns the Orthographic property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#orthographic
func (i *ICamera) Orthographic(orthographic *ICameraOrthographic) *ICamera {
	p := ba.ctx.Get("ICamera").New(orthographic.JSObject())
	return ICameraFromJSObject(p, ba.ctx)
}

// SetOrthographic sets the Orthographic property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#orthographic
func (i *ICamera) SetOrthographic(orthographic *ICameraOrthographic) *ICamera {
	p := ba.ctx.Get("ICamera").New(orthographic.JSObject())
	return ICameraFromJSObject(p, ba.ctx)
}

// Perspective returns the Perspective property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#perspective
func (i *ICamera) Perspective(perspective *ICameraPerspective) *ICamera {
	p := ba.ctx.Get("ICamera").New(perspective.JSObject())
	return ICameraFromJSObject(p, ba.ctx)
}

// SetPerspective sets the Perspective property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#perspective
func (i *ICamera) SetPerspective(perspective *ICameraPerspective) *ICamera {
	p := ba.ctx.Get("ICamera").New(perspective.JSObject())
	return ICameraFromJSObject(p, ba.ctx)
}

// Type returns the Type property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#type
func (i *ICamera) Type(jsType *CameraType) *ICamera {
	p := ba.ctx.Get("ICamera").New(jsType.JSObject())
	return ICameraFromJSObject(p, ba.ctx)
}

// SetType sets the Type property of class ICamera.
//
// https://doc.babylonjs.com/api/classes/babylon.icamera#type
func (i *ICamera) SetType(jsType *CameraType) *ICamera {
	p := ba.ctx.Get("ICamera").New(jsType.JSObject())
	return ICameraFromJSObject(p, ba.ctx)
}

*/
