// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PBRCustomMaterial represents a babylon.js PBRCustomMaterial.
//
type PBRCustomMaterial struct {
	*PBRMaterial
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (p *PBRCustomMaterial) JSObject() js.Value { return p.p }

// PBRCustomMaterial returns a PBRCustomMaterial JavaScript class.
func (ba *Babylon) PBRCustomMaterial() *PBRCustomMaterial {
	p := ba.ctx.Get("PBRCustomMaterial")
	return PBRCustomMaterialFromJSObject(p, ba.ctx)
}

// PBRCustomMaterialFromJSObject returns a wrapped PBRCustomMaterial JavaScript class.
func PBRCustomMaterialFromJSObject(p js.Value, ctx js.Value) *PBRCustomMaterial {
	return &PBRCustomMaterial{PBRMaterial: PBRMaterialFromJSObject(p, ctx), ctx: ctx}
}

// PBRCustomMaterialArrayToJSArray returns a JavaScript Array for the wrapped array.
func PBRCustomMaterialArrayToJSArray(array []*PBRCustomMaterial) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewPBRCustomMaterial returns a new PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#constructor
func (ba *Babylon) NewPBRCustomMaterial(name string, scene *Scene) *PBRCustomMaterial {

	args := make([]interface{}, 0, 2+0)

	args = append(args, name)
	args = append(args, scene.JSObject())

	p := ba.ctx.Get("PBRCustomMaterial").New(args...)
	return PBRCustomMaterialFromJSObject(p, ba.ctx)
}

// AddUniform calls the AddUniform method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#adduniform
func (p *PBRCustomMaterial) AddUniform(name string, kind string, param JSObject) *PBRCustomMaterial {

	args := make([]interface{}, 0, 3+0)

	args = append(args, name)

	args = append(args, kind)

	if param == nil {
		args = append(args, js.Null())
	} else {
		args = append(args, param.JSObject())
	}

	retVal := p.p.Call("AddUniform", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// AttachAfterBind calls the AttachAfterBind method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#attachafterbind
func (p *PBRCustomMaterial) AttachAfterBind(mesh *Mesh, effect *Effect) {

	args := make([]interface{}, 0, 2+0)

	if mesh == nil {
		args = append(args, js.Null())
	} else {
		args = append(args, mesh.JSObject())
	}

	if effect == nil {
		args = append(args, js.Null())
	} else {
		args = append(args, effect.JSObject())
	}

	p.p.Call("AttachAfterBind", args...)
}

// Builder calls the Builder method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#builder
func (p *PBRCustomMaterial) Builder(shaderName string, uniforms []string, uniformBuffers []string, samplers []string, defines js.Value) string {

	args := make([]interface{}, 0, 5+0)

	args = append(args, shaderName)

	args = append(args, uniforms)

	args = append(args, uniformBuffers)

	args = append(args, samplers)

	args = append(args, defines)

	retVal := p.p.Call("Builder", args...)
	return retVal.String()
}

// Fragment_Before_Fog calls the Fragment_Before_Fog method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_before_fog
func (p *PBRCustomMaterial) Fragment_Before_Fog(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_Before_Fog", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Fragment_Before_FragColor calls the Fragment_Before_FragColor method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_before_fragcolor
func (p *PBRCustomMaterial) Fragment_Before_FragColor(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_Before_FragColor", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Fragment_Before_Lights calls the Fragment_Before_Lights method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_before_lights
func (p *PBRCustomMaterial) Fragment_Before_Lights(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_Before_Lights", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Fragment_Begin calls the Fragment_Begin method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_begin
func (p *PBRCustomMaterial) Fragment_Begin(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_Begin", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Fragment_Custom_Albedo calls the Fragment_Custom_Albedo method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_custom_albedo
func (p *PBRCustomMaterial) Fragment_Custom_Albedo(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_Custom_Albedo", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Fragment_Custom_Alpha calls the Fragment_Custom_Alpha method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_custom_alpha
func (p *PBRCustomMaterial) Fragment_Custom_Alpha(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_Custom_Alpha", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Fragment_Custom_MetallicRoughness calls the Fragment_Custom_MetallicRoughness method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_custom_metallicroughness
func (p *PBRCustomMaterial) Fragment_Custom_MetallicRoughness(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_Custom_MetallicRoughness", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Fragment_Custom_MicroSurface calls the Fragment_Custom_MicroSurface method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_custom_microsurface
func (p *PBRCustomMaterial) Fragment_Custom_MicroSurface(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_Custom_MicroSurface", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Fragment_Definitions calls the Fragment_Definitions method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_definitions
func (p *PBRCustomMaterial) Fragment_Definitions(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_Definitions", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Fragment_MainBegin calls the Fragment_MainBegin method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragment_mainbegin
func (p *PBRCustomMaterial) Fragment_MainBegin(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Fragment_MainBegin", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// ReviewUniform calls the ReviewUniform method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#reviewuniform
func (p *PBRCustomMaterial) ReviewUniform(name string, arr []string) []string {

	args := make([]interface{}, 0, 2+0)

	args = append(args, name)

	args = append(args, arr)

	retVal := p.p.Call("ReviewUniform", args...)
	result := []string{}
	for ri := 0; ri < retVal.Length(); ri++ {
		result = append(result, retVal.Index(ri).String())
	}
	return result
}

// Vertex_Before_NormalUpdated calls the Vertex_Before_NormalUpdated method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#vertex_before_normalupdated
func (p *PBRCustomMaterial) Vertex_Before_NormalUpdated(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Vertex_Before_NormalUpdated", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Vertex_Before_PositionUpdated calls the Vertex_Before_PositionUpdated method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#vertex_before_positionupdated
func (p *PBRCustomMaterial) Vertex_Before_PositionUpdated(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Vertex_Before_PositionUpdated", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Vertex_Begin calls the Vertex_Begin method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#vertex_begin
func (p *PBRCustomMaterial) Vertex_Begin(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Vertex_Begin", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Vertex_Definitions calls the Vertex_Definitions method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#vertex_definitions
func (p *PBRCustomMaterial) Vertex_Definitions(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Vertex_Definitions", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Vertex_MainBegin calls the Vertex_MainBegin method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#vertex_mainbegin
func (p *PBRCustomMaterial) Vertex_MainBegin(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Vertex_MainBegin", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// Vertex_MainEnd calls the Vertex_MainEnd method on the PBRCustomMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#vertex_mainend
func (p *PBRCustomMaterial) Vertex_MainEnd(shaderPart string) *PBRCustomMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, shaderPart)

	retVal := p.p.Call("Vertex_MainEnd", args...)
	return PBRCustomMaterialFromJSObject(retVal, p.ctx)
}

// CustomParts returns the CustomParts property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#customparts
func (p *PBRCustomMaterial) CustomParts() *ShaderAlebdoParts {
	retVal := p.p.Get("CustomParts")
	return ShaderAlebdoPartsFromJSObject(retVal, p.ctx)
}

// SetCustomParts sets the CustomParts property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#customparts
func (p *PBRCustomMaterial) SetCustomParts(CustomParts *ShaderAlebdoParts) *PBRCustomMaterial {
	p.p.Set("CustomParts", CustomParts.JSObject())
	return p
}

// FragmentShader returns the FragmentShader property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragmentshader
func (p *PBRCustomMaterial) FragmentShader() string {
	retVal := p.p.Get("FragmentShader")
	return retVal.String()
}

// SetFragmentShader sets the FragmentShader property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#fragmentshader
func (p *PBRCustomMaterial) SetFragmentShader(FragmentShader string) *PBRCustomMaterial {
	p.p.Set("FragmentShader", FragmentShader)
	return p
}

// ShaderIndexer returns the ShaderIndexer property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#shaderindexer
func (p *PBRCustomMaterial) ShaderIndexer() float64 {
	retVal := p.p.Get("ShaderIndexer")
	return retVal.Float()
}

// SetShaderIndexer sets the ShaderIndexer property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#shaderindexer
func (p *PBRCustomMaterial) SetShaderIndexer(ShaderIndexer float64) *PBRCustomMaterial {
	p.p.Set("ShaderIndexer", ShaderIndexer)
	return p
}

// VertexShader returns the VertexShader property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#vertexshader
func (p *PBRCustomMaterial) VertexShader() string {
	retVal := p.p.Get("VertexShader")
	return retVal.String()
}

// SetVertexShader sets the VertexShader property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#vertexshader
func (p *PBRCustomMaterial) SetVertexShader(VertexShader string) *PBRCustomMaterial {
	p.p.Set("VertexShader", VertexShader)
	return p
}

// _createdShaderName returns the _createdShaderName property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_createdshadername
func (p *PBRCustomMaterial) _createdShaderName() string {
	retVal := p.p.Get("_createdShaderName")
	return retVal.String()
}

// Set_createdShaderName sets the _createdShaderName property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_createdshadername
func (p *PBRCustomMaterial) Set_createdShaderName(_createdShaderName string) *PBRCustomMaterial {
	p.p.Set("_createdShaderName", _createdShaderName)
	return p
}

// _customUniform returns the _customUniform property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_customuniform
func (p *PBRCustomMaterial) _customUniform() []string {
	retVal := p.p.Get("_customUniform")
	result := []string{}
	for ri := 0; ri < retVal.Length(); ri++ {
		result = append(result, retVal.Index(ri).String())
	}
	return result
}

// Set_customUniform sets the _customUniform property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_customuniform
func (p *PBRCustomMaterial) Set_customUniform(_customUniform []string) *PBRCustomMaterial {
	p.p.Set("_customUniform", _customUniform)
	return p
}

// _isCreatedShader returns the _isCreatedShader property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_iscreatedshader
func (p *PBRCustomMaterial) _isCreatedShader() bool {
	retVal := p.p.Get("_isCreatedShader")
	return retVal.Bool()
}

// Set_isCreatedShader sets the _isCreatedShader property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_iscreatedshader
func (p *PBRCustomMaterial) Set_isCreatedShader(_isCreatedShader bool) *PBRCustomMaterial {
	p.p.Set("_isCreatedShader", _isCreatedShader)
	return p
}

// _newSamplerInstances returns the _newSamplerInstances property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_newsamplerinstances
func (p *PBRCustomMaterial) _newSamplerInstances() []*Texture {
	retVal := p.p.Get("_newSamplerInstances")
	result := []*Texture{}
	for ri := 0; ri < retVal.Length(); ri++ {
		result = append(result, TextureFromJSObject(retVal.Index(ri), p.ctx))
	}
	return result
}

// Set_newSamplerInstances sets the _newSamplerInstances property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_newsamplerinstances
func (p *PBRCustomMaterial) Set_newSamplerInstances(_newSamplerInstances []*Texture) *PBRCustomMaterial {
	p.p.Set("_newSamplerInstances", _newSamplerInstances)
	return p
}

// _newUniformInstances returns the _newUniformInstances property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_newuniforminstances
func (p *PBRCustomMaterial) _newUniformInstances() js.Value {
	retVal := p.p.Get("_newUniformInstances")
	return retVal
}

// Set_newUniformInstances sets the _newUniformInstances property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_newuniforminstances
func (p *PBRCustomMaterial) Set_newUniformInstances(_newUniformInstances JSObject) *PBRCustomMaterial {
	p.p.Set("_newUniformInstances", _newUniformInstances.JSObject())
	return p
}

// _newUniforms returns the _newUniforms property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_newuniforms
func (p *PBRCustomMaterial) _newUniforms() []string {
	retVal := p.p.Get("_newUniforms")
	result := []string{}
	for ri := 0; ri < retVal.Length(); ri++ {
		result = append(result, retVal.Index(ri).String())
	}
	return result
}

// Set_newUniforms sets the _newUniforms property of class PBRCustomMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrcustommaterial#_newuniforms
func (p *PBRCustomMaterial) Set_newUniforms(_newUniforms []string) *PBRCustomMaterial {
	p.p.Set("_newUniforms", _newUniforms)
	return p
}
