// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// MultiPointerScaleBehavior represents a babylon.js MultiPointerScaleBehavior.
// A behavior that when attached to a mesh will allow the mesh to be scaled
type MultiPointerScaleBehavior struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (m *MultiPointerScaleBehavior) JSObject() js.Value { return m.p }

// MultiPointerScaleBehavior returns a MultiPointerScaleBehavior JavaScript class.
func (ba *Babylon) MultiPointerScaleBehavior() *MultiPointerScaleBehavior {
	p := ba.ctx.Get("MultiPointerScaleBehavior")
	return MultiPointerScaleBehaviorFromJSObject(p, ba.ctx)
}

// MultiPointerScaleBehaviorFromJSObject returns a wrapped MultiPointerScaleBehavior JavaScript class.
func MultiPointerScaleBehaviorFromJSObject(p js.Value, ctx js.Value) *MultiPointerScaleBehavior {
	return &MultiPointerScaleBehavior{p: p, ctx: ctx}
}

// NewMultiPointerScaleBehavior returns a new MultiPointerScaleBehavior object.
//
// https://doc.babylonjs.com/api/classes/babylon.multipointerscalebehavior
func (ba *Babylon) NewMultiPointerScaleBehavior() *MultiPointerScaleBehavior {

	args := make([]interface{}, 0, 0+0)

	p := ba.ctx.Get("MultiPointerScaleBehavior").New(args...)
	return MultiPointerScaleBehaviorFromJSObject(p, ba.ctx)
}

// Attach calls the Attach method on the MultiPointerScaleBehavior object.
//
// https://doc.babylonjs.com/api/classes/babylon.multipointerscalebehavior#attach
func (m *MultiPointerScaleBehavior) Attach(ownerNode *Mesh) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, ownerNode.JSObject())

	m.p.Call("attach", args...)
}

// Detach calls the Detach method on the MultiPointerScaleBehavior object.
//
// https://doc.babylonjs.com/api/classes/babylon.multipointerscalebehavior#detach
func (m *MultiPointerScaleBehavior) Detach() {

	args := make([]interface{}, 0, 0+0)

	m.p.Call("detach", args...)
}

// Init calls the Init method on the MultiPointerScaleBehavior object.
//
// https://doc.babylonjs.com/api/classes/babylon.multipointerscalebehavior#init
func (m *MultiPointerScaleBehavior) Init() {

	args := make([]interface{}, 0, 0+0)

	m.p.Call("init", args...)
}

/*

// Name returns the Name property of class MultiPointerScaleBehavior.
//
// https://doc.babylonjs.com/api/classes/babylon.multipointerscalebehavior#name
func (m *MultiPointerScaleBehavior) Name(name string) *MultiPointerScaleBehavior {
	p := ba.ctx.Get("MultiPointerScaleBehavior").New(name)
	return MultiPointerScaleBehaviorFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class MultiPointerScaleBehavior.
//
// https://doc.babylonjs.com/api/classes/babylon.multipointerscalebehavior#name
func (m *MultiPointerScaleBehavior) SetName(name string) *MultiPointerScaleBehavior {
	p := ba.ctx.Get("MultiPointerScaleBehavior").New(name)
	return MultiPointerScaleBehaviorFromJSObject(p, ba.ctx)
}

*/
