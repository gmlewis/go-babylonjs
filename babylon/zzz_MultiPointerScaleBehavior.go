// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// MultiPointerScaleBehavior represents a babylon.js MultiPointerScaleBehavior.
// A behavior that when attached to a mesh will allow the mesh to be scaled
type MultiPointerScaleBehavior struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (m *MultiPointerScaleBehavior) JSObject() js.Value { return m.p }

// MultiPointerScaleBehavior returns a MultiPointerScaleBehavior JavaScript class.
func (b *Babylon) MultiPointerScaleBehavior() *MultiPointerScaleBehavior {
	p := b.ctx.Get("MultiPointerScaleBehavior")
	return MultiPointerScaleBehaviorFromJSObject(p)
}

// MultiPointerScaleBehaviorFromJSObject returns a wrapped MultiPointerScaleBehavior JavaScript class.
func MultiPointerScaleBehaviorFromJSObject(p js.Value) *MultiPointerScaleBehavior {
	return &MultiPointerScaleBehavior{p: p}
}

// NewMultiPointerScaleBehavior returns a new MultiPointerScaleBehavior object.
//
// https://doc.babylonjs.com/api/classes/babylon.multipointerscalebehavior
func (b *Babylon) NewMultiPointerScaleBehavior() *MultiPointerScaleBehavior {
	p := b.ctx.Get("MultiPointerScaleBehavior").New()
	return MultiPointerScaleBehaviorFromJSObject(p)
}

// TODO: methods
