// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Sprite represents a babylon.js Sprite.
// Class used to represent a sprite
//
// See: http://doc.babylonjs.com/babylon101/sprites
type Sprite struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (s *Sprite) JSObject() js.Value { return s.p }

// Sprite returns a Sprite JavaScript class.
func (b *Babylon) Sprite() *Sprite {
	p := b.ctx.Get("Sprite")
	return SpriteFromJSObject(p)
}

// SpriteFromJSObject returns a wrapped Sprite JavaScript class.
func SpriteFromJSObject(p js.Value) *Sprite {
	return &Sprite{p: p}
}

// NewSprite returns a new Sprite object.
//
// https://doc.babylonjs.com/api/classes/babylon.sprite
func (b *Babylon) NewSprite(name string, manager *ISpriteManager) *Sprite {
	p := b.ctx.Get("Sprite").New(name, manager.JSObject())
	return SpriteFromJSObject(p)
}

// TODO: methods
