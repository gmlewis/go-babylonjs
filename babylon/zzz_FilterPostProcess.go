// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// FilterPostProcess represents a babylon.js FilterPostProcess.
// Applies a kernel filter to the image
type FilterPostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (f *FilterPostProcess) JSObject() js.Value { return f.p }

// FilterPostProcess returns a FilterPostProcess JavaScript class.
func (b *Babylon) FilterPostProcess() *FilterPostProcess {
	p := b.ctx.Get("FilterPostProcess")
	return FilterPostProcessFromJSObject(p)
}

// FilterPostProcessFromJSObject returns a wrapped FilterPostProcess JavaScript class.
func FilterPostProcessFromJSObject(p js.Value) *FilterPostProcess {
	return &FilterPostProcess{PostProcessFromJSObject(p)}
}

// NewFilterPostProcess returns a new FilterPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.filterpostprocess
func (b *Babylon) NewFilterPostProcess(todo parameters) *FilterPostProcess {
	p := b.ctx.Get("FilterPostProcess").New(todo)
	return FilterPostProcessFromJSObject(p)
}

// TODO: methods
