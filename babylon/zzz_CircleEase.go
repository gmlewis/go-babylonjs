// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// CircleEase represents a babylon.js CircleEase.
// Easing function with a circle shape (see link below).

//
// See: http://doc.babylonjs.com/babylon101/animations#easing-functions
type CircleEase struct{ *EasingFunction }

// JSObject returns the underlying js.Value.
func (c *CircleEase) JSObject() js.Value { return c.p }

// CircleEase returns a CircleEase JavaScript class.
func (b *Babylon) CircleEase() *CircleEase {
	p := b.ctx.Get("CircleEase")
	return CircleEaseFromJSObject(p)
}

// CircleEaseFromJSObject returns a wrapped CircleEase JavaScript class.
func CircleEaseFromJSObject(p js.Value) *CircleEase {
	return &CircleEase{EasingFunctionFromJSObject(p)}
}

// NewCircleEase returns a new CircleEase object.
//
// https://doc.babylonjs.com/api/classes/babylon.circleease
func (b *Babylon) NewCircleEase(todo parameters) *CircleEase {
	p := b.ctx.Get("CircleEase").New(todo)
	return CircleEaseFromJSObject(p)
}

// TODO: methods
