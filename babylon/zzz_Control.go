// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Control represents a babylon.js Control.
// Root class used for all 2D controls
//
// See: http://doc.babylonjs.com/how_to/gui#controls
type Control struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (c *Control) JSObject() js.Value { return c.p }

// Control returns a Control JavaScript class.
func (ba *Babylon) Control() *Control {
	p := ba.ctx.Get("Control")
	return ControlFromJSObject(p, ba.ctx)
}

// ControlFromJSObject returns a wrapped Control JavaScript class.
func ControlFromJSObject(p js.Value, ctx js.Value) *Control {
	return &Control{p: p, ctx: ctx}
}

// NewControlOpts contains optional parameters for NewControl.
type NewControlOpts struct {
	Name *JSString
}

// NewControl returns a new Control object.
//
// https://doc.babylonjs.com/api/classes/babylon.control
func (ba *Babylon) NewControl(opts *NewControlOpts) *Control {
	if opts == nil {
		opts = &NewControlOpts{}
	}

	p := ba.ctx.Get("Control").New(opts.Name.JSObject())
	return ControlFromJSObject(p, ba.ctx)
}

// TODO: methods
