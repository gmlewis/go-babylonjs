// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IEffectRendererOptions represents a babylon.js IEffectRendererOptions.
// Effect Render Options
type IEffectRendererOptions struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IEffectRendererOptions) JSObject() js.Value { return i.p }

// IEffectRendererOptions returns a IEffectRendererOptions JavaScript class.
func (ba *Babylon) IEffectRendererOptions() *IEffectRendererOptions {
	p := ba.ctx.Get("IEffectRendererOptions")
	return IEffectRendererOptionsFromJSObject(p, ba.ctx)
}

// IEffectRendererOptionsFromJSObject returns a wrapped IEffectRendererOptions JavaScript class.
func IEffectRendererOptionsFromJSObject(p js.Value, ctx js.Value) *IEffectRendererOptions {
	return &IEffectRendererOptions{p: p, ctx: ctx}
}

// IEffectRendererOptionsArrayToJSArray returns a JavaScript Array for the wrapped array.
func IEffectRendererOptionsArrayToJSArray(array []*IEffectRendererOptions) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Indices returns the Indices property of class IEffectRendererOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ieffectrendereroptions#indices
func (i *IEffectRendererOptions) Indices(indices float64) *IEffectRendererOptions {
	p := ba.ctx.Get("IEffectRendererOptions").New(indices)
	return IEffectRendererOptionsFromJSObject(p, ba.ctx)
}

// SetIndices sets the Indices property of class IEffectRendererOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ieffectrendereroptions#indices
func (i *IEffectRendererOptions) SetIndices(indices float64) *IEffectRendererOptions {
	p := ba.ctx.Get("IEffectRendererOptions").New(indices)
	return IEffectRendererOptionsFromJSObject(p, ba.ctx)
}

// Positions returns the Positions property of class IEffectRendererOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ieffectrendereroptions#positions
func (i *IEffectRendererOptions) Positions(positions float64) *IEffectRendererOptions {
	p := ba.ctx.Get("IEffectRendererOptions").New(positions)
	return IEffectRendererOptionsFromJSObject(p, ba.ctx)
}

// SetPositions sets the Positions property of class IEffectRendererOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.ieffectrendereroptions#positions
func (i *IEffectRendererOptions) SetPositions(positions float64) *IEffectRendererOptions {
	p := ba.ctx.Get("IEffectRendererOptions").New(positions)
	return IEffectRendererOptionsFromJSObject(p, ba.ctx)
}

*/
