// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ScrollBar represents a babylon.js ScrollBar.
// Class used to create slider controls
type ScrollBar struct {
	*BaseSlider
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (s *ScrollBar) JSObject() js.Value { return s.p }

// ScrollBar returns a ScrollBar JavaScript class.
func (ba *Babylon) ScrollBar() *ScrollBar {
	p := ba.ctx.Get("ScrollBar")
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ScrollBarFromJSObject returns a wrapped ScrollBar JavaScript class.
func ScrollBarFromJSObject(p js.Value, ctx js.Value) *ScrollBar {
	return &ScrollBar{BaseSlider: BaseSliderFromJSObject(p, ctx), ctx: ctx}
}

// ScrollBarArrayToJSArray returns a JavaScript Array for the wrapped array.
func ScrollBarArrayToJSArray(array []*ScrollBar) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewScrollBarOpts contains optional parameters for NewScrollBar.
type NewScrollBarOpts struct {
	Name *string
}

// NewScrollBar returns a new ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar
func (ba *Babylon) NewScrollBar(opts *NewScrollBarOpts) *ScrollBar {
	if opts == nil {
		opts = &NewScrollBarOpts{}
	}

	args := make([]interface{}, 0, 0+1)

	if opts.Name == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Name)
	}

	p := ba.ctx.Get("ScrollBar").New(args...)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Contains calls the Contains method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#contains
func (s *ScrollBar) Contains(x float64, y float64) bool {

	args := make([]interface{}, 0, 2+0)

	args = append(args, x)
	args = append(args, y)

	retVal := s.p.Call("contains", args...)
	return retVal.Bool()
}

// Dispose calls the Dispose method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#dispose
func (s *ScrollBar) Dispose() {

	s.p.Call("dispose")
}

// GetAscendantOfClass calls the GetAscendantOfClass method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#getascendantofclass
func (s *ScrollBar) GetAscendantOfClass(className string) *Control {

	args := make([]interface{}, 0, 1+0)

	args = append(args, className)

	retVal := s.p.Call("getAscendantOfClass", args...)
	return ControlFromJSObject(retVal, s.ctx)
}

// GetClassName calls the GetClassName method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#getclassname
func (s *ScrollBar) GetClassName() string {

	retVal := s.p.Call("getClassName")
	return retVal.String()
}

// ScrollBarGetDescendantsOpts contains optional parameters for ScrollBar.GetDescendants.
type ScrollBarGetDescendantsOpts struct {
	DirectDescendantsOnly *bool
	Predicate             *func()
}

// GetDescendants calls the GetDescendants method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#getdescendants
func (s *ScrollBar) GetDescendants(opts *ScrollBarGetDescendantsOpts) *Control {
	if opts == nil {
		opts = &ScrollBarGetDescendantsOpts{}
	}

	args := make([]interface{}, 0, 0+2)

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	retVal := s.p.Call("getDescendants", args...)
	return ControlFromJSObject(retVal, s.ctx)
}

// ScrollBarGetDescendantsToRefOpts contains optional parameters for ScrollBar.GetDescendantsToRef.
type ScrollBarGetDescendantsToRefOpts struct {
	DirectDescendantsOnly *bool
	Predicate             *func()
}

// GetDescendantsToRef calls the GetDescendantsToRef method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#getdescendantstoref
func (s *ScrollBar) GetDescendantsToRef(results *Control, opts *ScrollBarGetDescendantsToRefOpts) {
	if opts == nil {
		opts = &ScrollBarGetDescendantsToRefOpts{}
	}

	args := make([]interface{}, 0, 1+2)

	args = append(args, results.JSObject())

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	s.p.Call("getDescendantsToRef", args...)
}

// GetLocalCoordinates calls the GetLocalCoordinates method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#getlocalcoordinates
func (s *ScrollBar) GetLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := s.p.Call("getLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, s.ctx)
}

// GetLocalCoordinatesToRef calls the GetLocalCoordinatesToRef method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#getlocalcoordinatestoref
func (s *ScrollBar) GetLocalCoordinatesToRef(globalCoordinates *Vector2, result *Vector2) *Control {

	args := make([]interface{}, 0, 2+0)

	args = append(args, globalCoordinates.JSObject())
	args = append(args, result.JSObject())

	retVal := s.p.Call("getLocalCoordinatesToRef", args...)
	return ControlFromJSObject(retVal, s.ctx)
}

// GetParentLocalCoordinates calls the GetParentLocalCoordinates method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#getparentlocalcoordinates
func (s *ScrollBar) GetParentLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := s.p.Call("getParentLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, s.ctx)
}

// IsAscendant calls the IsAscendant method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isascendant
func (s *ScrollBar) IsAscendant(container *Control) bool {

	args := make([]interface{}, 0, 1+0)

	args = append(args, container.JSObject())

	retVal := s.p.Call("isAscendant", args...)
	return retVal.Bool()
}

// LinkWithMesh calls the LinkWithMesh method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkwithmesh
func (s *ScrollBar) LinkWithMesh(mesh *AbstractMesh) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, mesh.JSObject())

	s.p.Call("linkWithMesh", args...)
}

// MoveToVector3 calls the MoveToVector3 method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#movetovector3
func (s *ScrollBar) MoveToVector3(position *Vector3, scene *Scene) {

	args := make([]interface{}, 0, 2+0)

	args = append(args, position.JSObject())
	args = append(args, scene.JSObject())

	s.p.Call("moveToVector3", args...)
}

// _draw calls the _draw method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#_draw
func (s *ScrollBar) _draw(context js.Value) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, context)

	s.p.Call("_draw", args...)
}

// _onPointerDown calls the _onPointerDown method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#_onpointerdown
func (s *ScrollBar) _onPointerDown(target *Control, coordinates *Vector2, pointerId float64, buttonIndex float64) bool {

	args := make([]interface{}, 0, 4+0)

	args = append(args, target.JSObject())
	args = append(args, coordinates.JSObject())
	args = append(args, pointerId)
	args = append(args, buttonIndex)

	retVal := s.p.Call("_onPointerDown", args...)
	return retVal.Bool()
}

// _onPointerMove calls the _onPointerMove method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#_onpointermove
func (s *ScrollBar) _onPointerMove(target *Control, coordinates *Vector2, pointerId float64) {

	args := make([]interface{}, 0, 3+0)

	args = append(args, target.JSObject())
	args = append(args, coordinates.JSObject())
	args = append(args, pointerId)

	s.p.Call("_onPointerMove", args...)
}

// _onPointerUp calls the _onPointerUp method on the ScrollBar object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#_onpointerup
func (s *ScrollBar) _onPointerUp(target *Control, coordinates *Vector2, pointerId float64, buttonIndex float64, notifyClick bool) {

	args := make([]interface{}, 0, 5+0)

	args = append(args, target.JSObject())
	args = append(args, coordinates.JSObject())
	args = append(args, pointerId)
	args = append(args, buttonIndex)
	args = append(args, notifyClick)

	s.p.Call("_onPointerUp", args...)
}

/*

// AllowAlphaInheritance returns the AllowAlphaInheritance property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#allowalphainheritance
func (s *ScrollBar) AllowAlphaInheritance(AllowAlphaInheritance bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(AllowAlphaInheritance)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetAllowAlphaInheritance sets the AllowAlphaInheritance property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#allowalphainheritance
func (s *ScrollBar) SetAllowAlphaInheritance(AllowAlphaInheritance bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(AllowAlphaInheritance)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Alpha returns the Alpha property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#alpha
func (s *ScrollBar) Alpha(alpha float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(alpha)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetAlpha sets the Alpha property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#alpha
func (s *ScrollBar) SetAlpha(alpha float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(alpha)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Background returns the Background property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#background
func (s *ScrollBar) Background(background string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(background)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetBackground sets the Background property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#background
func (s *ScrollBar) SetBackground(background string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(background)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// BarOffset returns the BarOffset property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#baroffset
func (s *ScrollBar) BarOffset(barOffset string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(barOffset)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetBarOffset sets the BarOffset property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#baroffset
func (s *ScrollBar) SetBarOffset(barOffset string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(barOffset)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// BarOffsetInPixels returns the BarOffsetInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#baroffsetinpixels
func (s *ScrollBar) BarOffsetInPixels(barOffsetInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(barOffsetInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetBarOffsetInPixels sets the BarOffsetInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#baroffsetinpixels
func (s *ScrollBar) SetBarOffsetInPixels(barOffsetInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(barOffsetInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// BorderColor returns the BorderColor property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#bordercolor
func (s *ScrollBar) BorderColor(borderColor string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(borderColor)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetBorderColor sets the BorderColor property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#bordercolor
func (s *ScrollBar) SetBorderColor(borderColor string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(borderColor)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// CenterX returns the CenterX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#centerx
func (s *ScrollBar) CenterX(centerX float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(centerX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetCenterX sets the CenterX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#centerx
func (s *ScrollBar) SetCenterX(centerX float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(centerX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// CenterY returns the CenterY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#centery
func (s *ScrollBar) CenterY(centerY float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(centerY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetCenterY sets the CenterY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#centery
func (s *ScrollBar) SetCenterY(centerY float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(centerY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ClipChildren returns the ClipChildren property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#clipchildren
func (s *ScrollBar) ClipChildren(clipChildren bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(clipChildren)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetClipChildren sets the ClipChildren property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#clipchildren
func (s *ScrollBar) SetClipChildren(clipChildren bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(clipChildren)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ClipContent returns the ClipContent property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#clipcontent
func (s *ScrollBar) ClipContent(clipContent bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(clipContent)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetClipContent sets the ClipContent property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#clipcontent
func (s *ScrollBar) SetClipContent(clipContent bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(clipContent)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Color returns the Color property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#color
func (s *ScrollBar) Color(color string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(color)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetColor sets the Color property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#color
func (s *ScrollBar) SetColor(color string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(color)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// DisabledColor returns the DisabledColor property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#disabledcolor
func (s *ScrollBar) DisabledColor(disabledColor string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(disabledColor)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetDisabledColor sets the DisabledColor property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#disabledcolor
func (s *ScrollBar) SetDisabledColor(disabledColor string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(disabledColor)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// DisplayThumb returns the DisplayThumb property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#displaythumb
func (s *ScrollBar) DisplayThumb(displayThumb bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(displayThumb)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetDisplayThumb sets the DisplayThumb property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#displaythumb
func (s *ScrollBar) SetDisplayThumb(displayThumb bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(displayThumb)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// FontFamily returns the FontFamily property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontfamily
func (s *ScrollBar) FontFamily(fontFamily string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontFamily)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetFontFamily sets the FontFamily property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontfamily
func (s *ScrollBar) SetFontFamily(fontFamily string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontFamily)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// FontOffset returns the FontOffset property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontoffset
func (s *ScrollBar) FontOffset(fontOffset js.Value) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontOffset)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetFontOffset sets the FontOffset property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontoffset
func (s *ScrollBar) SetFontOffset(fontOffset js.Value) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontOffset)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// FontSize returns the FontSize property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontsize
func (s *ScrollBar) FontSize(fontSize string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontSize)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetFontSize sets the FontSize property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontsize
func (s *ScrollBar) SetFontSize(fontSize string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontSize)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// FontSizeInPixels returns the FontSizeInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontsizeinpixels
func (s *ScrollBar) FontSizeInPixels(fontSizeInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontSizeInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetFontSizeInPixels sets the FontSizeInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontsizeinpixels
func (s *ScrollBar) SetFontSizeInPixels(fontSizeInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontSizeInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// FontStyle returns the FontStyle property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontstyle
func (s *ScrollBar) FontStyle(fontStyle string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontStyle)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetFontStyle sets the FontStyle property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontstyle
func (s *ScrollBar) SetFontStyle(fontStyle string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontStyle)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// FontWeight returns the FontWeight property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontweight
func (s *ScrollBar) FontWeight(fontWeight string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontWeight)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetFontWeight sets the FontWeight property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#fontweight
func (s *ScrollBar) SetFontWeight(fontWeight string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(fontWeight)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_CENTER returns the HORIZONTAL_ALIGNMENT_CENTER property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#horizontal_alignment_center
func (s *ScrollBar) HORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(HORIZONTAL_ALIGNMENT_CENTER)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_CENTER sets the HORIZONTAL_ALIGNMENT_CENTER property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#horizontal_alignment_center
func (s *ScrollBar) SetHORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(HORIZONTAL_ALIGNMENT_CENTER)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_LEFT returns the HORIZONTAL_ALIGNMENT_LEFT property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#horizontal_alignment_left
func (s *ScrollBar) HORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(HORIZONTAL_ALIGNMENT_LEFT)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_LEFT sets the HORIZONTAL_ALIGNMENT_LEFT property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#horizontal_alignment_left
func (s *ScrollBar) SetHORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(HORIZONTAL_ALIGNMENT_LEFT)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_RIGHT returns the HORIZONTAL_ALIGNMENT_RIGHT property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#horizontal_alignment_right
func (s *ScrollBar) HORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_RIGHT sets the HORIZONTAL_ALIGNMENT_RIGHT property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#horizontal_alignment_right
func (s *ScrollBar) SetHORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Height returns the Height property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#height
func (s *ScrollBar) Height(height string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(height)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetHeight sets the Height property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#height
func (s *ScrollBar) SetHeight(height string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(height)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// HeightInPixels returns the HeightInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#heightinpixels
func (s *ScrollBar) HeightInPixels(heightInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(heightInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetHeightInPixels sets the HeightInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#heightinpixels
func (s *ScrollBar) SetHeightInPixels(heightInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(heightInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// HorizontalAlignment returns the HorizontalAlignment property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#horizontalalignment
func (s *ScrollBar) HorizontalAlignment(horizontalAlignment float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(horizontalAlignment)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetHorizontalAlignment sets the HorizontalAlignment property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#horizontalalignment
func (s *ScrollBar) SetHorizontalAlignment(horizontalAlignment float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(horizontalAlignment)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Host returns the Host property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#host
func (s *ScrollBar) Host(host *AdvancedDynamicTexture) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(host.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetHost sets the Host property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#host
func (s *ScrollBar) SetHost(host *AdvancedDynamicTexture) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(host.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// HoverCursor returns the HoverCursor property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#hovercursor
func (s *ScrollBar) HoverCursor(hoverCursor string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(hoverCursor)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetHoverCursor sets the HoverCursor property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#hovercursor
func (s *ScrollBar) SetHoverCursor(hoverCursor string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(hoverCursor)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// IsDirty returns the IsDirty property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isdirty
func (s *ScrollBar) IsDirty(isDirty bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isDirty)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetIsDirty sets the IsDirty property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isdirty
func (s *ScrollBar) SetIsDirty(isDirty bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isDirty)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// IsEnabled returns the IsEnabled property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isenabled
func (s *ScrollBar) IsEnabled(isEnabled bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isEnabled)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetIsEnabled sets the IsEnabled property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isenabled
func (s *ScrollBar) SetIsEnabled(isEnabled bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isEnabled)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// IsFocusInvisible returns the IsFocusInvisible property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isfocusinvisible
func (s *ScrollBar) IsFocusInvisible(isFocusInvisible bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isFocusInvisible)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetIsFocusInvisible sets the IsFocusInvisible property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isfocusinvisible
func (s *ScrollBar) SetIsFocusInvisible(isFocusInvisible bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isFocusInvisible)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// IsHighlighted returns the IsHighlighted property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#ishighlighted
func (s *ScrollBar) IsHighlighted(isHighlighted bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isHighlighted)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetIsHighlighted sets the IsHighlighted property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#ishighlighted
func (s *ScrollBar) SetIsHighlighted(isHighlighted bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isHighlighted)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// IsHitTestVisible returns the IsHitTestVisible property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#ishittestvisible
func (s *ScrollBar) IsHitTestVisible(isHitTestVisible bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isHitTestVisible)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetIsHitTestVisible sets the IsHitTestVisible property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#ishittestvisible
func (s *ScrollBar) SetIsHitTestVisible(isHitTestVisible bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isHitTestVisible)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// IsPointerBlocker returns the IsPointerBlocker property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#ispointerblocker
func (s *ScrollBar) IsPointerBlocker(isPointerBlocker bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isPointerBlocker)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetIsPointerBlocker sets the IsPointerBlocker property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#ispointerblocker
func (s *ScrollBar) SetIsPointerBlocker(isPointerBlocker bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isPointerBlocker)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// IsThumbClamped returns the IsThumbClamped property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isthumbclamped
func (s *ScrollBar) IsThumbClamped(isThumbClamped bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isThumbClamped)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetIsThumbClamped sets the IsThumbClamped property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isthumbclamped
func (s *ScrollBar) SetIsThumbClamped(isThumbClamped bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isThumbClamped)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// IsVertical returns the IsVertical property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isvertical
func (s *ScrollBar) IsVertical(isVertical bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isVertical)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetIsVertical sets the IsVertical property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isvertical
func (s *ScrollBar) SetIsVertical(isVertical bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isVertical)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// IsVisible returns the IsVisible property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isvisible
func (s *ScrollBar) IsVisible(isVisible bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isVisible)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetIsVisible sets the IsVisible property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#isvisible
func (s *ScrollBar) SetIsVisible(isVisible bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(isVisible)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Left returns the Left property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#left
func (s *ScrollBar) Left(left string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(left)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetLeft sets the Left property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#left
func (s *ScrollBar) SetLeft(left string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(left)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// LeftInPixels returns the LeftInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#leftinpixels
func (s *ScrollBar) LeftInPixels(leftInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(leftInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetLeftInPixels sets the LeftInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#leftinpixels
func (s *ScrollBar) SetLeftInPixels(leftInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(leftInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// LinkOffsetX returns the LinkOffsetX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkoffsetx
func (s *ScrollBar) LinkOffsetX(linkOffsetX string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkOffsetX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetLinkOffsetX sets the LinkOffsetX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkoffsetx
func (s *ScrollBar) SetLinkOffsetX(linkOffsetX string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkOffsetX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// LinkOffsetXInPixels returns the LinkOffsetXInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkoffsetxinpixels
func (s *ScrollBar) LinkOffsetXInPixels(linkOffsetXInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkOffsetXInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetLinkOffsetXInPixels sets the LinkOffsetXInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkoffsetxinpixels
func (s *ScrollBar) SetLinkOffsetXInPixels(linkOffsetXInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkOffsetXInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// LinkOffsetY returns the LinkOffsetY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkoffsety
func (s *ScrollBar) LinkOffsetY(linkOffsetY string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkOffsetY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetLinkOffsetY sets the LinkOffsetY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkoffsety
func (s *ScrollBar) SetLinkOffsetY(linkOffsetY string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkOffsetY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// LinkOffsetYInPixels returns the LinkOffsetYInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkoffsetyinpixels
func (s *ScrollBar) LinkOffsetYInPixels(linkOffsetYInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkOffsetYInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetLinkOffsetYInPixels sets the LinkOffsetYInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkoffsetyinpixels
func (s *ScrollBar) SetLinkOffsetYInPixels(linkOffsetYInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkOffsetYInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// LinkedMesh returns the LinkedMesh property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkedmesh
func (s *ScrollBar) LinkedMesh(linkedMesh *AbstractMesh) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkedMesh.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetLinkedMesh sets the LinkedMesh property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#linkedmesh
func (s *ScrollBar) SetLinkedMesh(linkedMesh *AbstractMesh) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(linkedMesh.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Maximum returns the Maximum property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#maximum
func (s *ScrollBar) Maximum(maximum float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(maximum)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetMaximum sets the Maximum property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#maximum
func (s *ScrollBar) SetMaximum(maximum float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(maximum)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Metadata returns the Metadata property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#metadata
func (s *ScrollBar) Metadata(metadata interface{}) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(metadata)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetMetadata sets the Metadata property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#metadata
func (s *ScrollBar) SetMetadata(metadata interface{}) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(metadata)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Minimum returns the Minimum property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#minimum
func (s *ScrollBar) Minimum(minimum float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(minimum)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetMinimum sets the Minimum property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#minimum
func (s *ScrollBar) SetMinimum(minimum float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(minimum)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#name
func (s *ScrollBar) Name(name string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(name)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#name
func (s *ScrollBar) SetName(name string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(name)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// NotRenderable returns the NotRenderable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#notrenderable
func (s *ScrollBar) NotRenderable(notRenderable bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(notRenderable)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetNotRenderable sets the NotRenderable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#notrenderable
func (s *ScrollBar) SetNotRenderable(notRenderable bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(notRenderable)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnAfterDrawObservable returns the OnAfterDrawObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onafterdrawobservable
func (s *ScrollBar) OnAfterDrawObservable(onAfterDrawObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onAfterDrawObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnAfterDrawObservable sets the OnAfterDrawObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onafterdrawobservable
func (s *ScrollBar) SetOnAfterDrawObservable(onAfterDrawObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onAfterDrawObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnBeforeDrawObservable returns the OnBeforeDrawObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onbeforedrawobservable
func (s *ScrollBar) OnBeforeDrawObservable(onBeforeDrawObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onBeforeDrawObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnBeforeDrawObservable sets the OnBeforeDrawObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onbeforedrawobservable
func (s *ScrollBar) SetOnBeforeDrawObservable(onBeforeDrawObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onBeforeDrawObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnDirtyObservable returns the OnDirtyObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#ondirtyobservable
func (s *ScrollBar) OnDirtyObservable(onDirtyObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onDirtyObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnDirtyObservable sets the OnDirtyObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#ondirtyobservable
func (s *ScrollBar) SetOnDirtyObservable(onDirtyObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onDirtyObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnPointerClickObservable returns the OnPointerClickObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointerclickobservable
func (s *ScrollBar) OnPointerClickObservable(onPointerClickObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerClickObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnPointerClickObservable sets the OnPointerClickObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointerclickobservable
func (s *ScrollBar) SetOnPointerClickObservable(onPointerClickObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerClickObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnPointerDownObservable returns the OnPointerDownObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointerdownobservable
func (s *ScrollBar) OnPointerDownObservable(onPointerDownObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerDownObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnPointerDownObservable sets the OnPointerDownObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointerdownobservable
func (s *ScrollBar) SetOnPointerDownObservable(onPointerDownObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerDownObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnPointerEnterObservable returns the OnPointerEnterObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointerenterobservable
func (s *ScrollBar) OnPointerEnterObservable(onPointerEnterObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerEnterObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnPointerEnterObservable sets the OnPointerEnterObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointerenterobservable
func (s *ScrollBar) SetOnPointerEnterObservable(onPointerEnterObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerEnterObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnPointerMoveObservable returns the OnPointerMoveObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointermoveobservable
func (s *ScrollBar) OnPointerMoveObservable(onPointerMoveObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerMoveObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnPointerMoveObservable sets the OnPointerMoveObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointermoveobservable
func (s *ScrollBar) SetOnPointerMoveObservable(onPointerMoveObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerMoveObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnPointerOutObservable returns the OnPointerOutObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointeroutobservable
func (s *ScrollBar) OnPointerOutObservable(onPointerOutObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerOutObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnPointerOutObservable sets the OnPointerOutObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointeroutobservable
func (s *ScrollBar) SetOnPointerOutObservable(onPointerOutObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerOutObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnPointerUpObservable returns the OnPointerUpObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointerupobservable
func (s *ScrollBar) OnPointerUpObservable(onPointerUpObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerUpObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnPointerUpObservable sets the OnPointerUpObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onpointerupobservable
func (s *ScrollBar) SetOnPointerUpObservable(onPointerUpObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onPointerUpObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// OnValueChangedObservable returns the OnValueChangedObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onvaluechangedobservable
func (s *ScrollBar) OnValueChangedObservable(onValueChangedObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onValueChangedObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetOnValueChangedObservable sets the OnValueChangedObservable property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#onvaluechangedobservable
func (s *ScrollBar) SetOnValueChangedObservable(onValueChangedObservable *Observable) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(onValueChangedObservable.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// PaddingBottom returns the PaddingBottom property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingbottom
func (s *ScrollBar) PaddingBottom(paddingBottom string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingBottom)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetPaddingBottom sets the PaddingBottom property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingbottom
func (s *ScrollBar) SetPaddingBottom(paddingBottom string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingBottom)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// PaddingBottomInPixels returns the PaddingBottomInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingbottominpixels
func (s *ScrollBar) PaddingBottomInPixels(paddingBottomInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingBottomInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetPaddingBottomInPixels sets the PaddingBottomInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingbottominpixels
func (s *ScrollBar) SetPaddingBottomInPixels(paddingBottomInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingBottomInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// PaddingLeft returns the PaddingLeft property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingleft
func (s *ScrollBar) PaddingLeft(paddingLeft string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingLeft)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetPaddingLeft sets the PaddingLeft property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingleft
func (s *ScrollBar) SetPaddingLeft(paddingLeft string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingLeft)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// PaddingLeftInPixels returns the PaddingLeftInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingleftinpixels
func (s *ScrollBar) PaddingLeftInPixels(paddingLeftInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingLeftInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetPaddingLeftInPixels sets the PaddingLeftInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingleftinpixels
func (s *ScrollBar) SetPaddingLeftInPixels(paddingLeftInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingLeftInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// PaddingRight returns the PaddingRight property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingright
func (s *ScrollBar) PaddingRight(paddingRight string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingRight)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetPaddingRight sets the PaddingRight property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingright
func (s *ScrollBar) SetPaddingRight(paddingRight string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingRight)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// PaddingRightInPixels returns the PaddingRightInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingrightinpixels
func (s *ScrollBar) PaddingRightInPixels(paddingRightInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingRightInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetPaddingRightInPixels sets the PaddingRightInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingrightinpixels
func (s *ScrollBar) SetPaddingRightInPixels(paddingRightInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingRightInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// PaddingTop returns the PaddingTop property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingtop
func (s *ScrollBar) PaddingTop(paddingTop string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingTop)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetPaddingTop sets the PaddingTop property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingtop
func (s *ScrollBar) SetPaddingTop(paddingTop string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingTop)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// PaddingTopInPixels returns the PaddingTopInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingtopinpixels
func (s *ScrollBar) PaddingTopInPixels(paddingTopInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingTopInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetPaddingTopInPixels sets the PaddingTopInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#paddingtopinpixels
func (s *ScrollBar) SetPaddingTopInPixels(paddingTopInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(paddingTopInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Parent returns the Parent property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#parent
func (s *ScrollBar) Parent(parent *Container) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(parent.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetParent sets the Parent property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#parent
func (s *ScrollBar) SetParent(parent *Container) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(parent.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Rotation returns the Rotation property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#rotation
func (s *ScrollBar) Rotation(rotation float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(rotation)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetRotation sets the Rotation property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#rotation
func (s *ScrollBar) SetRotation(rotation float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(rotation)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ScaleX returns the ScaleX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#scalex
func (s *ScrollBar) ScaleX(scaleX float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(scaleX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetScaleX sets the ScaleX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#scalex
func (s *ScrollBar) SetScaleX(scaleX float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(scaleX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ScaleY returns the ScaleY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#scaley
func (s *ScrollBar) ScaleY(scaleY float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(scaleY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetScaleY sets the ScaleY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#scaley
func (s *ScrollBar) SetScaleY(scaleY float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(scaleY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ShadowBlur returns the ShadowBlur property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#shadowblur
func (s *ScrollBar) ShadowBlur(shadowBlur float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(shadowBlur)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetShadowBlur sets the ShadowBlur property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#shadowblur
func (s *ScrollBar) SetShadowBlur(shadowBlur float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(shadowBlur)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ShadowColor returns the ShadowColor property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#shadowcolor
func (s *ScrollBar) ShadowColor(shadowColor string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(shadowColor)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetShadowColor sets the ShadowColor property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#shadowcolor
func (s *ScrollBar) SetShadowColor(shadowColor string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(shadowColor)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ShadowOffsetX returns the ShadowOffsetX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#shadowoffsetx
func (s *ScrollBar) ShadowOffsetX(shadowOffsetX float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(shadowOffsetX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetShadowOffsetX sets the ShadowOffsetX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#shadowoffsetx
func (s *ScrollBar) SetShadowOffsetX(shadowOffsetX float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(shadowOffsetX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ShadowOffsetY returns the ShadowOffsetY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#shadowoffsety
func (s *ScrollBar) ShadowOffsetY(shadowOffsetY float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(shadowOffsetY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetShadowOffsetY sets the ShadowOffsetY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#shadowoffsety
func (s *ScrollBar) SetShadowOffsetY(shadowOffsetY float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(shadowOffsetY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Step returns the Step property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#step
func (s *ScrollBar) Step(step float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(step)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetStep sets the Step property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#step
func (s *ScrollBar) SetStep(step float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(step)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Style returns the Style property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#style
func (s *ScrollBar) Style(style *Style) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(style.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetStyle sets the Style property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#style
func (s *ScrollBar) SetStyle(style *Style) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(style.JSObject())
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ThumbWidth returns the ThumbWidth property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#thumbwidth
func (s *ScrollBar) ThumbWidth(thumbWidth string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(thumbWidth)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetThumbWidth sets the ThumbWidth property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#thumbwidth
func (s *ScrollBar) SetThumbWidth(thumbWidth string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(thumbWidth)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ThumbWidthInPixels returns the ThumbWidthInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#thumbwidthinpixels
func (s *ScrollBar) ThumbWidthInPixels(thumbWidthInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(thumbWidthInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetThumbWidthInPixels sets the ThumbWidthInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#thumbwidthinpixels
func (s *ScrollBar) SetThumbWidthInPixels(thumbWidthInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(thumbWidthInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Top returns the Top property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#top
func (s *ScrollBar) Top(top string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(top)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetTop sets the Top property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#top
func (s *ScrollBar) SetTop(top string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(top)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// TopInPixels returns the TopInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#topinpixels
func (s *ScrollBar) TopInPixels(topInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(topInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetTopInPixels sets the TopInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#topinpixels
func (s *ScrollBar) SetTopInPixels(topInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(topInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// TransformCenterX returns the TransformCenterX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#transformcenterx
func (s *ScrollBar) TransformCenterX(transformCenterX float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(transformCenterX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetTransformCenterX sets the TransformCenterX property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#transformcenterx
func (s *ScrollBar) SetTransformCenterX(transformCenterX float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(transformCenterX)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// TransformCenterY returns the TransformCenterY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#transformcentery
func (s *ScrollBar) TransformCenterY(transformCenterY float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(transformCenterY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetTransformCenterY sets the TransformCenterY property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#transformcentery
func (s *ScrollBar) SetTransformCenterY(transformCenterY float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(transformCenterY)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// TypeName returns the TypeName property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#typename
func (s *ScrollBar) TypeName(typeName string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(typeName)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetTypeName sets the TypeName property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#typename
func (s *ScrollBar) SetTypeName(typeName string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(typeName)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// UniqueId returns the UniqueId property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#uniqueid
func (s *ScrollBar) UniqueId(uniqueId float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(uniqueId)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetUniqueId sets the UniqueId property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#uniqueid
func (s *ScrollBar) SetUniqueId(uniqueId float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(uniqueId)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// UseBitmapCache returns the UseBitmapCache property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#usebitmapcache
func (s *ScrollBar) UseBitmapCache(useBitmapCache bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(useBitmapCache)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetUseBitmapCache sets the UseBitmapCache property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#usebitmapcache
func (s *ScrollBar) SetUseBitmapCache(useBitmapCache bool) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(useBitmapCache)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_BOTTOM returns the VERTICAL_ALIGNMENT_BOTTOM property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#vertical_alignment_bottom
func (s *ScrollBar) VERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(VERTICAL_ALIGNMENT_BOTTOM)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_BOTTOM sets the VERTICAL_ALIGNMENT_BOTTOM property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#vertical_alignment_bottom
func (s *ScrollBar) SetVERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(VERTICAL_ALIGNMENT_BOTTOM)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_CENTER returns the VERTICAL_ALIGNMENT_CENTER property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#vertical_alignment_center
func (s *ScrollBar) VERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(VERTICAL_ALIGNMENT_CENTER)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_CENTER sets the VERTICAL_ALIGNMENT_CENTER property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#vertical_alignment_center
func (s *ScrollBar) SetVERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(VERTICAL_ALIGNMENT_CENTER)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_TOP returns the VERTICAL_ALIGNMENT_TOP property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#vertical_alignment_top
func (s *ScrollBar) VERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(VERTICAL_ALIGNMENT_TOP)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_TOP sets the VERTICAL_ALIGNMENT_TOP property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#vertical_alignment_top
func (s *ScrollBar) SetVERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(VERTICAL_ALIGNMENT_TOP)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Value returns the Value property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#value
func (s *ScrollBar) Value(value float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(value)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetValue sets the Value property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#value
func (s *ScrollBar) SetValue(value float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(value)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// VerticalAlignment returns the VerticalAlignment property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#verticalalignment
func (s *ScrollBar) VerticalAlignment(verticalAlignment float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(verticalAlignment)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetVerticalAlignment sets the VerticalAlignment property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#verticalalignment
func (s *ScrollBar) SetVerticalAlignment(verticalAlignment float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(verticalAlignment)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// Width returns the Width property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#width
func (s *ScrollBar) Width(width string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(width)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetWidth sets the Width property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#width
func (s *ScrollBar) SetWidth(width string) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(width)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// WidthInPixels returns the WidthInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#widthinpixels
func (s *ScrollBar) WidthInPixels(widthInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(widthInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetWidthInPixels sets the WidthInPixels property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#widthinpixels
func (s *ScrollBar) SetWidthInPixels(widthInPixels float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(widthInPixels)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// ZIndex returns the ZIndex property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#zindex
func (s *ScrollBar) ZIndex(zIndex float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(zIndex)
	return ScrollBarFromJSObject(p, ba.ctx)
}

// SetZIndex sets the ZIndex property of class ScrollBar.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollbar#zindex
func (s *ScrollBar) SetZIndex(zIndex float64) *ScrollBar {
	p := ba.ctx.Get("ScrollBar").New(zIndex)
	return ScrollBarFromJSObject(p, ba.ctx)
}

*/
