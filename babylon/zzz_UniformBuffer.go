// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// UniformBuffer represents a babylon.js UniformBuffer.
// Uniform buffer objects.
//
// For more information, please refer to :
// &lt;a href=&#34;https://www.khronos.org/opengl/wiki/Uniform_Buffer_Object&#34;&gt;https://www.khronos.org/opengl/wiki/Uniform_Buffer_Object&lt;/a&gt;
type UniformBuffer struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (u *UniformBuffer) JSObject() js.Value { return u.p }

// UniformBuffer returns a UniformBuffer JavaScript class.
func (ba *Babylon) UniformBuffer() *UniformBuffer {
	p := ba.ctx.Get("UniformBuffer")
	return UniformBufferFromJSObject(p)
}

// UniformBufferFromJSObject returns a wrapped UniformBuffer JavaScript class.
func UniformBufferFromJSObject(p js.Value) *UniformBuffer {
	return &UniformBuffer{p: p}
}

// NewUniformBufferOpts contains optional parameters for NewUniformBuffer.
type NewUniformBufferOpts struct {
	Data *JSFloat64

	Dynamic *JSBool
}

// NewUniformBuffer returns a new UniformBuffer object.
//
// https://doc.babylonjs.com/api/classes/babylon.uniformbuffer
func (ba *Babylon) NewUniformBuffer(engine *Engine, opts *NewUniformBufferOpts) *UniformBuffer {
	if opts == nil {
		opts = &NewUniformBufferOpts{}
	}

	p := ba.ctx.Get("UniformBuffer").New(engine.JSObject(), opts.Data, opts.Dynamic)
	return UniformBufferFromJSObject(p)
}

// TODO: methods
