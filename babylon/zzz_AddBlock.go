// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// AddBlock represents a babylon.js AddBlock.
// Block used to add 2 vectors
type AddBlock struct {
	*NodeMaterialBlock
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (a *AddBlock) JSObject() js.Value { return a.p }

// AddBlock returns a AddBlock JavaScript class.
func (ba *Babylon) AddBlock() *AddBlock {
	p := ba.ctx.Get("AddBlock")
	return AddBlockFromJSObject(p, ba.ctx)
}

// AddBlockFromJSObject returns a wrapped AddBlock JavaScript class.
func AddBlockFromJSObject(p js.Value, ctx js.Value) *AddBlock {
	return &AddBlock{NodeMaterialBlock: NodeMaterialBlockFromJSObject(p, ctx), ctx: ctx}
}

// AddBlockArrayToJSArray returns a JavaScript Array for the wrapped array.
func AddBlockArrayToJSArray(array []*AddBlock) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewAddBlock returns a new AddBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.addblock#constructor
func (ba *Babylon) NewAddBlock(name string) *AddBlock {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	p := ba.ctx.Get("AddBlock").New(args...)
	return AddBlockFromJSObject(p, ba.ctx)
}

// GetClassName calls the GetClassName method on the AddBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.addblock#getclassname
func (a *AddBlock) GetClassName() string {

	retVal := a.p.Call("getClassName")
	return retVal.String()
}

// Left returns the Left property of class AddBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.addblock#left
func (a *AddBlock) Left() *NodeMaterialConnectionPoint {
	retVal := a.p.Get("left")
	return NodeMaterialConnectionPointFromJSObject(retVal, a.ctx)
}

// SetLeft sets the Left property of class AddBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.addblock#left
func (a *AddBlock) SetLeft(left *NodeMaterialConnectionPoint) *AddBlock {
	a.p.Set("left", left.JSObject())
	return a
}

// Output returns the Output property of class AddBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.addblock#output
func (a *AddBlock) Output() *NodeMaterialConnectionPoint {
	retVal := a.p.Get("output")
	return NodeMaterialConnectionPointFromJSObject(retVal, a.ctx)
}

// SetOutput sets the Output property of class AddBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.addblock#output
func (a *AddBlock) SetOutput(output *NodeMaterialConnectionPoint) *AddBlock {
	a.p.Set("output", output.JSObject())
	return a
}

// Right returns the Right property of class AddBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.addblock#right
func (a *AddBlock) Right() *NodeMaterialConnectionPoint {
	retVal := a.p.Get("right")
	return NodeMaterialConnectionPointFromJSObject(retVal, a.ctx)
}

// SetRight sets the Right property of class AddBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.addblock#right
func (a *AddBlock) SetRight(right *NodeMaterialConnectionPoint) *AddBlock {
	a.p.Set("right", right.JSObject())
	return a
}
