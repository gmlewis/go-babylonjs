// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Octree represents a babylon.js Octree.
// Octrees are a really powerful data structure that can quickly select entities based on space coordinates.
//
// See: https://doc.babylonjs.com/how_to/optimizing_your_scene_with_octrees
type Octree struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (o *Octree) JSObject() js.Value { return o.p }

// Octree returns a Octree JavaScript class.
func (ba *Babylon) Octree() *Octree {
	p := ba.ctx.Get("Octree")
	return OctreeFromJSObject(p)
}

// OctreeFromJSObject returns a wrapped Octree JavaScript class.
func OctreeFromJSObject(p js.Value) *Octree {
	return &Octree{p: p}
}

// NewOctreeOpts contains optional parameters for NewOctree.
type NewOctreeOpts struct {
	MaxBlockCapacity *JSFloat64

	MaxDepth *JSFloat64
}

// NewOctree returns a new Octree object.
//
// https://doc.babylonjs.com/api/classes/babylon.octree
func (ba *Babylon) NewOctree(creationFunc func(), opts *NewOctreeOpts) *Octree {
	if opts == nil {
		opts = &NewOctreeOpts{}
	}

	p := ba.ctx.Get("Octree").New(creationFunc, opts.MaxBlockCapacity, opts.MaxDepth)
	return OctreeFromJSObject(p)
}

// TODO: methods
