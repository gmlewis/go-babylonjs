// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// LightGizmo represents a babylon.js LightGizmo.
// Gizmo that enables viewing a light
type LightGizmo struct{ *Gizmo }

// JSObject returns the underlying js.Value.
func (l *LightGizmo) JSObject() js.Value { return l.p }

// LightGizmo returns a LightGizmo JavaScript class.
func (ba *Babylon) LightGizmo() *LightGizmo {
	p := ba.ctx.Get("LightGizmo")
	return LightGizmoFromJSObject(p)
}

// LightGizmoFromJSObject returns a wrapped LightGizmo JavaScript class.
func LightGizmoFromJSObject(p js.Value) *LightGizmo {
	return &LightGizmo{GizmoFromJSObject(p)}
}

// NewLightGizmoOpts contains optional parameters for NewLightGizmo.
type NewLightGizmoOpts struct {
	GizmoLayer *UtilityLayerRenderer
}

// NewLightGizmo returns a new LightGizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.lightgizmo
func (ba *Babylon) NewLightGizmo(opts *NewLightGizmoOpts) *LightGizmo {
	if opts == nil {
		opts = &NewLightGizmoOpts{}
	}

	p := ba.ctx.Get("LightGizmo").New(opts.GizmoLayer.JSObject())
	return LightGizmoFromJSObject(p)
}

// TODO: methods
