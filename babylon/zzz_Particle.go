// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Particle represents a babylon.js Particle.
// A particle represents one of the element emitted by a particle system.
// This is mainly define by its coordinates, direction, velocity and age.
type Particle struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (p *Particle) JSObject() js.Value { return p.p }

// Particle returns a Particle JavaScript class.
func (ba *Babylon) Particle() *Particle {
	p := ba.ctx.Get("Particle")
	return ParticleFromJSObject(p)
}

// ParticleFromJSObject returns a wrapped Particle JavaScript class.
func ParticleFromJSObject(p js.Value) *Particle {
	return &Particle{p: p}
}

// NewParticle returns a new Particle object.
//
// https://doc.babylonjs.com/api/classes/babylon.particle
func (ba *Babylon) NewParticle(particleSystem *ParticleSystem) *Particle {
	p := ba.ctx.Get("Particle").New(particleSystem.JSObject())
	return ParticleFromJSObject(p)
}

// TODO: methods
