// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// MergeMeshesOptimization represents a babylon.js MergeMeshesOptimization.
// Defines an optimization used to merge meshes with compatible materials
//
// See: http://doc.babylonjs.com/how_to/how_to_use_sceneoptimizer
type MergeMeshesOptimization struct{ *SceneOptimization }

// JSObject returns the underlying js.Value.
func (m *MergeMeshesOptimization) JSObject() js.Value { return m.p }

// MergeMeshesOptimization returns a MergeMeshesOptimization JavaScript class.
func (b *Babylon) MergeMeshesOptimization() *MergeMeshesOptimization {
	p := b.ctx.Get("MergeMeshesOptimization")
	return MergeMeshesOptimizationFromJSObject(p)
}

// MergeMeshesOptimizationFromJSObject returns a wrapped MergeMeshesOptimization JavaScript class.
func MergeMeshesOptimizationFromJSObject(p js.Value) *MergeMeshesOptimization {
	return &MergeMeshesOptimization{SceneOptimizationFromJSObject(p)}
}

// NewMergeMeshesOptimizationOpts contains optional parameters for NewMergeMeshesOptimization.
type NewMergeMeshesOptimizationOpts struct {
	Priority *float64
}

// NewMergeMeshesOptimization returns a new MergeMeshesOptimization object.
//
// https://doc.babylonjs.com/api/classes/babylon.mergemeshesoptimization
func (b *Babylon) NewMergeMeshesOptimization(opts *NewMergeMeshesOptimizationOpts) *MergeMeshesOptimization {
	if opts == nil {
		opts = &NewMergeMeshesOptimizationOpts{}
	}

	p := b.ctx.Get("MergeMeshesOptimization").New(opts.Priority)
	return MergeMeshesOptimizationFromJSObject(p)
}

// TODO: methods
