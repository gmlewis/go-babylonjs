// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// AnaglyphPostProcess represents a babylon.js AnaglyphPostProcess.
// Postprocess used to generate anaglyphic rendering
type AnaglyphPostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (a *AnaglyphPostProcess) JSObject() js.Value { return a.p }

// AnaglyphPostProcess returns a AnaglyphPostProcess JavaScript class.
func (ba *Babylon) AnaglyphPostProcess() *AnaglyphPostProcess {
	p := ba.ctx.Get("AnaglyphPostProcess")
	return AnaglyphPostProcessFromJSObject(p)
}

// AnaglyphPostProcessFromJSObject returns a wrapped AnaglyphPostProcess JavaScript class.
func AnaglyphPostProcessFromJSObject(p js.Value) *AnaglyphPostProcess {
	return &AnaglyphPostProcess{PostProcessFromJSObject(p)}
}

// NewAnaglyphPostProcessOpts contains optional parameters for NewAnaglyphPostProcess.
type NewAnaglyphPostProcessOpts struct {
	SamplingMode *JSFloat64

	Engine *Engine

	Reusable *JSBool
}

// NewAnaglyphPostProcess returns a new AnaglyphPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglyphpostprocess
func (ba *Babylon) NewAnaglyphPostProcess(name string, options float64, rigCameras *Camera, opts *NewAnaglyphPostProcessOpts) *AnaglyphPostProcess {
	if opts == nil {
		opts = &NewAnaglyphPostProcessOpts{}
	}

	p := ba.ctx.Get("AnaglyphPostProcess").New(name, options, rigCameras.JSObject(), opts.SamplingMode, opts.Engine.JSObject(), opts.Reusable)
	return AnaglyphPostProcessFromJSObject(p)
}

// TODO: methods
