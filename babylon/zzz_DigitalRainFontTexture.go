// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// DigitalRainFontTexture represents a babylon.js DigitalRainFontTexture.
// DigitalRainFontTexture is the helper class used to easily create your digital rain font texture.

//
// It basically takes care rendering the font front the given font size to a texture.
// This is used later on in the postprocess.
type DigitalRainFontTexture struct{ *BaseTexture }

// JSObject returns the underlying js.Value.
func (d *DigitalRainFontTexture) JSObject() js.Value { return d.p }

// DigitalRainFontTexture returns a DigitalRainFontTexture JavaScript class.
func (b *Babylon) DigitalRainFontTexture() *DigitalRainFontTexture {
	p := b.ctx.Get("DigitalRainFontTexture")
	return DigitalRainFontTextureFromJSObject(p)
}

// DigitalRainFontTextureFromJSObject returns a wrapped DigitalRainFontTexture JavaScript class.
func DigitalRainFontTextureFromJSObject(p js.Value) *DigitalRainFontTexture {
	return &DigitalRainFontTexture{BaseTextureFromJSObject(p)}
}

// NewDigitalRainFontTexture returns a new DigitalRainFontTexture object.
//
// https://doc.babylonjs.com/api/classes/babylon.digitalrainfonttexture
func (b *Babylon) NewDigitalRainFontTexture(todo parameters) *DigitalRainFontTexture {
	p := b.ctx.Get("DigitalRainFontTexture").New(todo)
	return DigitalRainFontTextureFromJSObject(p)
}

// TODO: methods
