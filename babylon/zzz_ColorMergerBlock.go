// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ColorMergerBlock represents a babylon.js ColorMergerBlock.
// Block used to create a Color3/4 out of individual inputs (one for each component)
type ColorMergerBlock struct{ *NodeMaterialBlock }

// JSObject returns the underlying js.Value.
func (c *ColorMergerBlock) JSObject() js.Value { return c.p }

// ColorMergerBlock returns a ColorMergerBlock JavaScript class.
func (ba *Babylon) ColorMergerBlock() *ColorMergerBlock {
	p := ba.ctx.Get("ColorMergerBlock")
	return ColorMergerBlockFromJSObject(p)
}

// ColorMergerBlockFromJSObject returns a wrapped ColorMergerBlock JavaScript class.
func ColorMergerBlockFromJSObject(p js.Value) *ColorMergerBlock {
	return &ColorMergerBlock{NodeMaterialBlockFromJSObject(p)}
}

// NewColorMergerBlock returns a new ColorMergerBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.colormergerblock
func (ba *Babylon) NewColorMergerBlock(name string) *ColorMergerBlock {
	p := ba.ctx.Get("ColorMergerBlock").New(name)
	return ColorMergerBlockFromJSObject(p)
}

// TODO: methods
