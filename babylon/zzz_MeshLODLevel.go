// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// MeshLODLevel represents a babylon.js MeshLODLevel.
// Class used to represent a specific level of detail of a mesh
//
// See: http://doc.babylonjs.com/how_to/how_to_use_lod
type MeshLODLevel struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (m *MeshLODLevel) JSObject() js.Value { return m.p }

// MeshLODLevel returns a MeshLODLevel JavaScript class.
func (b *Babylon) MeshLODLevel() *MeshLODLevel {
	p := b.ctx.Get("MeshLODLevel")
	return MeshLODLevelFromJSObject(p)
}

// MeshLODLevelFromJSObject returns a wrapped MeshLODLevel JavaScript class.
func MeshLODLevelFromJSObject(p js.Value) *MeshLODLevel {
	return &MeshLODLevel{p: p}
}

// NewMeshLODLevel returns a new MeshLODLevel object.
//
// https://doc.babylonjs.com/api/classes/babylon.meshlodlevel
func (b *Babylon) NewMeshLODLevel(distance float64, mesh *Mesh) *MeshLODLevel {
	p := b.ctx.Get("MeshLODLevel").New(distance, mesh.JSObject())
	return MeshLODLevelFromJSObject(p)
}

// TODO: methods
