// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Sound represents a babylon.js Sound.
// Defines a sound that can be played in the application.
// The sound can either be an ambient track or a simple sound played in reaction to a user action.

//
// See: http://doc.babylonjs.com/how_to/playing_sounds_and_music
type Sound struct{}

// JSObject returns the underlying js.Value.
func (s *Sound) JSObject() js.Value { return s.p }

// Sound returns a Sound JavaScript class.
func (b *Babylon) Sound() *Sound {
	p := b.ctx.Get("Sound")
	return SoundFromJSObject(p)
}

// SoundFromJSObject returns a wrapped Sound JavaScript class.
func SoundFromJSObject(p js.Value) *Sound {
	return &Sound{p: p}
}

// NewSound returns a new Sound object.
//
// https://doc.babylonjs.com/api/classes/babylon.sound
func (b *Babylon) NewSound(todo parameters) *Sound {
	p := b.ctx.Get("Sound").New(todo)
	return SoundFromJSObject(p)
}

// TODO: methods
