// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// FadeInOutBehavior represents a babylon.js FadeInOutBehavior.
// A behavior that when attached to a mesh will allow the mesh to fade in and out
type FadeInOutBehavior struct{}

// JSObject returns the underlying js.Value.
func (f *FadeInOutBehavior) JSObject() js.Value { return f.p }

// FadeInOutBehavior returns a FadeInOutBehavior JavaScript class.
func (b *Babylon) FadeInOutBehavior() *FadeInOutBehavior {
	p := b.ctx.Get("FadeInOutBehavior")
	return FadeInOutBehaviorFromJSObject(p)
}

// FadeInOutBehaviorFromJSObject returns a wrapped FadeInOutBehavior JavaScript class.
func FadeInOutBehaviorFromJSObject(p js.Value) *FadeInOutBehavior {
	return &FadeInOutBehavior{p: p}
}

// NewFadeInOutBehavior returns a new FadeInOutBehavior object.
//
// https://doc.babylonjs.com/api/classes/babylon.fadeinoutbehavior
func (b *Babylon) NewFadeInOutBehavior(todo parameters) *FadeInOutBehavior {
	p := b.ctx.Get("FadeInOutBehavior").New(todo)
	return FadeInOutBehaviorFromJSObject(p)
}

// TODO: methods
