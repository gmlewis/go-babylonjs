// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PointerInfo represents a babylon.js PointerInfo.
// This type contains all the data related to a pointer event in Babylon.js.
// The event member is an instance of PointerEvent for all types except PointerWheel and is of type MouseWheelEvent when type equals PointerWheel. The different event types can be found in the PointerEventTypes class.
type PointerInfo struct {
	*PointerInfoBase
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (p *PointerInfo) JSObject() js.Value { return p.p }

// PointerInfo returns a PointerInfo JavaScript class.
func (ba *Babylon) PointerInfo() *PointerInfo {
	p := ba.ctx.Get("PointerInfo")
	return PointerInfoFromJSObject(p, ba.ctx)
}

// PointerInfoFromJSObject returns a wrapped PointerInfo JavaScript class.
func PointerInfoFromJSObject(p js.Value, ctx js.Value) *PointerInfo {
	return &PointerInfo{PointerInfoBase: PointerInfoBaseFromJSObject(p, ctx), ctx: ctx}
}

// NewPointerInfo returns a new PointerInfo object.
//
// https://doc.babylonjs.com/api/classes/babylon.pointerinfo
func (ba *Babylon) NewPointerInfo(jsType float64, event js.Value, pickInfo *PickingInfo) *PointerInfo {

	args := make([]interface{}, 0, 3+0)

	args = append(args, jsType)
	args = append(args, event)
	args = append(args, pickInfo.JSObject())

	p := ba.ctx.Get("PointerInfo").New(args...)
	return PointerInfoFromJSObject(p, ba.ctx)
}

/*

// Event returns the Event property of class PointerInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.pointerinfo#event
func (p *PointerInfo) Event(event js.Value) *PointerInfo {
	p := ba.ctx.Get("PointerInfo").New(event)
	return PointerInfoFromJSObject(p, ba.ctx)
}

// SetEvent sets the Event property of class PointerInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.pointerinfo#event
func (p *PointerInfo) SetEvent(event js.Value) *PointerInfo {
	p := ba.ctx.Get("PointerInfo").New(event)
	return PointerInfoFromJSObject(p, ba.ctx)
}

// PickInfo returns the PickInfo property of class PointerInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.pointerinfo#pickinfo
func (p *PointerInfo) PickInfo(pickInfo *PickingInfo) *PointerInfo {
	p := ba.ctx.Get("PointerInfo").New(pickInfo.JSObject())
	return PointerInfoFromJSObject(p, ba.ctx)
}

// SetPickInfo sets the PickInfo property of class PointerInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.pointerinfo#pickinfo
func (p *PointerInfo) SetPickInfo(pickInfo *PickingInfo) *PointerInfo {
	p := ba.ctx.Get("PointerInfo").New(pickInfo.JSObject())
	return PointerInfoFromJSObject(p, ba.ctx)
}

// Type returns the Type property of class PointerInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.pointerinfo#type
func (p *PointerInfo) Type(jsType float64) *PointerInfo {
	p := ba.ctx.Get("PointerInfo").New(jsType)
	return PointerInfoFromJSObject(p, ba.ctx)
}

// SetType sets the Type property of class PointerInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.pointerinfo#type
func (p *PointerInfo) SetType(jsType float64) *PointerInfo {
	p := ba.ctx.Get("PointerInfo").New(jsType)
	return PointerInfoFromJSObject(p, ba.ctx)
}

*/
