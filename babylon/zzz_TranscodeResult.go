// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// TranscodeResult represents a babylon.js TranscodeResult.
// Result of transcoding a basis file
type TranscodeResult struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (t *TranscodeResult) JSObject() js.Value { return t.p }

// TranscodeResult returns a TranscodeResult JavaScript class.
func (ba *Babylon) TranscodeResult() *TranscodeResult {
	p := ba.ctx.Get("TranscodeResult")
	return TranscodeResultFromJSObject(p, ba.ctx)
}

// TranscodeResultFromJSObject returns a wrapped TranscodeResult JavaScript class.
func TranscodeResultFromJSObject(p js.Value, ctx js.Value) *TranscodeResult {
	return &TranscodeResult{p: p, ctx: ctx}
}

// TranscodeResultArrayToJSArray returns a JavaScript Array for the wrapped array.
func TranscodeResultArrayToJSArray(array []*TranscodeResult) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// FileInfo returns the FileInfo property of class TranscodeResult.
//
// https://doc.babylonjs.com/api/classes/babylon.transcoderesult#fileinfo
func (t *TranscodeResult) FileInfo(fileInfo *BasisFileInfo) *TranscodeResult {
	p := ba.ctx.Get("TranscodeResult").New(fileInfo.JSObject())
	return TranscodeResultFromJSObject(p, ba.ctx)
}

// SetFileInfo sets the FileInfo property of class TranscodeResult.
//
// https://doc.babylonjs.com/api/classes/babylon.transcoderesult#fileinfo
func (t *TranscodeResult) SetFileInfo(fileInfo *BasisFileInfo) *TranscodeResult {
	p := ba.ctx.Get("TranscodeResult").New(fileInfo.JSObject())
	return TranscodeResultFromJSObject(p, ba.ctx)
}

// Format returns the Format property of class TranscodeResult.
//
// https://doc.babylonjs.com/api/classes/babylon.transcoderesult#format
func (t *TranscodeResult) Format(format float64) *TranscodeResult {
	p := ba.ctx.Get("TranscodeResult").New(format)
	return TranscodeResultFromJSObject(p, ba.ctx)
}

// SetFormat sets the Format property of class TranscodeResult.
//
// https://doc.babylonjs.com/api/classes/babylon.transcoderesult#format
func (t *TranscodeResult) SetFormat(format float64) *TranscodeResult {
	p := ba.ctx.Get("TranscodeResult").New(format)
	return TranscodeResultFromJSObject(p, ba.ctx)
}

*/
