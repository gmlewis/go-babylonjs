// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SceneOptimizerOptions represents a babylon.js SceneOptimizerOptions.
// Defines a list of options used by SceneOptimizer
//
// See: http://doc.babylonjs.com/how_to/how_to_use_sceneoptimizer
type SceneOptimizerOptions struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (s *SceneOptimizerOptions) JSObject() js.Value { return s.p }

// SceneOptimizerOptions returns a SceneOptimizerOptions JavaScript class.
func (b *Babylon) SceneOptimizerOptions() *SceneOptimizerOptions {
	p := b.ctx.Get("SceneOptimizerOptions")
	return SceneOptimizerOptionsFromJSObject(p)
}

// SceneOptimizerOptionsFromJSObject returns a wrapped SceneOptimizerOptions JavaScript class.
func SceneOptimizerOptionsFromJSObject(p js.Value) *SceneOptimizerOptions {
	return &SceneOptimizerOptions{p: p}
}

// NewSceneOptimizerOptionsOpts contains optional parameters for NewSceneOptimizerOptions.
type NewSceneOptimizerOptionsOpts struct {
	TargetFrameRate *float64

	TrackerDuration *float64
}

// NewSceneOptimizerOptions returns a new SceneOptimizerOptions object.
//
// https://doc.babylonjs.com/api/classes/babylon.sceneoptimizeroptions
func (b *Babylon) NewSceneOptimizerOptions(opts *NewSceneOptimizerOptionsOpts) *SceneOptimizerOptions {
	if opts == nil {
		opts = &NewSceneOptimizerOptionsOpts{}
	}

	p := b.ctx.Get("SceneOptimizerOptions").New(opts.TargetFrameRate, opts.TrackerDuration)
	return SceneOptimizerOptionsFromJSObject(p)
}

// TODO: methods
