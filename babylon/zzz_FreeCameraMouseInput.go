// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// FreeCameraMouseInput represents a babylon.js FreeCameraMouseInput.
// Manage the mouse inputs to control the movement of a free camera.
//
// See: http://doc.babylonjs.com/how_to/customizing_camera_inputs
type FreeCameraMouseInput struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (f *FreeCameraMouseInput) JSObject() js.Value { return f.p }

// FreeCameraMouseInput returns a FreeCameraMouseInput JavaScript class.
func (ba *Babylon) FreeCameraMouseInput() *FreeCameraMouseInput {
	p := ba.ctx.Get("FreeCameraMouseInput")
	return FreeCameraMouseInputFromJSObject(p)
}

// FreeCameraMouseInputFromJSObject returns a wrapped FreeCameraMouseInput JavaScript class.
func FreeCameraMouseInputFromJSObject(p js.Value) *FreeCameraMouseInput {
	return &FreeCameraMouseInput{p: p}
}

// NewFreeCameraMouseInputOpts contains optional parameters for NewFreeCameraMouseInput.
type NewFreeCameraMouseInputOpts struct {
	TouchEnabled *JSBool
}

// NewFreeCameraMouseInput returns a new FreeCameraMouseInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.freecameramouseinput
func (ba *Babylon) NewFreeCameraMouseInput(opts *NewFreeCameraMouseInputOpts) *FreeCameraMouseInput {
	if opts == nil {
		opts = &NewFreeCameraMouseInputOpts{}
	}

	p := ba.ctx.Get("FreeCameraMouseInput").New(opts.TouchEnabled.JSObject())
	return FreeCameraMouseInputFromJSObject(p)
}

// TODO: methods
