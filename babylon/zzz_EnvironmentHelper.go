// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// EnvironmentHelper represents a babylon.js EnvironmentHelper.
// The Environment helper class can be used to add a fully featuread none expensive background to your scene.
// It includes by default a skybox and a ground relying on the BackgroundMaterial.
// It also helps with the default setup of your imageProcessing configuration.
type EnvironmentHelper struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (e *EnvironmentHelper) JSObject() js.Value { return e.p }

// EnvironmentHelper returns a EnvironmentHelper JavaScript class.
func (ba *Babylon) EnvironmentHelper() *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper")
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// EnvironmentHelperFromJSObject returns a wrapped EnvironmentHelper JavaScript class.
func EnvironmentHelperFromJSObject(p js.Value, ctx js.Value) *EnvironmentHelper {
	return &EnvironmentHelper{p: p, ctx: ctx}
}

// EnvironmentHelperArrayToJSArray returns a JavaScript Array for the wrapped array.
func EnvironmentHelperArrayToJSArray(array []*EnvironmentHelper) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewEnvironmentHelper returns a new EnvironmentHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper
func (ba *Babylon) NewEnvironmentHelper(options js.Value, scene *Scene) *EnvironmentHelper {

	args := make([]interface{}, 0, 2+0)

	args = append(args, options)
	args = append(args, scene.JSObject())

	p := ba.ctx.Get("EnvironmentHelper").New(args...)
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// Dispose calls the Dispose method on the EnvironmentHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#dispose
func (e *EnvironmentHelper) Dispose() {

	e.p.Call("dispose")
}

// SetMainColor calls the SetMainColor method on the EnvironmentHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#setmaincolor
func (e *EnvironmentHelper) SetMainColor(color *Color3) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, color.JSObject())

	e.p.Call("setMainColor", args...)
}

// UpdateOptions calls the UpdateOptions method on the EnvironmentHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#updateoptions
func (e *EnvironmentHelper) UpdateOptions(options js.Value) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, options)

	e.p.Call("updateOptions", args...)
}

/*

// Ground returns the Ground property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#ground
func (e *EnvironmentHelper) Ground(ground *Mesh) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(ground.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetGround sets the Ground property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#ground
func (e *EnvironmentHelper) SetGround(ground *Mesh) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(ground.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// GroundMaterial returns the GroundMaterial property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#groundmaterial
func (e *EnvironmentHelper) GroundMaterial(groundMaterial *BackgroundMaterial) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(groundMaterial.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetGroundMaterial sets the GroundMaterial property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#groundmaterial
func (e *EnvironmentHelper) SetGroundMaterial(groundMaterial *BackgroundMaterial) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(groundMaterial.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// GroundMirror returns the GroundMirror property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#groundmirror
func (e *EnvironmentHelper) GroundMirror(groundMirror *MirrorTexture) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(groundMirror.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetGroundMirror sets the GroundMirror property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#groundmirror
func (e *EnvironmentHelper) SetGroundMirror(groundMirror *MirrorTexture) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(groundMirror.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// GroundMirrorRenderList returns the GroundMirrorRenderList property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#groundmirrorrenderlist
func (e *EnvironmentHelper) GroundMirrorRenderList(groundMirrorRenderList *AbstractMesh) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(groundMirrorRenderList.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetGroundMirrorRenderList sets the GroundMirrorRenderList property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#groundmirrorrenderlist
func (e *EnvironmentHelper) SetGroundMirrorRenderList(groundMirrorRenderList *AbstractMesh) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(groundMirrorRenderList.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// GroundTexture returns the GroundTexture property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#groundtexture
func (e *EnvironmentHelper) GroundTexture(groundTexture *BaseTexture) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(groundTexture.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetGroundTexture sets the GroundTexture property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#groundtexture
func (e *EnvironmentHelper) SetGroundTexture(groundTexture *BaseTexture) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(groundTexture.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// OnErrorObservable returns the OnErrorObservable property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#onerrorobservable
func (e *EnvironmentHelper) OnErrorObservable(onErrorObservable *Observable) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(onErrorObservable.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetOnErrorObservable sets the OnErrorObservable property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#onerrorobservable
func (e *EnvironmentHelper) SetOnErrorObservable(onErrorObservable *Observable) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(onErrorObservable.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// RootMesh returns the RootMesh property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#rootmesh
func (e *EnvironmentHelper) RootMesh(rootMesh *Mesh) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(rootMesh.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetRootMesh sets the RootMesh property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#rootmesh
func (e *EnvironmentHelper) SetRootMesh(rootMesh *Mesh) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(rootMesh.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// Skybox returns the Skybox property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#skybox
func (e *EnvironmentHelper) Skybox(skybox *Mesh) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(skybox.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetSkybox sets the Skybox property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#skybox
func (e *EnvironmentHelper) SetSkybox(skybox *Mesh) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(skybox.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SkyboxMaterial returns the SkyboxMaterial property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#skyboxmaterial
func (e *EnvironmentHelper) SkyboxMaterial(skyboxMaterial *BackgroundMaterial) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(skyboxMaterial.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetSkyboxMaterial sets the SkyboxMaterial property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#skyboxmaterial
func (e *EnvironmentHelper) SetSkyboxMaterial(skyboxMaterial *BackgroundMaterial) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(skyboxMaterial.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SkyboxTexture returns the SkyboxTexture property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#skyboxtexture
func (e *EnvironmentHelper) SkyboxTexture(skyboxTexture *BaseTexture) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(skyboxTexture.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

// SetSkyboxTexture sets the SkyboxTexture property of class EnvironmentHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.environmenthelper#skyboxtexture
func (e *EnvironmentHelper) SetSkyboxTexture(skyboxTexture *BaseTexture) *EnvironmentHelper {
	p := ba.ctx.Get("EnvironmentHelper").New(skyboxTexture.JSObject())
	return EnvironmentHelperFromJSObject(p, ba.ctx)
}

*/
