// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// BaseSlider represents a babylon.js BaseSlider.
// Class used to create slider controls
type BaseSlider struct {
	*Control
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (b *BaseSlider) JSObject() js.Value { return b.p }

// BaseSlider returns a BaseSlider JavaScript class.
func (ba *Babylon) BaseSlider() *BaseSlider {
	p := ba.ctx.Get("BaseSlider")
	return BaseSliderFromJSObject(p, ba.ctx)
}

// BaseSliderFromJSObject returns a wrapped BaseSlider JavaScript class.
func BaseSliderFromJSObject(p js.Value, ctx js.Value) *BaseSlider {
	return &BaseSlider{Control: ControlFromJSObject(p, ctx), ctx: ctx}
}

// BaseSliderArrayToJSArray returns a JavaScript Array for the wrapped array.
func BaseSliderArrayToJSArray(array []*BaseSlider) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewBaseSliderOpts contains optional parameters for NewBaseSlider.
type NewBaseSliderOpts struct {
	Name *string
}

// NewBaseSlider returns a new BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider
func (ba *Babylon) NewBaseSlider(opts *NewBaseSliderOpts) *BaseSlider {
	if opts == nil {
		opts = &NewBaseSliderOpts{}
	}

	args := make([]interface{}, 0, 0+1)

	if opts.Name == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Name)
	}

	p := ba.ctx.Get("BaseSlider").New(args...)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Contains calls the Contains method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#contains
func (b *BaseSlider) Contains(x float64, y float64) bool {

	args := make([]interface{}, 0, 2+0)

	args = append(args, x)
	args = append(args, y)

	retVal := b.p.Call("contains", args...)
	return retVal.Bool()
}

// Dispose calls the Dispose method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#dispose
func (b *BaseSlider) Dispose() {

	b.p.Call("dispose")
}

// GetAscendantOfClass calls the GetAscendantOfClass method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#getascendantofclass
func (b *BaseSlider) GetAscendantOfClass(className string) *Control {

	args := make([]interface{}, 0, 1+0)

	args = append(args, className)

	retVal := b.p.Call("getAscendantOfClass", args...)
	return ControlFromJSObject(retVal, b.ctx)
}

// GetClassName calls the GetClassName method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#getclassname
func (b *BaseSlider) GetClassName() string {

	retVal := b.p.Call("getClassName")
	return retVal.String()
}

// BaseSliderGetDescendantsOpts contains optional parameters for BaseSlider.GetDescendants.
type BaseSliderGetDescendantsOpts struct {
	DirectDescendantsOnly *bool
	Predicate             *func()
}

// GetDescendants calls the GetDescendants method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#getdescendants
func (b *BaseSlider) GetDescendants(opts *BaseSliderGetDescendantsOpts) *Control {
	if opts == nil {
		opts = &BaseSliderGetDescendantsOpts{}
	}

	args := make([]interface{}, 0, 0+2)

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	retVal := b.p.Call("getDescendants", args...)
	return ControlFromJSObject(retVal, b.ctx)
}

// BaseSliderGetDescendantsToRefOpts contains optional parameters for BaseSlider.GetDescendantsToRef.
type BaseSliderGetDescendantsToRefOpts struct {
	DirectDescendantsOnly *bool
	Predicate             *func()
}

// GetDescendantsToRef calls the GetDescendantsToRef method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#getdescendantstoref
func (b *BaseSlider) GetDescendantsToRef(results *Control, opts *BaseSliderGetDescendantsToRefOpts) {
	if opts == nil {
		opts = &BaseSliderGetDescendantsToRefOpts{}
	}

	args := make([]interface{}, 0, 1+2)

	args = append(args, results.JSObject())

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	b.p.Call("getDescendantsToRef", args...)
}

// GetLocalCoordinates calls the GetLocalCoordinates method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#getlocalcoordinates
func (b *BaseSlider) GetLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := b.p.Call("getLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, b.ctx)
}

// GetLocalCoordinatesToRef calls the GetLocalCoordinatesToRef method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#getlocalcoordinatestoref
func (b *BaseSlider) GetLocalCoordinatesToRef(globalCoordinates *Vector2, result *Vector2) *Control {

	args := make([]interface{}, 0, 2+0)

	args = append(args, globalCoordinates.JSObject())
	args = append(args, result.JSObject())

	retVal := b.p.Call("getLocalCoordinatesToRef", args...)
	return ControlFromJSObject(retVal, b.ctx)
}

// GetParentLocalCoordinates calls the GetParentLocalCoordinates method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#getparentlocalcoordinates
func (b *BaseSlider) GetParentLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := b.p.Call("getParentLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, b.ctx)
}

// IsAscendant calls the IsAscendant method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isascendant
func (b *BaseSlider) IsAscendant(container *Control) bool {

	args := make([]interface{}, 0, 1+0)

	args = append(args, container.JSObject())

	retVal := b.p.Call("isAscendant", args...)
	return retVal.Bool()
}

// LinkWithMesh calls the LinkWithMesh method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkwithmesh
func (b *BaseSlider) LinkWithMesh(mesh *AbstractMesh) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, mesh.JSObject())

	b.p.Call("linkWithMesh", args...)
}

// MoveToVector3 calls the MoveToVector3 method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#movetovector3
func (b *BaseSlider) MoveToVector3(position *Vector3, scene *Scene) {

	args := make([]interface{}, 0, 2+0)

	args = append(args, position.JSObject())
	args = append(args, scene.JSObject())

	b.p.Call("moveToVector3", args...)
}

// _onPointerDown calls the _onPointerDown method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#_onpointerdown
func (b *BaseSlider) _onPointerDown(target *Control, coordinates *Vector2, pointerId float64, buttonIndex float64) bool {

	args := make([]interface{}, 0, 4+0)

	args = append(args, target.JSObject())
	args = append(args, coordinates.JSObject())
	args = append(args, pointerId)
	args = append(args, buttonIndex)

	retVal := b.p.Call("_onPointerDown", args...)
	return retVal.Bool()
}

// _onPointerMove calls the _onPointerMove method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#_onpointermove
func (b *BaseSlider) _onPointerMove(target *Control, coordinates *Vector2, pointerId float64) {

	args := make([]interface{}, 0, 3+0)

	args = append(args, target.JSObject())
	args = append(args, coordinates.JSObject())
	args = append(args, pointerId)

	b.p.Call("_onPointerMove", args...)
}

// _onPointerUp calls the _onPointerUp method on the BaseSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#_onpointerup
func (b *BaseSlider) _onPointerUp(target *Control, coordinates *Vector2, pointerId float64, buttonIndex float64, notifyClick bool) {

	args := make([]interface{}, 0, 5+0)

	args = append(args, target.JSObject())
	args = append(args, coordinates.JSObject())
	args = append(args, pointerId)
	args = append(args, buttonIndex)
	args = append(args, notifyClick)

	b.p.Call("_onPointerUp", args...)
}

/*

// AllowAlphaInheritance returns the AllowAlphaInheritance property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#allowalphainheritance
func (b *BaseSlider) AllowAlphaInheritance(AllowAlphaInheritance bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(AllowAlphaInheritance)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetAllowAlphaInheritance sets the AllowAlphaInheritance property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#allowalphainheritance
func (b *BaseSlider) SetAllowAlphaInheritance(AllowAlphaInheritance bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(AllowAlphaInheritance)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Alpha returns the Alpha property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#alpha
func (b *BaseSlider) Alpha(alpha float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(alpha)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetAlpha sets the Alpha property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#alpha
func (b *BaseSlider) SetAlpha(alpha float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(alpha)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// BarOffset returns the BarOffset property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#baroffset
func (b *BaseSlider) BarOffset(barOffset string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(barOffset)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetBarOffset sets the BarOffset property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#baroffset
func (b *BaseSlider) SetBarOffset(barOffset string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(barOffset)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// BarOffsetInPixels returns the BarOffsetInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#baroffsetinpixels
func (b *BaseSlider) BarOffsetInPixels(barOffsetInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(barOffsetInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetBarOffsetInPixels sets the BarOffsetInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#baroffsetinpixels
func (b *BaseSlider) SetBarOffsetInPixels(barOffsetInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(barOffsetInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// CenterX returns the CenterX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#centerx
func (b *BaseSlider) CenterX(centerX float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(centerX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetCenterX sets the CenterX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#centerx
func (b *BaseSlider) SetCenterX(centerX float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(centerX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// CenterY returns the CenterY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#centery
func (b *BaseSlider) CenterY(centerY float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(centerY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetCenterY sets the CenterY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#centery
func (b *BaseSlider) SetCenterY(centerY float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(centerY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ClipChildren returns the ClipChildren property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#clipchildren
func (b *BaseSlider) ClipChildren(clipChildren bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(clipChildren)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetClipChildren sets the ClipChildren property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#clipchildren
func (b *BaseSlider) SetClipChildren(clipChildren bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(clipChildren)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ClipContent returns the ClipContent property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#clipcontent
func (b *BaseSlider) ClipContent(clipContent bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(clipContent)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetClipContent sets the ClipContent property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#clipcontent
func (b *BaseSlider) SetClipContent(clipContent bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(clipContent)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Color returns the Color property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#color
func (b *BaseSlider) Color(color string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(color)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetColor sets the Color property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#color
func (b *BaseSlider) SetColor(color string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(color)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// DisabledColor returns the DisabledColor property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#disabledcolor
func (b *BaseSlider) DisabledColor(disabledColor string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(disabledColor)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetDisabledColor sets the DisabledColor property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#disabledcolor
func (b *BaseSlider) SetDisabledColor(disabledColor string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(disabledColor)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// DisplayThumb returns the DisplayThumb property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#displaythumb
func (b *BaseSlider) DisplayThumb(displayThumb bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(displayThumb)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetDisplayThumb sets the DisplayThumb property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#displaythumb
func (b *BaseSlider) SetDisplayThumb(displayThumb bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(displayThumb)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// FontFamily returns the FontFamily property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontfamily
func (b *BaseSlider) FontFamily(fontFamily string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontFamily)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetFontFamily sets the FontFamily property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontfamily
func (b *BaseSlider) SetFontFamily(fontFamily string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontFamily)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// FontOffset returns the FontOffset property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontoffset
func (b *BaseSlider) FontOffset(fontOffset js.Value) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontOffset)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetFontOffset sets the FontOffset property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontoffset
func (b *BaseSlider) SetFontOffset(fontOffset js.Value) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontOffset)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// FontSize returns the FontSize property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontsize
func (b *BaseSlider) FontSize(fontSize string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontSize)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetFontSize sets the FontSize property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontsize
func (b *BaseSlider) SetFontSize(fontSize string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontSize)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// FontSizeInPixels returns the FontSizeInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontsizeinpixels
func (b *BaseSlider) FontSizeInPixels(fontSizeInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontSizeInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetFontSizeInPixels sets the FontSizeInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontsizeinpixels
func (b *BaseSlider) SetFontSizeInPixels(fontSizeInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontSizeInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// FontStyle returns the FontStyle property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontstyle
func (b *BaseSlider) FontStyle(fontStyle string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontStyle)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetFontStyle sets the FontStyle property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontstyle
func (b *BaseSlider) SetFontStyle(fontStyle string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontStyle)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// FontWeight returns the FontWeight property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontweight
func (b *BaseSlider) FontWeight(fontWeight string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontWeight)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetFontWeight sets the FontWeight property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#fontweight
func (b *BaseSlider) SetFontWeight(fontWeight string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(fontWeight)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_CENTER returns the HORIZONTAL_ALIGNMENT_CENTER property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#horizontal_alignment_center
func (b *BaseSlider) HORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(HORIZONTAL_ALIGNMENT_CENTER)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_CENTER sets the HORIZONTAL_ALIGNMENT_CENTER property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#horizontal_alignment_center
func (b *BaseSlider) SetHORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(HORIZONTAL_ALIGNMENT_CENTER)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_LEFT returns the HORIZONTAL_ALIGNMENT_LEFT property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#horizontal_alignment_left
func (b *BaseSlider) HORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(HORIZONTAL_ALIGNMENT_LEFT)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_LEFT sets the HORIZONTAL_ALIGNMENT_LEFT property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#horizontal_alignment_left
func (b *BaseSlider) SetHORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(HORIZONTAL_ALIGNMENT_LEFT)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_RIGHT returns the HORIZONTAL_ALIGNMENT_RIGHT property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#horizontal_alignment_right
func (b *BaseSlider) HORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_RIGHT sets the HORIZONTAL_ALIGNMENT_RIGHT property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#horizontal_alignment_right
func (b *BaseSlider) SetHORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Height returns the Height property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#height
func (b *BaseSlider) Height(height string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(height)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetHeight sets the Height property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#height
func (b *BaseSlider) SetHeight(height string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(height)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// HeightInPixels returns the HeightInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#heightinpixels
func (b *BaseSlider) HeightInPixels(heightInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(heightInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetHeightInPixels sets the HeightInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#heightinpixels
func (b *BaseSlider) SetHeightInPixels(heightInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(heightInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// HorizontalAlignment returns the HorizontalAlignment property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#horizontalalignment
func (b *BaseSlider) HorizontalAlignment(horizontalAlignment float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(horizontalAlignment)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetHorizontalAlignment sets the HorizontalAlignment property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#horizontalalignment
func (b *BaseSlider) SetHorizontalAlignment(horizontalAlignment float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(horizontalAlignment)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Host returns the Host property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#host
func (b *BaseSlider) Host(host *AdvancedDynamicTexture) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(host.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetHost sets the Host property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#host
func (b *BaseSlider) SetHost(host *AdvancedDynamicTexture) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(host.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// HoverCursor returns the HoverCursor property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#hovercursor
func (b *BaseSlider) HoverCursor(hoverCursor string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(hoverCursor)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetHoverCursor sets the HoverCursor property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#hovercursor
func (b *BaseSlider) SetHoverCursor(hoverCursor string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(hoverCursor)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// IsDirty returns the IsDirty property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isdirty
func (b *BaseSlider) IsDirty(isDirty bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isDirty)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetIsDirty sets the IsDirty property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isdirty
func (b *BaseSlider) SetIsDirty(isDirty bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isDirty)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// IsEnabled returns the IsEnabled property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isenabled
func (b *BaseSlider) IsEnabled(isEnabled bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isEnabled)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetIsEnabled sets the IsEnabled property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isenabled
func (b *BaseSlider) SetIsEnabled(isEnabled bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isEnabled)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// IsFocusInvisible returns the IsFocusInvisible property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isfocusinvisible
func (b *BaseSlider) IsFocusInvisible(isFocusInvisible bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isFocusInvisible)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetIsFocusInvisible sets the IsFocusInvisible property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isfocusinvisible
func (b *BaseSlider) SetIsFocusInvisible(isFocusInvisible bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isFocusInvisible)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// IsHighlighted returns the IsHighlighted property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#ishighlighted
func (b *BaseSlider) IsHighlighted(isHighlighted bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isHighlighted)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetIsHighlighted sets the IsHighlighted property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#ishighlighted
func (b *BaseSlider) SetIsHighlighted(isHighlighted bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isHighlighted)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// IsHitTestVisible returns the IsHitTestVisible property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#ishittestvisible
func (b *BaseSlider) IsHitTestVisible(isHitTestVisible bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isHitTestVisible)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetIsHitTestVisible sets the IsHitTestVisible property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#ishittestvisible
func (b *BaseSlider) SetIsHitTestVisible(isHitTestVisible bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isHitTestVisible)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// IsPointerBlocker returns the IsPointerBlocker property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#ispointerblocker
func (b *BaseSlider) IsPointerBlocker(isPointerBlocker bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isPointerBlocker)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetIsPointerBlocker sets the IsPointerBlocker property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#ispointerblocker
func (b *BaseSlider) SetIsPointerBlocker(isPointerBlocker bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isPointerBlocker)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// IsThumbClamped returns the IsThumbClamped property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isthumbclamped
func (b *BaseSlider) IsThumbClamped(isThumbClamped bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isThumbClamped)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetIsThumbClamped sets the IsThumbClamped property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isthumbclamped
func (b *BaseSlider) SetIsThumbClamped(isThumbClamped bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isThumbClamped)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// IsVertical returns the IsVertical property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isvertical
func (b *BaseSlider) IsVertical(isVertical bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isVertical)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetIsVertical sets the IsVertical property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isvertical
func (b *BaseSlider) SetIsVertical(isVertical bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isVertical)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// IsVisible returns the IsVisible property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isvisible
func (b *BaseSlider) IsVisible(isVisible bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isVisible)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetIsVisible sets the IsVisible property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#isvisible
func (b *BaseSlider) SetIsVisible(isVisible bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(isVisible)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Left returns the Left property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#left
func (b *BaseSlider) Left(left string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(left)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetLeft sets the Left property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#left
func (b *BaseSlider) SetLeft(left string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(left)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// LeftInPixels returns the LeftInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#leftinpixels
func (b *BaseSlider) LeftInPixels(leftInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(leftInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetLeftInPixels sets the LeftInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#leftinpixels
func (b *BaseSlider) SetLeftInPixels(leftInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(leftInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// LinkOffsetX returns the LinkOffsetX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkoffsetx
func (b *BaseSlider) LinkOffsetX(linkOffsetX string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkOffsetX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetLinkOffsetX sets the LinkOffsetX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkoffsetx
func (b *BaseSlider) SetLinkOffsetX(linkOffsetX string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkOffsetX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// LinkOffsetXInPixels returns the LinkOffsetXInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkoffsetxinpixels
func (b *BaseSlider) LinkOffsetXInPixels(linkOffsetXInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkOffsetXInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetLinkOffsetXInPixels sets the LinkOffsetXInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkoffsetxinpixels
func (b *BaseSlider) SetLinkOffsetXInPixels(linkOffsetXInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkOffsetXInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// LinkOffsetY returns the LinkOffsetY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkoffsety
func (b *BaseSlider) LinkOffsetY(linkOffsetY string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkOffsetY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetLinkOffsetY sets the LinkOffsetY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkoffsety
func (b *BaseSlider) SetLinkOffsetY(linkOffsetY string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkOffsetY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// LinkOffsetYInPixels returns the LinkOffsetYInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkoffsetyinpixels
func (b *BaseSlider) LinkOffsetYInPixels(linkOffsetYInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkOffsetYInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetLinkOffsetYInPixels sets the LinkOffsetYInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkoffsetyinpixels
func (b *BaseSlider) SetLinkOffsetYInPixels(linkOffsetYInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkOffsetYInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// LinkedMesh returns the LinkedMesh property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkedmesh
func (b *BaseSlider) LinkedMesh(linkedMesh *AbstractMesh) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkedMesh.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetLinkedMesh sets the LinkedMesh property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#linkedmesh
func (b *BaseSlider) SetLinkedMesh(linkedMesh *AbstractMesh) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(linkedMesh.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Maximum returns the Maximum property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#maximum
func (b *BaseSlider) Maximum(maximum float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(maximum)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetMaximum sets the Maximum property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#maximum
func (b *BaseSlider) SetMaximum(maximum float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(maximum)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Metadata returns the Metadata property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#metadata
func (b *BaseSlider) Metadata(metadata interface{}) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(metadata)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetMetadata sets the Metadata property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#metadata
func (b *BaseSlider) SetMetadata(metadata interface{}) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(metadata)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Minimum returns the Minimum property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#minimum
func (b *BaseSlider) Minimum(minimum float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(minimum)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetMinimum sets the Minimum property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#minimum
func (b *BaseSlider) SetMinimum(minimum float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(minimum)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#name
func (b *BaseSlider) Name(name string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(name)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#name
func (b *BaseSlider) SetName(name string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(name)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// NotRenderable returns the NotRenderable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#notrenderable
func (b *BaseSlider) NotRenderable(notRenderable bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(notRenderable)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetNotRenderable sets the NotRenderable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#notrenderable
func (b *BaseSlider) SetNotRenderable(notRenderable bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(notRenderable)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnAfterDrawObservable returns the OnAfterDrawObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onafterdrawobservable
func (b *BaseSlider) OnAfterDrawObservable(onAfterDrawObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onAfterDrawObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnAfterDrawObservable sets the OnAfterDrawObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onafterdrawobservable
func (b *BaseSlider) SetOnAfterDrawObservable(onAfterDrawObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onAfterDrawObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnBeforeDrawObservable returns the OnBeforeDrawObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onbeforedrawobservable
func (b *BaseSlider) OnBeforeDrawObservable(onBeforeDrawObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onBeforeDrawObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnBeforeDrawObservable sets the OnBeforeDrawObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onbeforedrawobservable
func (b *BaseSlider) SetOnBeforeDrawObservable(onBeforeDrawObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onBeforeDrawObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnDirtyObservable returns the OnDirtyObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#ondirtyobservable
func (b *BaseSlider) OnDirtyObservable(onDirtyObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onDirtyObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnDirtyObservable sets the OnDirtyObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#ondirtyobservable
func (b *BaseSlider) SetOnDirtyObservable(onDirtyObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onDirtyObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnPointerClickObservable returns the OnPointerClickObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointerclickobservable
func (b *BaseSlider) OnPointerClickObservable(onPointerClickObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerClickObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnPointerClickObservable sets the OnPointerClickObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointerclickobservable
func (b *BaseSlider) SetOnPointerClickObservable(onPointerClickObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerClickObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnPointerDownObservable returns the OnPointerDownObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointerdownobservable
func (b *BaseSlider) OnPointerDownObservable(onPointerDownObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerDownObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnPointerDownObservable sets the OnPointerDownObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointerdownobservable
func (b *BaseSlider) SetOnPointerDownObservable(onPointerDownObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerDownObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnPointerEnterObservable returns the OnPointerEnterObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointerenterobservable
func (b *BaseSlider) OnPointerEnterObservable(onPointerEnterObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerEnterObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnPointerEnterObservable sets the OnPointerEnterObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointerenterobservable
func (b *BaseSlider) SetOnPointerEnterObservable(onPointerEnterObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerEnterObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnPointerMoveObservable returns the OnPointerMoveObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointermoveobservable
func (b *BaseSlider) OnPointerMoveObservable(onPointerMoveObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerMoveObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnPointerMoveObservable sets the OnPointerMoveObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointermoveobservable
func (b *BaseSlider) SetOnPointerMoveObservable(onPointerMoveObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerMoveObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnPointerOutObservable returns the OnPointerOutObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointeroutobservable
func (b *BaseSlider) OnPointerOutObservable(onPointerOutObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerOutObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnPointerOutObservable sets the OnPointerOutObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointeroutobservable
func (b *BaseSlider) SetOnPointerOutObservable(onPointerOutObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerOutObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnPointerUpObservable returns the OnPointerUpObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointerupobservable
func (b *BaseSlider) OnPointerUpObservable(onPointerUpObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerUpObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnPointerUpObservable sets the OnPointerUpObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onpointerupobservable
func (b *BaseSlider) SetOnPointerUpObservable(onPointerUpObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onPointerUpObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// OnValueChangedObservable returns the OnValueChangedObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onvaluechangedobservable
func (b *BaseSlider) OnValueChangedObservable(onValueChangedObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onValueChangedObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetOnValueChangedObservable sets the OnValueChangedObservable property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#onvaluechangedobservable
func (b *BaseSlider) SetOnValueChangedObservable(onValueChangedObservable *Observable) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(onValueChangedObservable.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// PaddingBottom returns the PaddingBottom property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingbottom
func (b *BaseSlider) PaddingBottom(paddingBottom string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingBottom)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetPaddingBottom sets the PaddingBottom property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingbottom
func (b *BaseSlider) SetPaddingBottom(paddingBottom string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingBottom)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// PaddingBottomInPixels returns the PaddingBottomInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingbottominpixels
func (b *BaseSlider) PaddingBottomInPixels(paddingBottomInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingBottomInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetPaddingBottomInPixels sets the PaddingBottomInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingbottominpixels
func (b *BaseSlider) SetPaddingBottomInPixels(paddingBottomInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingBottomInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// PaddingLeft returns the PaddingLeft property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingleft
func (b *BaseSlider) PaddingLeft(paddingLeft string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingLeft)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetPaddingLeft sets the PaddingLeft property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingleft
func (b *BaseSlider) SetPaddingLeft(paddingLeft string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingLeft)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// PaddingLeftInPixels returns the PaddingLeftInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingleftinpixels
func (b *BaseSlider) PaddingLeftInPixels(paddingLeftInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingLeftInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetPaddingLeftInPixels sets the PaddingLeftInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingleftinpixels
func (b *BaseSlider) SetPaddingLeftInPixels(paddingLeftInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingLeftInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// PaddingRight returns the PaddingRight property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingright
func (b *BaseSlider) PaddingRight(paddingRight string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingRight)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetPaddingRight sets the PaddingRight property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingright
func (b *BaseSlider) SetPaddingRight(paddingRight string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingRight)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// PaddingRightInPixels returns the PaddingRightInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingrightinpixels
func (b *BaseSlider) PaddingRightInPixels(paddingRightInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingRightInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetPaddingRightInPixels sets the PaddingRightInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingrightinpixels
func (b *BaseSlider) SetPaddingRightInPixels(paddingRightInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingRightInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// PaddingTop returns the PaddingTop property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingtop
func (b *BaseSlider) PaddingTop(paddingTop string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingTop)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetPaddingTop sets the PaddingTop property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingtop
func (b *BaseSlider) SetPaddingTop(paddingTop string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingTop)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// PaddingTopInPixels returns the PaddingTopInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingtopinpixels
func (b *BaseSlider) PaddingTopInPixels(paddingTopInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingTopInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetPaddingTopInPixels sets the PaddingTopInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#paddingtopinpixels
func (b *BaseSlider) SetPaddingTopInPixels(paddingTopInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(paddingTopInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Parent returns the Parent property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#parent
func (b *BaseSlider) Parent(parent *Container) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(parent.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetParent sets the Parent property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#parent
func (b *BaseSlider) SetParent(parent *Container) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(parent.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Rotation returns the Rotation property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#rotation
func (b *BaseSlider) Rotation(rotation float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(rotation)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetRotation sets the Rotation property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#rotation
func (b *BaseSlider) SetRotation(rotation float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(rotation)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ScaleX returns the ScaleX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#scalex
func (b *BaseSlider) ScaleX(scaleX float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(scaleX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetScaleX sets the ScaleX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#scalex
func (b *BaseSlider) SetScaleX(scaleX float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(scaleX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ScaleY returns the ScaleY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#scaley
func (b *BaseSlider) ScaleY(scaleY float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(scaleY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetScaleY sets the ScaleY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#scaley
func (b *BaseSlider) SetScaleY(scaleY float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(scaleY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ShadowBlur returns the ShadowBlur property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#shadowblur
func (b *BaseSlider) ShadowBlur(shadowBlur float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(shadowBlur)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetShadowBlur sets the ShadowBlur property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#shadowblur
func (b *BaseSlider) SetShadowBlur(shadowBlur float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(shadowBlur)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ShadowColor returns the ShadowColor property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#shadowcolor
func (b *BaseSlider) ShadowColor(shadowColor string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(shadowColor)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetShadowColor sets the ShadowColor property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#shadowcolor
func (b *BaseSlider) SetShadowColor(shadowColor string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(shadowColor)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ShadowOffsetX returns the ShadowOffsetX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#shadowoffsetx
func (b *BaseSlider) ShadowOffsetX(shadowOffsetX float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(shadowOffsetX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetShadowOffsetX sets the ShadowOffsetX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#shadowoffsetx
func (b *BaseSlider) SetShadowOffsetX(shadowOffsetX float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(shadowOffsetX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ShadowOffsetY returns the ShadowOffsetY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#shadowoffsety
func (b *BaseSlider) ShadowOffsetY(shadowOffsetY float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(shadowOffsetY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetShadowOffsetY sets the ShadowOffsetY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#shadowoffsety
func (b *BaseSlider) SetShadowOffsetY(shadowOffsetY float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(shadowOffsetY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Step returns the Step property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#step
func (b *BaseSlider) Step(step float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(step)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetStep sets the Step property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#step
func (b *BaseSlider) SetStep(step float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(step)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Style returns the Style property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#style
func (b *BaseSlider) Style(style *Style) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(style.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetStyle sets the Style property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#style
func (b *BaseSlider) SetStyle(style *Style) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(style.JSObject())
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ThumbWidth returns the ThumbWidth property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#thumbwidth
func (b *BaseSlider) ThumbWidth(thumbWidth string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(thumbWidth)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetThumbWidth sets the ThumbWidth property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#thumbwidth
func (b *BaseSlider) SetThumbWidth(thumbWidth string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(thumbWidth)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ThumbWidthInPixels returns the ThumbWidthInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#thumbwidthinpixels
func (b *BaseSlider) ThumbWidthInPixels(thumbWidthInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(thumbWidthInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetThumbWidthInPixels sets the ThumbWidthInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#thumbwidthinpixels
func (b *BaseSlider) SetThumbWidthInPixels(thumbWidthInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(thumbWidthInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Top returns the Top property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#top
func (b *BaseSlider) Top(top string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(top)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetTop sets the Top property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#top
func (b *BaseSlider) SetTop(top string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(top)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// TopInPixels returns the TopInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#topinpixels
func (b *BaseSlider) TopInPixels(topInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(topInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetTopInPixels sets the TopInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#topinpixels
func (b *BaseSlider) SetTopInPixels(topInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(topInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// TransformCenterX returns the TransformCenterX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#transformcenterx
func (b *BaseSlider) TransformCenterX(transformCenterX float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(transformCenterX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetTransformCenterX sets the TransformCenterX property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#transformcenterx
func (b *BaseSlider) SetTransformCenterX(transformCenterX float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(transformCenterX)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// TransformCenterY returns the TransformCenterY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#transformcentery
func (b *BaseSlider) TransformCenterY(transformCenterY float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(transformCenterY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetTransformCenterY sets the TransformCenterY property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#transformcentery
func (b *BaseSlider) SetTransformCenterY(transformCenterY float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(transformCenterY)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// TypeName returns the TypeName property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#typename
func (b *BaseSlider) TypeName(typeName string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(typeName)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetTypeName sets the TypeName property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#typename
func (b *BaseSlider) SetTypeName(typeName string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(typeName)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// UniqueId returns the UniqueId property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#uniqueid
func (b *BaseSlider) UniqueId(uniqueId float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(uniqueId)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetUniqueId sets the UniqueId property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#uniqueid
func (b *BaseSlider) SetUniqueId(uniqueId float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(uniqueId)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// UseBitmapCache returns the UseBitmapCache property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#usebitmapcache
func (b *BaseSlider) UseBitmapCache(useBitmapCache bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(useBitmapCache)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetUseBitmapCache sets the UseBitmapCache property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#usebitmapcache
func (b *BaseSlider) SetUseBitmapCache(useBitmapCache bool) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(useBitmapCache)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_BOTTOM returns the VERTICAL_ALIGNMENT_BOTTOM property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#vertical_alignment_bottom
func (b *BaseSlider) VERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(VERTICAL_ALIGNMENT_BOTTOM)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_BOTTOM sets the VERTICAL_ALIGNMENT_BOTTOM property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#vertical_alignment_bottom
func (b *BaseSlider) SetVERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(VERTICAL_ALIGNMENT_BOTTOM)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_CENTER returns the VERTICAL_ALIGNMENT_CENTER property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#vertical_alignment_center
func (b *BaseSlider) VERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(VERTICAL_ALIGNMENT_CENTER)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_CENTER sets the VERTICAL_ALIGNMENT_CENTER property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#vertical_alignment_center
func (b *BaseSlider) SetVERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(VERTICAL_ALIGNMENT_CENTER)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_TOP returns the VERTICAL_ALIGNMENT_TOP property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#vertical_alignment_top
func (b *BaseSlider) VERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(VERTICAL_ALIGNMENT_TOP)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_TOP sets the VERTICAL_ALIGNMENT_TOP property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#vertical_alignment_top
func (b *BaseSlider) SetVERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(VERTICAL_ALIGNMENT_TOP)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Value returns the Value property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#value
func (b *BaseSlider) Value(value float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(value)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetValue sets the Value property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#value
func (b *BaseSlider) SetValue(value float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(value)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// VerticalAlignment returns the VerticalAlignment property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#verticalalignment
func (b *BaseSlider) VerticalAlignment(verticalAlignment float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(verticalAlignment)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetVerticalAlignment sets the VerticalAlignment property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#verticalalignment
func (b *BaseSlider) SetVerticalAlignment(verticalAlignment float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(verticalAlignment)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// Width returns the Width property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#width
func (b *BaseSlider) Width(width string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(width)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetWidth sets the Width property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#width
func (b *BaseSlider) SetWidth(width string) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(width)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// WidthInPixels returns the WidthInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#widthinpixels
func (b *BaseSlider) WidthInPixels(widthInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(widthInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetWidthInPixels sets the WidthInPixels property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#widthinpixels
func (b *BaseSlider) SetWidthInPixels(widthInPixels float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(widthInPixels)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// ZIndex returns the ZIndex property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#zindex
func (b *BaseSlider) ZIndex(zIndex float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(zIndex)
	return BaseSliderFromJSObject(p, ba.ctx)
}

// SetZIndex sets the ZIndex property of class BaseSlider.
//
// https://doc.babylonjs.com/api/classes/babylon.baseslider#zindex
func (b *BaseSlider) SetZIndex(zIndex float64) *BaseSlider {
	p := ba.ctx.Get("BaseSlider").New(zIndex)
	return BaseSliderFromJSObject(p, ba.ctx)
}

*/
