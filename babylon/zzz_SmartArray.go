// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SmartArray represents a babylon.js SmartArray.
// Defines an GC Friendly array where the backfield array do not shrink to prevent over allocations.
type SmartArray struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (s *SmartArray) JSObject() js.Value { return s.p }

// SmartArray returns a SmartArray JavaScript class.
func (ba *Babylon) SmartArray() *SmartArray {
	p := ba.ctx.Get("SmartArray")
	return SmartArrayFromJSObject(p, ba.ctx)
}

// SmartArrayFromJSObject returns a wrapped SmartArray JavaScript class.
func SmartArrayFromJSObject(p js.Value, ctx js.Value) *SmartArray {
	return &SmartArray{p: p, ctx: ctx}
}

// NewSmartArray returns a new SmartArray object.
//
// https://doc.babylonjs.com/api/classes/babylon.smartarray
func (ba *Babylon) NewSmartArray(capacity float64) *SmartArray {
	p := ba.ctx.Get("SmartArray").New(capacity)
	return SmartArrayFromJSObject(p, ba.ctx)
}

// TODO: methods
