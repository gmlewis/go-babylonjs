// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SmartArray represents a babylon.js SmartArray.
// Defines an GC Friendly array where the backfield array do not shrink to prevent over allocations.
type SmartArray struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (s *SmartArray) JSObject() js.Value { return s.p }

// SmartArray returns a SmartArray JavaScript class.
func (b *Babylon) SmartArray() *SmartArray {
	p := b.ctx.Get("SmartArray")
	return SmartArrayFromJSObject(p)
}

// SmartArrayFromJSObject returns a wrapped SmartArray JavaScript class.
func SmartArrayFromJSObject(p js.Value) *SmartArray {
	return &SmartArray{p: p}
}

// NewSmartArray returns a new SmartArray object.
//
// https://doc.babylonjs.com/api/classes/babylon.smartarray
func (b *Babylon) NewSmartArray(capacity float64) *SmartArray {
	p := b.ctx.Get("SmartArray").New(capacity)
	return SmartArrayFromJSObject(p)
}

// TODO: methods
