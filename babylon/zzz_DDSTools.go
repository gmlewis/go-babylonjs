// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// DDSTools represents a babylon.js DDSTools.
// Class used to provide DDS decompression tools
type DDSTools struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (d *DDSTools) JSObject() js.Value { return d.p }

// DDSTools returns a DDSTools JavaScript class.
func (ba *Babylon) DDSTools() *DDSTools {
	p := ba.ctx.Get("DDSTools")
	return DDSToolsFromJSObject(p, ba.ctx)
}

// DDSToolsFromJSObject returns a wrapped DDSTools JavaScript class.
func DDSToolsFromJSObject(p js.Value, ctx js.Value) *DDSTools {
	return &DDSTools{p: p, ctx: ctx}
}

// DDSToolsArrayToJSArray returns a JavaScript Array for the wrapped array.
func DDSToolsArrayToJSArray(array []*DDSTools) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// GetDDSInfo calls the GetDDSInfo method on the DDSTools object.
//
// https://doc.babylonjs.com/api/classes/babylon.ddstools#getddsinfo
func (d *DDSTools) GetDDSInfo(arrayBuffer interface{}) js.Value {

	args := make([]interface{}, 0, 1+0)

	args = append(args, arrayBuffer)

	retVal := d.p.Call("GetDDSInfo", args...)
	return retVal
}

/*

// StoreLODInAlphaChannel returns the StoreLODInAlphaChannel property of class DDSTools.
//
// https://doc.babylonjs.com/api/classes/babylon.ddstools#storelodinalphachannel
func (d *DDSTools) StoreLODInAlphaChannel(StoreLODInAlphaChannel bool) *DDSTools {
	p := ba.ctx.Get("DDSTools").New(StoreLODInAlphaChannel)
	return DDSToolsFromJSObject(p, ba.ctx)
}

// SetStoreLODInAlphaChannel sets the StoreLODInAlphaChannel property of class DDSTools.
//
// https://doc.babylonjs.com/api/classes/babylon.ddstools#storelodinalphachannel
func (d *DDSTools) SetStoreLODInAlphaChannel(StoreLODInAlphaChannel bool) *DDSTools {
	p := ba.ctx.Get("DDSTools").New(StoreLODInAlphaChannel)
	return DDSToolsFromJSObject(p, ba.ctx)
}

*/
