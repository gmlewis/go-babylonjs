// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ArcRotateCameraMouseWheelInput represents a babylon.js ArcRotateCameraMouseWheelInput.
// Manage the mouse wheel inputs to control an arc rotate camera.

//
// See: http://doc.babylonjs.com/how_to/customizing_camera_inputs
type ArcRotateCameraMouseWheelInput struct{}

// JSObject returns the underlying js.Value.
func (a *ArcRotateCameraMouseWheelInput) JSObject() js.Value { return a.p }

// ArcRotateCameraMouseWheelInput returns a ArcRotateCameraMouseWheelInput JavaScript class.
func (b *Babylon) ArcRotateCameraMouseWheelInput() *ArcRotateCameraMouseWheelInput {
	p := b.ctx.Get("ArcRotateCameraMouseWheelInput")
	return ArcRotateCameraMouseWheelInputFromJSObject(p)
}

// ArcRotateCameraMouseWheelInputFromJSObject returns a wrapped ArcRotateCameraMouseWheelInput JavaScript class.
func ArcRotateCameraMouseWheelInputFromJSObject(p js.Value) *ArcRotateCameraMouseWheelInput {
	return &ArcRotateCameraMouseWheelInput{p: p}
}

// NewArcRotateCameraMouseWheelInput returns a new ArcRotateCameraMouseWheelInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecameramousewheelinput
func (b *Babylon) NewArcRotateCameraMouseWheelInput(todo parameters) *ArcRotateCameraMouseWheelInput {
	p := b.ctx.Get("ArcRotateCameraMouseWheelInput").New(todo)
	return ArcRotateCameraMouseWheelInputFromJSObject(p)
}

// TODO: methods
