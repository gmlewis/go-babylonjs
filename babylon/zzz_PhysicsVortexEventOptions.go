// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PhysicsVortexEventOptions represents a babylon.js PhysicsVortexEventOptions.
// Options fot the vortex event

//
// See: https://doc.babylonjs.com/how_to/using_the_physics_engine#further-functionality-of-the-impostor-class
type PhysicsVortexEventOptions struct{}

// JSObject returns the underlying js.Value.
func (p *PhysicsVortexEventOptions) JSObject() js.Value { return p.p }

// PhysicsVortexEventOptions returns a PhysicsVortexEventOptions JavaScript class.
func (b *Babylon) PhysicsVortexEventOptions() *PhysicsVortexEventOptions {
	p := b.ctx.Get("PhysicsVortexEventOptions")
	return PhysicsVortexEventOptionsFromJSObject(p)
}

// PhysicsVortexEventOptionsFromJSObject returns a wrapped PhysicsVortexEventOptions JavaScript class.
func PhysicsVortexEventOptionsFromJSObject(p js.Value) *PhysicsVortexEventOptions {
	return &PhysicsVortexEventOptions{p: p}
}

// NewPhysicsVortexEventOptions returns a new PhysicsVortexEventOptions object.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsvortexeventoptions
func (b *Babylon) NewPhysicsVortexEventOptions(todo parameters) *PhysicsVortexEventOptions {
	p := b.ctx.Get("PhysicsVortexEventOptions").New(todo)
	return PhysicsVortexEventOptionsFromJSObject(p)
}

// TODO: methods
