// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// DotBlock represents a babylon.js DotBlock.
// Block used to apply a dot product between 2 vectors
type DotBlock struct{ *NodeMaterialBlock }

// JSObject returns the underlying js.Value.
func (d *DotBlock) JSObject() js.Value { return d.p }

// DotBlock returns a DotBlock JavaScript class.
func (b *Babylon) DotBlock() *DotBlock {
	p := b.ctx.Get("DotBlock")
	return DotBlockFromJSObject(p)
}

// DotBlockFromJSObject returns a wrapped DotBlock JavaScript class.
func DotBlockFromJSObject(p js.Value) *DotBlock {
	return &DotBlock{NodeMaterialBlockFromJSObject(p)}
}

// NewDotBlock returns a new DotBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.dotblock
func (b *Babylon) NewDotBlock(todo parameters) *DotBlock {
	p := b.ctx.Get("DotBlock").New(todo)
	return DotBlockFromJSObject(p)
}

// TODO: methods
