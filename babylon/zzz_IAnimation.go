// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IAnimation represents a babylon.js IAnimation.
// Loader interface with additional members.
type IAnimation struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IAnimation) JSObject() js.Value { return i.p }

// IAnimation returns a IAnimation JavaScript class.
func (ba *Babylon) IAnimation() *IAnimation {
	p := ba.ctx.Get("IAnimation")
	return IAnimationFromJSObject(p, ba.ctx)
}

// IAnimationFromJSObject returns a wrapped IAnimation JavaScript class.
func IAnimationFromJSObject(p js.Value, ctx js.Value) *IAnimation {
	return &IAnimation{p: p, ctx: ctx}
}

// IAnimationArrayToJSArray returns a JavaScript Array for the wrapped array.
func IAnimationArrayToJSArray(array []*IAnimation) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Channels returns the Channels property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#channels
func (i *IAnimation) Channels(channels *IAnimationChannel) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(channels.JSObject())
	return IAnimationFromJSObject(p, ba.ctx)
}

// SetChannels sets the Channels property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#channels
func (i *IAnimation) SetChannels(channels *IAnimationChannel) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(channels.JSObject())
	return IAnimationFromJSObject(p, ba.ctx)
}

// Extensions returns the Extensions property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#extensions
func (i *IAnimation) Extensions(extensions js.Value) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(extensions)
	return IAnimationFromJSObject(p, ba.ctx)
}

// SetExtensions sets the Extensions property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#extensions
func (i *IAnimation) SetExtensions(extensions js.Value) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(extensions)
	return IAnimationFromJSObject(p, ba.ctx)
}

// Extras returns the Extras property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#extras
func (i *IAnimation) Extras(extras interface{}) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(extras)
	return IAnimationFromJSObject(p, ba.ctx)
}

// SetExtras sets the Extras property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#extras
func (i *IAnimation) SetExtras(extras interface{}) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(extras)
	return IAnimationFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#index
func (i *IAnimation) Index(index float64) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(index)
	return IAnimationFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#index
func (i *IAnimation) SetIndex(index float64) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(index)
	return IAnimationFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#name
func (i *IAnimation) Name(name string) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(name)
	return IAnimationFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#name
func (i *IAnimation) SetName(name string) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(name)
	return IAnimationFromJSObject(p, ba.ctx)
}

// Samplers returns the Samplers property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#samplers
func (i *IAnimation) Samplers(samplers *IAnimationSampler) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(samplers.JSObject())
	return IAnimationFromJSObject(p, ba.ctx)
}

// SetSamplers sets the Samplers property of class IAnimation.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimation#samplers
func (i *IAnimation) SetSamplers(samplers *IAnimationSampler) *IAnimation {
	p := ba.ctx.Get("IAnimation").New(samplers.JSObject())
	return IAnimationFromJSObject(p, ba.ctx)
}

*/
