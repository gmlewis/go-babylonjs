// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// MotorEnabledJoint represents a babylon.js MotorEnabledJoint.
// Represents a Motor-Enabled Joint

//
// See: https://doc.babylonjs.com/how_to/using_the_physics_engine
type MotorEnabledJoint struct{ *PhysicsJoint }

// JSObject returns the underlying js.Value.
func (m *MotorEnabledJoint) JSObject() js.Value { return m.p }

// MotorEnabledJoint returns a MotorEnabledJoint JavaScript class.
func (b *Babylon) MotorEnabledJoint() *MotorEnabledJoint {
	p := b.ctx.Get("MotorEnabledJoint")
	return MotorEnabledJointFromJSObject(p)
}

// MotorEnabledJointFromJSObject returns a wrapped MotorEnabledJoint JavaScript class.
func MotorEnabledJointFromJSObject(p js.Value) *MotorEnabledJoint {
	return &MotorEnabledJoint{PhysicsJointFromJSObject(p)}
}

// NewMotorEnabledJoint returns a new MotorEnabledJoint object.
//
// https://doc.babylonjs.com/api/classes/babylon.motorenabledjoint
func (b *Babylon) NewMotorEnabledJoint(todo parameters) *MotorEnabledJoint {
	p := b.ctx.Get("MotorEnabledJoint").New(todo)
	return MotorEnabledJointFromJSObject(p)
}

// TODO: methods
