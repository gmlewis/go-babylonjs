// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Vector2 represents a babylon.js Vector2.
// Class representing a vector containing 2 coordinates
type Vector2 struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (v *Vector2) JSObject() js.Value { return v.p }

// Vector2 returns a Vector2 JavaScript class.
func (b *Babylon) Vector2() *Vector2 {
	p := b.ctx.Get("Vector2")
	return Vector2FromJSObject(p)
}

// Vector2FromJSObject returns a wrapped Vector2 JavaScript class.
func Vector2FromJSObject(p js.Value) *Vector2 {
	return &Vector2{p: p}
}

// NewVector2Opts contains optional parameters for NewVector2.
type NewVector2Opts struct {
	X *float64

	Y *float64
}

// NewVector2 returns a new Vector2 object.
//
// https://doc.babylonjs.com/api/classes/babylon.vector2
func (b *Babylon) NewVector2(opts *NewVector2Opts) *Vector2 {
	if opts == nil {
		opts = &NewVector2Opts{}
	}

	p := b.ctx.Get("Vector2").New(opts.X, opts.Y)
	return Vector2FromJSObject(p)
}

// TODO: methods
