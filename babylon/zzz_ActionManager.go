// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ActionManager represents a babylon.js ActionManager.
// Action Manager manages all events to be triggered on a given mesh or the global scene.
// A single scene can have many Action Managers to handle predefined actions on specific meshes.
//
// See: http://doc.babylonjs.com/how_to/how_to_use_actions
type ActionManager struct{ *AbstractActionManager }

// JSObject returns the underlying js.Value.
func (a *ActionManager) JSObject() js.Value { return a.p }

// ActionManager returns a ActionManager JavaScript class.
func (b *Babylon) ActionManager() *ActionManager {
	p := b.ctx.Get("ActionManager")
	return ActionManagerFromJSObject(p)
}

// ActionManagerFromJSObject returns a wrapped ActionManager JavaScript class.
func ActionManagerFromJSObject(p js.Value) *ActionManager {
	return &ActionManager{AbstractActionManagerFromJSObject(p)}
}

// NewActionManager returns a new ActionManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.actionmanager
func (b *Babylon) NewActionManager(scene *Scene) *ActionManager {
	p := b.ctx.Get("ActionManager").New(scene.JSObject())
	return ActionManagerFromJSObject(p)
}

// TODO: methods
