// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// INode represents a babylon.js INode.
// Loader interface with additional members.
type INode struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *INode) JSObject() js.Value { return i.p }

// INode returns a INode JavaScript class.
func (ba *Babylon) INode() *INode {
	p := ba.ctx.Get("INode")
	return INodeFromJSObject(p, ba.ctx)
}

// INodeFromJSObject returns a wrapped INode JavaScript class.
func INodeFromJSObject(p js.Value, ctx js.Value) *INode {
	return &INode{p: p, ctx: ctx}
}

// INodeArrayToJSArray returns a JavaScript Array for the wrapped array.
func INodeArrayToJSArray(array []*INode) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Camera returns the Camera property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#camera
func (i *INode) Camera(camera float64) *INode {
	p := ba.ctx.Get("INode").New(camera)
	return INodeFromJSObject(p, ba.ctx)
}

// SetCamera sets the Camera property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#camera
func (i *INode) SetCamera(camera float64) *INode {
	p := ba.ctx.Get("INode").New(camera)
	return INodeFromJSObject(p, ba.ctx)
}

// Children returns the Children property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#children
func (i *INode) Children(children float64) *INode {
	p := ba.ctx.Get("INode").New(children)
	return INodeFromJSObject(p, ba.ctx)
}

// SetChildren sets the Children property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#children
func (i *INode) SetChildren(children float64) *INode {
	p := ba.ctx.Get("INode").New(children)
	return INodeFromJSObject(p, ba.ctx)
}

// Extensions returns the Extensions property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#extensions
func (i *INode) Extensions(extensions js.Value) *INode {
	p := ba.ctx.Get("INode").New(extensions)
	return INodeFromJSObject(p, ba.ctx)
}

// SetExtensions sets the Extensions property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#extensions
func (i *INode) SetExtensions(extensions js.Value) *INode {
	p := ba.ctx.Get("INode").New(extensions)
	return INodeFromJSObject(p, ba.ctx)
}

// Extras returns the Extras property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#extras
func (i *INode) Extras(extras interface{}) *INode {
	p := ba.ctx.Get("INode").New(extras)
	return INodeFromJSObject(p, ba.ctx)
}

// SetExtras sets the Extras property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#extras
func (i *INode) SetExtras(extras interface{}) *INode {
	p := ba.ctx.Get("INode").New(extras)
	return INodeFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#index
func (i *INode) Index(index float64) *INode {
	p := ba.ctx.Get("INode").New(index)
	return INodeFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#index
func (i *INode) SetIndex(index float64) *INode {
	p := ba.ctx.Get("INode").New(index)
	return INodeFromJSObject(p, ba.ctx)
}

// Matrix returns the Matrix property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#matrix
func (i *INode) Matrix(matrix float64) *INode {
	p := ba.ctx.Get("INode").New(matrix)
	return INodeFromJSObject(p, ba.ctx)
}

// SetMatrix sets the Matrix property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#matrix
func (i *INode) SetMatrix(matrix float64) *INode {
	p := ba.ctx.Get("INode").New(matrix)
	return INodeFromJSObject(p, ba.ctx)
}

// Mesh returns the Mesh property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#mesh
func (i *INode) Mesh(mesh float64) *INode {
	p := ba.ctx.Get("INode").New(mesh)
	return INodeFromJSObject(p, ba.ctx)
}

// SetMesh sets the Mesh property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#mesh
func (i *INode) SetMesh(mesh float64) *INode {
	p := ba.ctx.Get("INode").New(mesh)
	return INodeFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#name
func (i *INode) Name(name string) *INode {
	p := ba.ctx.Get("INode").New(name)
	return INodeFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#name
func (i *INode) SetName(name string) *INode {
	p := ba.ctx.Get("INode").New(name)
	return INodeFromJSObject(p, ba.ctx)
}

// Parent returns the Parent property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#parent
func (i *INode) Parent(parent *INode) *INode {
	p := ba.ctx.Get("INode").New(parent.JSObject())
	return INodeFromJSObject(p, ba.ctx)
}

// SetParent sets the Parent property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#parent
func (i *INode) SetParent(parent *INode) *INode {
	p := ba.ctx.Get("INode").New(parent.JSObject())
	return INodeFromJSObject(p, ba.ctx)
}

// Rotation returns the Rotation property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#rotation
func (i *INode) Rotation(rotation float64) *INode {
	p := ba.ctx.Get("INode").New(rotation)
	return INodeFromJSObject(p, ba.ctx)
}

// SetRotation sets the Rotation property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#rotation
func (i *INode) SetRotation(rotation float64) *INode {
	p := ba.ctx.Get("INode").New(rotation)
	return INodeFromJSObject(p, ba.ctx)
}

// Scale returns the Scale property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#scale
func (i *INode) Scale(scale float64) *INode {
	p := ba.ctx.Get("INode").New(scale)
	return INodeFromJSObject(p, ba.ctx)
}

// SetScale sets the Scale property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#scale
func (i *INode) SetScale(scale float64) *INode {
	p := ba.ctx.Get("INode").New(scale)
	return INodeFromJSObject(p, ba.ctx)
}

// Skin returns the Skin property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#skin
func (i *INode) Skin(skin float64) *INode {
	p := ba.ctx.Get("INode").New(skin)
	return INodeFromJSObject(p, ba.ctx)
}

// SetSkin sets the Skin property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#skin
func (i *INode) SetSkin(skin float64) *INode {
	p := ba.ctx.Get("INode").New(skin)
	return INodeFromJSObject(p, ba.ctx)
}

// Translation returns the Translation property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#translation
func (i *INode) Translation(translation float64) *INode {
	p := ba.ctx.Get("INode").New(translation)
	return INodeFromJSObject(p, ba.ctx)
}

// SetTranslation sets the Translation property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#translation
func (i *INode) SetTranslation(translation float64) *INode {
	p := ba.ctx.Get("INode").New(translation)
	return INodeFromJSObject(p, ba.ctx)
}

// Weights returns the Weights property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#weights
func (i *INode) Weights(weights float64) *INode {
	p := ba.ctx.Get("INode").New(weights)
	return INodeFromJSObject(p, ba.ctx)
}

// SetWeights sets the Weights property of class INode.
//
// https://doc.babylonjs.com/api/classes/babylon.inode#weights
func (i *INode) SetWeights(weights float64) *INode {
	p := ba.ctx.Get("INode").New(weights)
	return INodeFromJSObject(p, ba.ctx)
}

*/
