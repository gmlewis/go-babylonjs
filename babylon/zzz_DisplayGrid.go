// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// DisplayGrid represents a babylon.js DisplayGrid.
// Class used to render a grid
type DisplayGrid struct {
	*Control
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (d *DisplayGrid) JSObject() js.Value { return d.p }

// DisplayGrid returns a DisplayGrid JavaScript class.
func (ba *Babylon) DisplayGrid() *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid")
	return DisplayGridFromJSObject(p, ba.ctx)
}

// DisplayGridFromJSObject returns a wrapped DisplayGrid JavaScript class.
func DisplayGridFromJSObject(p js.Value, ctx js.Value) *DisplayGrid {
	return &DisplayGrid{Control: ControlFromJSObject(p, ctx), ctx: ctx}
}

// DisplayGridArrayToJSArray returns a JavaScript Array for the wrapped array.
func DisplayGridArrayToJSArray(array []*DisplayGrid) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewDisplayGridOpts contains optional parameters for NewDisplayGrid.
type NewDisplayGridOpts struct {
	Name *string
}

// NewDisplayGrid returns a new DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid
func (ba *Babylon) NewDisplayGrid(opts *NewDisplayGridOpts) *DisplayGrid {
	if opts == nil {
		opts = &NewDisplayGridOpts{}
	}

	args := make([]interface{}, 0, 0+1)

	if opts.Name == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Name)
	}

	p := ba.ctx.Get("DisplayGrid").New(args...)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Contains calls the Contains method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#contains
func (d *DisplayGrid) Contains(x float64, y float64) bool {

	args := make([]interface{}, 0, 2+0)

	args = append(args, x)
	args = append(args, y)

	retVal := d.p.Call("contains", args...)
	return retVal.Bool()
}

// Dispose calls the Dispose method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#dispose
func (d *DisplayGrid) Dispose() {

	d.p.Call("dispose")
}

// GetAscendantOfClass calls the GetAscendantOfClass method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#getascendantofclass
func (d *DisplayGrid) GetAscendantOfClass(className string) *Control {

	args := make([]interface{}, 0, 1+0)

	args = append(args, className)

	retVal := d.p.Call("getAscendantOfClass", args...)
	return ControlFromJSObject(retVal, d.ctx)
}

// GetClassName calls the GetClassName method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#getclassname
func (d *DisplayGrid) GetClassName() string {

	retVal := d.p.Call("getClassName")
	return retVal.String()
}

// DisplayGridGetDescendantsOpts contains optional parameters for DisplayGrid.GetDescendants.
type DisplayGridGetDescendantsOpts struct {
	DirectDescendantsOnly *bool
	Predicate             *func()
}

// GetDescendants calls the GetDescendants method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#getdescendants
func (d *DisplayGrid) GetDescendants(opts *DisplayGridGetDescendantsOpts) *Control {
	if opts == nil {
		opts = &DisplayGridGetDescendantsOpts{}
	}

	args := make([]interface{}, 0, 0+2)

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	retVal := d.p.Call("getDescendants", args...)
	return ControlFromJSObject(retVal, d.ctx)
}

// DisplayGridGetDescendantsToRefOpts contains optional parameters for DisplayGrid.GetDescendantsToRef.
type DisplayGridGetDescendantsToRefOpts struct {
	DirectDescendantsOnly *bool
	Predicate             *func()
}

// GetDescendantsToRef calls the GetDescendantsToRef method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#getdescendantstoref
func (d *DisplayGrid) GetDescendantsToRef(results *Control, opts *DisplayGridGetDescendantsToRefOpts) {
	if opts == nil {
		opts = &DisplayGridGetDescendantsToRefOpts{}
	}

	args := make([]interface{}, 0, 1+2)

	args = append(args, results.JSObject())

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	d.p.Call("getDescendantsToRef", args...)
}

// GetLocalCoordinates calls the GetLocalCoordinates method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#getlocalcoordinates
func (d *DisplayGrid) GetLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := d.p.Call("getLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, d.ctx)
}

// GetLocalCoordinatesToRef calls the GetLocalCoordinatesToRef method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#getlocalcoordinatestoref
func (d *DisplayGrid) GetLocalCoordinatesToRef(globalCoordinates *Vector2, result *Vector2) *Control {

	args := make([]interface{}, 0, 2+0)

	args = append(args, globalCoordinates.JSObject())
	args = append(args, result.JSObject())

	retVal := d.p.Call("getLocalCoordinatesToRef", args...)
	return ControlFromJSObject(retVal, d.ctx)
}

// GetParentLocalCoordinates calls the GetParentLocalCoordinates method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#getparentlocalcoordinates
func (d *DisplayGrid) GetParentLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := d.p.Call("getParentLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, d.ctx)
}

// IsAscendant calls the IsAscendant method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#isascendant
func (d *DisplayGrid) IsAscendant(container *Control) bool {

	args := make([]interface{}, 0, 1+0)

	args = append(args, container.JSObject())

	retVal := d.p.Call("isAscendant", args...)
	return retVal.Bool()
}

// LinkWithMesh calls the LinkWithMesh method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkwithmesh
func (d *DisplayGrid) LinkWithMesh(mesh *AbstractMesh) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, mesh.JSObject())

	d.p.Call("linkWithMesh", args...)
}

// MoveToVector3 calls the MoveToVector3 method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#movetovector3
func (d *DisplayGrid) MoveToVector3(position *Vector3, scene *Scene) {

	args := make([]interface{}, 0, 2+0)

	args = append(args, position.JSObject())
	args = append(args, scene.JSObject())

	d.p.Call("moveToVector3", args...)
}

// DisplayGrid_drawOpts contains optional parameters for DisplayGrid._draw.
type DisplayGrid_drawOpts struct {
	InvalidatedRectangle *Measure
}

// _draw calls the _draw method on the DisplayGrid object.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#_draw
func (d *DisplayGrid) _draw(context js.Value, opts *DisplayGrid_drawOpts) {
	if opts == nil {
		opts = &DisplayGrid_drawOpts{}
	}

	args := make([]interface{}, 0, 1+1)

	args = append(args, context)

	if opts.InvalidatedRectangle == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.InvalidatedRectangle.JSObject())
	}

	d.p.Call("_draw", args...)
}

/*

// AllowAlphaInheritance returns the AllowAlphaInheritance property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#allowalphainheritance
func (d *DisplayGrid) AllowAlphaInheritance(AllowAlphaInheritance bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(AllowAlphaInheritance)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetAllowAlphaInheritance sets the AllowAlphaInheritance property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#allowalphainheritance
func (d *DisplayGrid) SetAllowAlphaInheritance(AllowAlphaInheritance bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(AllowAlphaInheritance)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Alpha returns the Alpha property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#alpha
func (d *DisplayGrid) Alpha(alpha float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(alpha)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetAlpha sets the Alpha property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#alpha
func (d *DisplayGrid) SetAlpha(alpha float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(alpha)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Background returns the Background property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#background
func (d *DisplayGrid) Background(background string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(background)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetBackground sets the Background property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#background
func (d *DisplayGrid) SetBackground(background string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(background)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// CellHeight returns the CellHeight property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#cellheight
func (d *DisplayGrid) CellHeight(cellHeight float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(cellHeight)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetCellHeight sets the CellHeight property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#cellheight
func (d *DisplayGrid) SetCellHeight(cellHeight float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(cellHeight)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// CellWidth returns the CellWidth property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#cellwidth
func (d *DisplayGrid) CellWidth(cellWidth float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(cellWidth)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetCellWidth sets the CellWidth property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#cellwidth
func (d *DisplayGrid) SetCellWidth(cellWidth float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(cellWidth)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// CenterX returns the CenterX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#centerx
func (d *DisplayGrid) CenterX(centerX float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(centerX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetCenterX sets the CenterX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#centerx
func (d *DisplayGrid) SetCenterX(centerX float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(centerX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// CenterY returns the CenterY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#centery
func (d *DisplayGrid) CenterY(centerY float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(centerY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetCenterY sets the CenterY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#centery
func (d *DisplayGrid) SetCenterY(centerY float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(centerY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// ClipChildren returns the ClipChildren property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#clipchildren
func (d *DisplayGrid) ClipChildren(clipChildren bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(clipChildren)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetClipChildren sets the ClipChildren property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#clipchildren
func (d *DisplayGrid) SetClipChildren(clipChildren bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(clipChildren)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// ClipContent returns the ClipContent property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#clipcontent
func (d *DisplayGrid) ClipContent(clipContent bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(clipContent)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetClipContent sets the ClipContent property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#clipcontent
func (d *DisplayGrid) SetClipContent(clipContent bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(clipContent)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Color returns the Color property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#color
func (d *DisplayGrid) Color(color string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(color)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetColor sets the Color property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#color
func (d *DisplayGrid) SetColor(color string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(color)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// DisabledColor returns the DisabledColor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#disabledcolor
func (d *DisplayGrid) DisabledColor(disabledColor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(disabledColor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetDisabledColor sets the DisabledColor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#disabledcolor
func (d *DisplayGrid) SetDisabledColor(disabledColor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(disabledColor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// DisplayMajorLines returns the DisplayMajorLines property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#displaymajorlines
func (d *DisplayGrid) DisplayMajorLines(displayMajorLines bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(displayMajorLines)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetDisplayMajorLines sets the DisplayMajorLines property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#displaymajorlines
func (d *DisplayGrid) SetDisplayMajorLines(displayMajorLines bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(displayMajorLines)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// DisplayMinorLines returns the DisplayMinorLines property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#displayminorlines
func (d *DisplayGrid) DisplayMinorLines(displayMinorLines bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(displayMinorLines)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetDisplayMinorLines sets the DisplayMinorLines property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#displayminorlines
func (d *DisplayGrid) SetDisplayMinorLines(displayMinorLines bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(displayMinorLines)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// FontFamily returns the FontFamily property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontfamily
func (d *DisplayGrid) FontFamily(fontFamily string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontFamily)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetFontFamily sets the FontFamily property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontfamily
func (d *DisplayGrid) SetFontFamily(fontFamily string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontFamily)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// FontOffset returns the FontOffset property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontoffset
func (d *DisplayGrid) FontOffset(fontOffset js.Value) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontOffset)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetFontOffset sets the FontOffset property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontoffset
func (d *DisplayGrid) SetFontOffset(fontOffset js.Value) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontOffset)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// FontSize returns the FontSize property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontsize
func (d *DisplayGrid) FontSize(fontSize string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontSize)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetFontSize sets the FontSize property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontsize
func (d *DisplayGrid) SetFontSize(fontSize string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontSize)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// FontSizeInPixels returns the FontSizeInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontsizeinpixels
func (d *DisplayGrid) FontSizeInPixels(fontSizeInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontSizeInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetFontSizeInPixels sets the FontSizeInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontsizeinpixels
func (d *DisplayGrid) SetFontSizeInPixels(fontSizeInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontSizeInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// FontStyle returns the FontStyle property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontstyle
func (d *DisplayGrid) FontStyle(fontStyle string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontStyle)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetFontStyle sets the FontStyle property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontstyle
func (d *DisplayGrid) SetFontStyle(fontStyle string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontStyle)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// FontWeight returns the FontWeight property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontweight
func (d *DisplayGrid) FontWeight(fontWeight string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontWeight)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetFontWeight sets the FontWeight property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#fontweight
func (d *DisplayGrid) SetFontWeight(fontWeight string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(fontWeight)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_CENTER returns the HORIZONTAL_ALIGNMENT_CENTER property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#horizontal_alignment_center
func (d *DisplayGrid) HORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(HORIZONTAL_ALIGNMENT_CENTER)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_CENTER sets the HORIZONTAL_ALIGNMENT_CENTER property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#horizontal_alignment_center
func (d *DisplayGrid) SetHORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(HORIZONTAL_ALIGNMENT_CENTER)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_LEFT returns the HORIZONTAL_ALIGNMENT_LEFT property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#horizontal_alignment_left
func (d *DisplayGrid) HORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(HORIZONTAL_ALIGNMENT_LEFT)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_LEFT sets the HORIZONTAL_ALIGNMENT_LEFT property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#horizontal_alignment_left
func (d *DisplayGrid) SetHORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(HORIZONTAL_ALIGNMENT_LEFT)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_RIGHT returns the HORIZONTAL_ALIGNMENT_RIGHT property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#horizontal_alignment_right
func (d *DisplayGrid) HORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_RIGHT sets the HORIZONTAL_ALIGNMENT_RIGHT property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#horizontal_alignment_right
func (d *DisplayGrid) SetHORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Height returns the Height property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#height
func (d *DisplayGrid) Height(height string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(height)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetHeight sets the Height property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#height
func (d *DisplayGrid) SetHeight(height string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(height)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// HeightInPixels returns the HeightInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#heightinpixels
func (d *DisplayGrid) HeightInPixels(heightInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(heightInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetHeightInPixels sets the HeightInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#heightinpixels
func (d *DisplayGrid) SetHeightInPixels(heightInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(heightInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// HorizontalAlignment returns the HorizontalAlignment property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#horizontalalignment
func (d *DisplayGrid) HorizontalAlignment(horizontalAlignment float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(horizontalAlignment)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetHorizontalAlignment sets the HorizontalAlignment property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#horizontalalignment
func (d *DisplayGrid) SetHorizontalAlignment(horizontalAlignment float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(horizontalAlignment)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Host returns the Host property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#host
func (d *DisplayGrid) Host(host *AdvancedDynamicTexture) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(host.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetHost sets the Host property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#host
func (d *DisplayGrid) SetHost(host *AdvancedDynamicTexture) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(host.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// HoverCursor returns the HoverCursor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#hovercursor
func (d *DisplayGrid) HoverCursor(hoverCursor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(hoverCursor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetHoverCursor sets the HoverCursor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#hovercursor
func (d *DisplayGrid) SetHoverCursor(hoverCursor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(hoverCursor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// IsDirty returns the IsDirty property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#isdirty
func (d *DisplayGrid) IsDirty(isDirty bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isDirty)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetIsDirty sets the IsDirty property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#isdirty
func (d *DisplayGrid) SetIsDirty(isDirty bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isDirty)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// IsEnabled returns the IsEnabled property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#isenabled
func (d *DisplayGrid) IsEnabled(isEnabled bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isEnabled)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetIsEnabled sets the IsEnabled property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#isenabled
func (d *DisplayGrid) SetIsEnabled(isEnabled bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isEnabled)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// IsFocusInvisible returns the IsFocusInvisible property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#isfocusinvisible
func (d *DisplayGrid) IsFocusInvisible(isFocusInvisible bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isFocusInvisible)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetIsFocusInvisible sets the IsFocusInvisible property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#isfocusinvisible
func (d *DisplayGrid) SetIsFocusInvisible(isFocusInvisible bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isFocusInvisible)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// IsHighlighted returns the IsHighlighted property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#ishighlighted
func (d *DisplayGrid) IsHighlighted(isHighlighted bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isHighlighted)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetIsHighlighted sets the IsHighlighted property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#ishighlighted
func (d *DisplayGrid) SetIsHighlighted(isHighlighted bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isHighlighted)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// IsHitTestVisible returns the IsHitTestVisible property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#ishittestvisible
func (d *DisplayGrid) IsHitTestVisible(isHitTestVisible bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isHitTestVisible)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetIsHitTestVisible sets the IsHitTestVisible property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#ishittestvisible
func (d *DisplayGrid) SetIsHitTestVisible(isHitTestVisible bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isHitTestVisible)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// IsPointerBlocker returns the IsPointerBlocker property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#ispointerblocker
func (d *DisplayGrid) IsPointerBlocker(isPointerBlocker bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isPointerBlocker)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetIsPointerBlocker sets the IsPointerBlocker property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#ispointerblocker
func (d *DisplayGrid) SetIsPointerBlocker(isPointerBlocker bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isPointerBlocker)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// IsVisible returns the IsVisible property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#isvisible
func (d *DisplayGrid) IsVisible(isVisible bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isVisible)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetIsVisible sets the IsVisible property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#isvisible
func (d *DisplayGrid) SetIsVisible(isVisible bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(isVisible)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Left returns the Left property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#left
func (d *DisplayGrid) Left(left string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(left)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetLeft sets the Left property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#left
func (d *DisplayGrid) SetLeft(left string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(left)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// LeftInPixels returns the LeftInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#leftinpixels
func (d *DisplayGrid) LeftInPixels(leftInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(leftInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetLeftInPixels sets the LeftInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#leftinpixels
func (d *DisplayGrid) SetLeftInPixels(leftInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(leftInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// LinkOffsetX returns the LinkOffsetX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkoffsetx
func (d *DisplayGrid) LinkOffsetX(linkOffsetX string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkOffsetX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetLinkOffsetX sets the LinkOffsetX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkoffsetx
func (d *DisplayGrid) SetLinkOffsetX(linkOffsetX string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkOffsetX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// LinkOffsetXInPixels returns the LinkOffsetXInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkoffsetxinpixels
func (d *DisplayGrid) LinkOffsetXInPixels(linkOffsetXInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkOffsetXInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetLinkOffsetXInPixels sets the LinkOffsetXInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkoffsetxinpixels
func (d *DisplayGrid) SetLinkOffsetXInPixels(linkOffsetXInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkOffsetXInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// LinkOffsetY returns the LinkOffsetY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkoffsety
func (d *DisplayGrid) LinkOffsetY(linkOffsetY string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkOffsetY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetLinkOffsetY sets the LinkOffsetY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkoffsety
func (d *DisplayGrid) SetLinkOffsetY(linkOffsetY string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkOffsetY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// LinkOffsetYInPixels returns the LinkOffsetYInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkoffsetyinpixels
func (d *DisplayGrid) LinkOffsetYInPixels(linkOffsetYInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkOffsetYInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetLinkOffsetYInPixels sets the LinkOffsetYInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkoffsetyinpixels
func (d *DisplayGrid) SetLinkOffsetYInPixels(linkOffsetYInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkOffsetYInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// LinkedMesh returns the LinkedMesh property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkedmesh
func (d *DisplayGrid) LinkedMesh(linkedMesh *AbstractMesh) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkedMesh.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetLinkedMesh sets the LinkedMesh property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#linkedmesh
func (d *DisplayGrid) SetLinkedMesh(linkedMesh *AbstractMesh) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(linkedMesh.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// MajorLineColor returns the MajorLineColor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#majorlinecolor
func (d *DisplayGrid) MajorLineColor(majorLineColor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(majorLineColor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetMajorLineColor sets the MajorLineColor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#majorlinecolor
func (d *DisplayGrid) SetMajorLineColor(majorLineColor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(majorLineColor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// MajorLineFrequency returns the MajorLineFrequency property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#majorlinefrequency
func (d *DisplayGrid) MajorLineFrequency(majorLineFrequency float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(majorLineFrequency)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetMajorLineFrequency sets the MajorLineFrequency property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#majorlinefrequency
func (d *DisplayGrid) SetMajorLineFrequency(majorLineFrequency float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(majorLineFrequency)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// MajorLineTickness returns the MajorLineTickness property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#majorlinetickness
func (d *DisplayGrid) MajorLineTickness(majorLineTickness float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(majorLineTickness)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetMajorLineTickness sets the MajorLineTickness property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#majorlinetickness
func (d *DisplayGrid) SetMajorLineTickness(majorLineTickness float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(majorLineTickness)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Metadata returns the Metadata property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#metadata
func (d *DisplayGrid) Metadata(metadata interface{}) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(metadata)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetMetadata sets the Metadata property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#metadata
func (d *DisplayGrid) SetMetadata(metadata interface{}) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(metadata)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// MinorLineColor returns the MinorLineColor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#minorlinecolor
func (d *DisplayGrid) MinorLineColor(minorLineColor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(minorLineColor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetMinorLineColor sets the MinorLineColor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#minorlinecolor
func (d *DisplayGrid) SetMinorLineColor(minorLineColor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(minorLineColor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// MinorLineTickness returns the MinorLineTickness property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#minorlinetickness
func (d *DisplayGrid) MinorLineTickness(minorLineTickness float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(minorLineTickness)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetMinorLineTickness sets the MinorLineTickness property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#minorlinetickness
func (d *DisplayGrid) SetMinorLineTickness(minorLineTickness float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(minorLineTickness)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#name
func (d *DisplayGrid) Name(name string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(name)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#name
func (d *DisplayGrid) SetName(name string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(name)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// NotRenderable returns the NotRenderable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#notrenderable
func (d *DisplayGrid) NotRenderable(notRenderable bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(notRenderable)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetNotRenderable sets the NotRenderable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#notrenderable
func (d *DisplayGrid) SetNotRenderable(notRenderable bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(notRenderable)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// OnAfterDrawObservable returns the OnAfterDrawObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onafterdrawobservable
func (d *DisplayGrid) OnAfterDrawObservable(onAfterDrawObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onAfterDrawObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetOnAfterDrawObservable sets the OnAfterDrawObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onafterdrawobservable
func (d *DisplayGrid) SetOnAfterDrawObservable(onAfterDrawObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onAfterDrawObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// OnBeforeDrawObservable returns the OnBeforeDrawObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onbeforedrawobservable
func (d *DisplayGrid) OnBeforeDrawObservable(onBeforeDrawObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onBeforeDrawObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetOnBeforeDrawObservable sets the OnBeforeDrawObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onbeforedrawobservable
func (d *DisplayGrid) SetOnBeforeDrawObservable(onBeforeDrawObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onBeforeDrawObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// OnDirtyObservable returns the OnDirtyObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#ondirtyobservable
func (d *DisplayGrid) OnDirtyObservable(onDirtyObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onDirtyObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetOnDirtyObservable sets the OnDirtyObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#ondirtyobservable
func (d *DisplayGrid) SetOnDirtyObservable(onDirtyObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onDirtyObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// OnPointerClickObservable returns the OnPointerClickObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointerclickobservable
func (d *DisplayGrid) OnPointerClickObservable(onPointerClickObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerClickObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetOnPointerClickObservable sets the OnPointerClickObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointerclickobservable
func (d *DisplayGrid) SetOnPointerClickObservable(onPointerClickObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerClickObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// OnPointerDownObservable returns the OnPointerDownObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointerdownobservable
func (d *DisplayGrid) OnPointerDownObservable(onPointerDownObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerDownObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetOnPointerDownObservable sets the OnPointerDownObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointerdownobservable
func (d *DisplayGrid) SetOnPointerDownObservable(onPointerDownObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerDownObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// OnPointerEnterObservable returns the OnPointerEnterObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointerenterobservable
func (d *DisplayGrid) OnPointerEnterObservable(onPointerEnterObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerEnterObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetOnPointerEnterObservable sets the OnPointerEnterObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointerenterobservable
func (d *DisplayGrid) SetOnPointerEnterObservable(onPointerEnterObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerEnterObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// OnPointerMoveObservable returns the OnPointerMoveObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointermoveobservable
func (d *DisplayGrid) OnPointerMoveObservable(onPointerMoveObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerMoveObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetOnPointerMoveObservable sets the OnPointerMoveObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointermoveobservable
func (d *DisplayGrid) SetOnPointerMoveObservable(onPointerMoveObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerMoveObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// OnPointerOutObservable returns the OnPointerOutObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointeroutobservable
func (d *DisplayGrid) OnPointerOutObservable(onPointerOutObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerOutObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetOnPointerOutObservable sets the OnPointerOutObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointeroutobservable
func (d *DisplayGrid) SetOnPointerOutObservable(onPointerOutObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerOutObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// OnPointerUpObservable returns the OnPointerUpObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointerupobservable
func (d *DisplayGrid) OnPointerUpObservable(onPointerUpObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerUpObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetOnPointerUpObservable sets the OnPointerUpObservable property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#onpointerupobservable
func (d *DisplayGrid) SetOnPointerUpObservable(onPointerUpObservable *Observable) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(onPointerUpObservable.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// PaddingBottom returns the PaddingBottom property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingbottom
func (d *DisplayGrid) PaddingBottom(paddingBottom string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingBottom)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetPaddingBottom sets the PaddingBottom property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingbottom
func (d *DisplayGrid) SetPaddingBottom(paddingBottom string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingBottom)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// PaddingBottomInPixels returns the PaddingBottomInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingbottominpixels
func (d *DisplayGrid) PaddingBottomInPixels(paddingBottomInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingBottomInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetPaddingBottomInPixels sets the PaddingBottomInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingbottominpixels
func (d *DisplayGrid) SetPaddingBottomInPixels(paddingBottomInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingBottomInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// PaddingLeft returns the PaddingLeft property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingleft
func (d *DisplayGrid) PaddingLeft(paddingLeft string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingLeft)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetPaddingLeft sets the PaddingLeft property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingleft
func (d *DisplayGrid) SetPaddingLeft(paddingLeft string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingLeft)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// PaddingLeftInPixels returns the PaddingLeftInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingleftinpixels
func (d *DisplayGrid) PaddingLeftInPixels(paddingLeftInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingLeftInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetPaddingLeftInPixels sets the PaddingLeftInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingleftinpixels
func (d *DisplayGrid) SetPaddingLeftInPixels(paddingLeftInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingLeftInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// PaddingRight returns the PaddingRight property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingright
func (d *DisplayGrid) PaddingRight(paddingRight string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingRight)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetPaddingRight sets the PaddingRight property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingright
func (d *DisplayGrid) SetPaddingRight(paddingRight string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingRight)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// PaddingRightInPixels returns the PaddingRightInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingrightinpixels
func (d *DisplayGrid) PaddingRightInPixels(paddingRightInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingRightInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetPaddingRightInPixels sets the PaddingRightInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingrightinpixels
func (d *DisplayGrid) SetPaddingRightInPixels(paddingRightInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingRightInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// PaddingTop returns the PaddingTop property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingtop
func (d *DisplayGrid) PaddingTop(paddingTop string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingTop)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetPaddingTop sets the PaddingTop property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingtop
func (d *DisplayGrid) SetPaddingTop(paddingTop string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingTop)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// PaddingTopInPixels returns the PaddingTopInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingtopinpixels
func (d *DisplayGrid) PaddingTopInPixels(paddingTopInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingTopInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetPaddingTopInPixels sets the PaddingTopInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#paddingtopinpixels
func (d *DisplayGrid) SetPaddingTopInPixels(paddingTopInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(paddingTopInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Parent returns the Parent property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#parent
func (d *DisplayGrid) Parent(parent *Container) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(parent.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetParent sets the Parent property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#parent
func (d *DisplayGrid) SetParent(parent *Container) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(parent.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Rotation returns the Rotation property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#rotation
func (d *DisplayGrid) Rotation(rotation float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(rotation)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetRotation sets the Rotation property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#rotation
func (d *DisplayGrid) SetRotation(rotation float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(rotation)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// ScaleX returns the ScaleX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#scalex
func (d *DisplayGrid) ScaleX(scaleX float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(scaleX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetScaleX sets the ScaleX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#scalex
func (d *DisplayGrid) SetScaleX(scaleX float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(scaleX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// ScaleY returns the ScaleY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#scaley
func (d *DisplayGrid) ScaleY(scaleY float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(scaleY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetScaleY sets the ScaleY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#scaley
func (d *DisplayGrid) SetScaleY(scaleY float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(scaleY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// ShadowBlur returns the ShadowBlur property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#shadowblur
func (d *DisplayGrid) ShadowBlur(shadowBlur float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(shadowBlur)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetShadowBlur sets the ShadowBlur property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#shadowblur
func (d *DisplayGrid) SetShadowBlur(shadowBlur float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(shadowBlur)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// ShadowColor returns the ShadowColor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#shadowcolor
func (d *DisplayGrid) ShadowColor(shadowColor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(shadowColor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetShadowColor sets the ShadowColor property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#shadowcolor
func (d *DisplayGrid) SetShadowColor(shadowColor string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(shadowColor)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// ShadowOffsetX returns the ShadowOffsetX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#shadowoffsetx
func (d *DisplayGrid) ShadowOffsetX(shadowOffsetX float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(shadowOffsetX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetShadowOffsetX sets the ShadowOffsetX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#shadowoffsetx
func (d *DisplayGrid) SetShadowOffsetX(shadowOffsetX float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(shadowOffsetX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// ShadowOffsetY returns the ShadowOffsetY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#shadowoffsety
func (d *DisplayGrid) ShadowOffsetY(shadowOffsetY float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(shadowOffsetY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetShadowOffsetY sets the ShadowOffsetY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#shadowoffsety
func (d *DisplayGrid) SetShadowOffsetY(shadowOffsetY float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(shadowOffsetY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Style returns the Style property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#style
func (d *DisplayGrid) Style(style *Style) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(style.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetStyle sets the Style property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#style
func (d *DisplayGrid) SetStyle(style *Style) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(style.JSObject())
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Top returns the Top property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#top
func (d *DisplayGrid) Top(top string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(top)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetTop sets the Top property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#top
func (d *DisplayGrid) SetTop(top string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(top)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// TopInPixels returns the TopInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#topinpixels
func (d *DisplayGrid) TopInPixels(topInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(topInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetTopInPixels sets the TopInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#topinpixels
func (d *DisplayGrid) SetTopInPixels(topInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(topInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// TransformCenterX returns the TransformCenterX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#transformcenterx
func (d *DisplayGrid) TransformCenterX(transformCenterX float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(transformCenterX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetTransformCenterX sets the TransformCenterX property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#transformcenterx
func (d *DisplayGrid) SetTransformCenterX(transformCenterX float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(transformCenterX)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// TransformCenterY returns the TransformCenterY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#transformcentery
func (d *DisplayGrid) TransformCenterY(transformCenterY float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(transformCenterY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetTransformCenterY sets the TransformCenterY property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#transformcentery
func (d *DisplayGrid) SetTransformCenterY(transformCenterY float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(transformCenterY)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// TypeName returns the TypeName property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#typename
func (d *DisplayGrid) TypeName(typeName string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(typeName)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetTypeName sets the TypeName property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#typename
func (d *DisplayGrid) SetTypeName(typeName string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(typeName)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// UniqueId returns the UniqueId property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#uniqueid
func (d *DisplayGrid) UniqueId(uniqueId float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(uniqueId)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetUniqueId sets the UniqueId property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#uniqueid
func (d *DisplayGrid) SetUniqueId(uniqueId float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(uniqueId)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// UseBitmapCache returns the UseBitmapCache property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#usebitmapcache
func (d *DisplayGrid) UseBitmapCache(useBitmapCache bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(useBitmapCache)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetUseBitmapCache sets the UseBitmapCache property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#usebitmapcache
func (d *DisplayGrid) SetUseBitmapCache(useBitmapCache bool) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(useBitmapCache)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_BOTTOM returns the VERTICAL_ALIGNMENT_BOTTOM property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#vertical_alignment_bottom
func (d *DisplayGrid) VERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(VERTICAL_ALIGNMENT_BOTTOM)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_BOTTOM sets the VERTICAL_ALIGNMENT_BOTTOM property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#vertical_alignment_bottom
func (d *DisplayGrid) SetVERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(VERTICAL_ALIGNMENT_BOTTOM)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_CENTER returns the VERTICAL_ALIGNMENT_CENTER property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#vertical_alignment_center
func (d *DisplayGrid) VERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(VERTICAL_ALIGNMENT_CENTER)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_CENTER sets the VERTICAL_ALIGNMENT_CENTER property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#vertical_alignment_center
func (d *DisplayGrid) SetVERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(VERTICAL_ALIGNMENT_CENTER)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_TOP returns the VERTICAL_ALIGNMENT_TOP property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#vertical_alignment_top
func (d *DisplayGrid) VERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(VERTICAL_ALIGNMENT_TOP)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_TOP sets the VERTICAL_ALIGNMENT_TOP property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#vertical_alignment_top
func (d *DisplayGrid) SetVERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(VERTICAL_ALIGNMENT_TOP)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// VerticalAlignment returns the VerticalAlignment property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#verticalalignment
func (d *DisplayGrid) VerticalAlignment(verticalAlignment float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(verticalAlignment)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetVerticalAlignment sets the VerticalAlignment property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#verticalalignment
func (d *DisplayGrid) SetVerticalAlignment(verticalAlignment float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(verticalAlignment)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// Width returns the Width property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#width
func (d *DisplayGrid) Width(width string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(width)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetWidth sets the Width property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#width
func (d *DisplayGrid) SetWidth(width string) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(width)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// WidthInPixels returns the WidthInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#widthinpixels
func (d *DisplayGrid) WidthInPixels(widthInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(widthInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetWidthInPixels sets the WidthInPixels property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#widthinpixels
func (d *DisplayGrid) SetWidthInPixels(widthInPixels float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(widthInPixels)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// ZIndex returns the ZIndex property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#zindex
func (d *DisplayGrid) ZIndex(zIndex float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(zIndex)
	return DisplayGridFromJSObject(p, ba.ctx)
}

// SetZIndex sets the ZIndex property of class DisplayGrid.
//
// https://doc.babylonjs.com/api/classes/babylon.displaygrid#zindex
func (d *DisplayGrid) SetZIndex(zIndex float64) *DisplayGrid {
	p := ba.ctx.Get("DisplayGrid").New(zIndex)
	return DisplayGridFromJSObject(p, ba.ctx)
}

*/
