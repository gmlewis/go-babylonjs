// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PositionGizmo represents a babylon.js PositionGizmo.
// Gizmo that enables dragging a mesh along 3 axis
type PositionGizmo struct {
	*Gizmo
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (p *PositionGizmo) JSObject() js.Value { return p.p }

// PositionGizmo returns a PositionGizmo JavaScript class.
func (ba *Babylon) PositionGizmo() *PositionGizmo {
	p := ba.ctx.Get("PositionGizmo")
	return PositionGizmoFromJSObject(p, ba.ctx)
}

// PositionGizmoFromJSObject returns a wrapped PositionGizmo JavaScript class.
func PositionGizmoFromJSObject(p js.Value, ctx js.Value) *PositionGizmo {
	return &PositionGizmo{Gizmo: GizmoFromJSObject(p, ctx), ctx: ctx}
}

// NewPositionGizmoOpts contains optional parameters for NewPositionGizmo.
type NewPositionGizmoOpts struct {
	GizmoLayer *UtilityLayerRenderer
}

// NewPositionGizmo returns a new PositionGizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.positiongizmo
func (ba *Babylon) NewPositionGizmo(opts *NewPositionGizmoOpts) *PositionGizmo {
	if opts == nil {
		opts = &NewPositionGizmoOpts{}
	}

	p := ba.ctx.Get("PositionGizmo").New(opts.GizmoLayer.JSObject())
	return PositionGizmoFromJSObject(p, ba.ctx)
}

// TODO: methods
