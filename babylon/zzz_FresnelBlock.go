// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// FresnelBlock represents a babylon.js FresnelBlock.
// Block used to compute fresnel value
type FresnelBlock struct {
	*NodeMaterialBlock
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (f *FresnelBlock) JSObject() js.Value { return f.p }

// FresnelBlock returns a FresnelBlock JavaScript class.
func (ba *Babylon) FresnelBlock() *FresnelBlock {
	p := ba.ctx.Get("FresnelBlock")
	return FresnelBlockFromJSObject(p, ba.ctx)
}

// FresnelBlockFromJSObject returns a wrapped FresnelBlock JavaScript class.
func FresnelBlockFromJSObject(p js.Value, ctx js.Value) *FresnelBlock {
	return &FresnelBlock{NodeMaterialBlock: NodeMaterialBlockFromJSObject(p, ctx), ctx: ctx}
}

// FresnelBlockArrayToJSArray returns a JavaScript Array for the wrapped array.
func FresnelBlockArrayToJSArray(array []*FresnelBlock) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewFresnelBlock returns a new FresnelBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock
func (ba *Babylon) NewFresnelBlock(name string) *FresnelBlock {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	p := ba.ctx.Get("FresnelBlock").New(args...)
	return FresnelBlockFromJSObject(p, ba.ctx)
}

// AutoConfigure calls the AutoConfigure method on the FresnelBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#autoconfigure
func (f *FresnelBlock) AutoConfigure(material *NodeMaterial) {

	args := make([]interface{}, 0, 1+0)

	if material == nil {
		args = append(args, js.Null())
	} else {
		args = append(args, material.JSObject())
	}

	f.p.Call("autoConfigure", args...)
}

// GetClassName calls the GetClassName method on the FresnelBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#getclassname
func (f *FresnelBlock) GetClassName() string {

	retVal := f.p.Call("getClassName")
	return retVal.String()
}

// Bias returns the Bias property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#bias
func (f *FresnelBlock) Bias() *NodeMaterialConnectionPoint {
	retVal := f.p.Get("bias")
	return NodeMaterialConnectionPointFromJSObject(retVal, f.ctx)
}

// SetBias sets the Bias property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#bias
func (f *FresnelBlock) SetBias(bias *NodeMaterialConnectionPoint) *FresnelBlock {
	f.p.Set("bias", bias.JSObject())
	return f
}

// Fresnel returns the Fresnel property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#fresnel
func (f *FresnelBlock) Fresnel() *NodeMaterialConnectionPoint {
	retVal := f.p.Get("fresnel")
	return NodeMaterialConnectionPointFromJSObject(retVal, f.ctx)
}

// SetFresnel sets the Fresnel property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#fresnel
func (f *FresnelBlock) SetFresnel(fresnel *NodeMaterialConnectionPoint) *FresnelBlock {
	f.p.Set("fresnel", fresnel.JSObject())
	return f
}

// Power returns the Power property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#power
func (f *FresnelBlock) Power() *NodeMaterialConnectionPoint {
	retVal := f.p.Get("power")
	return NodeMaterialConnectionPointFromJSObject(retVal, f.ctx)
}

// SetPower sets the Power property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#power
func (f *FresnelBlock) SetPower(power *NodeMaterialConnectionPoint) *FresnelBlock {
	f.p.Set("power", power.JSObject())
	return f
}

// ViewDirection returns the ViewDirection property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#viewdirection
func (f *FresnelBlock) ViewDirection() *NodeMaterialConnectionPoint {
	retVal := f.p.Get("viewDirection")
	return NodeMaterialConnectionPointFromJSObject(retVal, f.ctx)
}

// SetViewDirection sets the ViewDirection property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#viewdirection
func (f *FresnelBlock) SetViewDirection(viewDirection *NodeMaterialConnectionPoint) *FresnelBlock {
	f.p.Set("viewDirection", viewDirection.JSObject())
	return f
}

// WorldNormal returns the WorldNormal property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#worldnormal
func (f *FresnelBlock) WorldNormal() *NodeMaterialConnectionPoint {
	retVal := f.p.Get("worldNormal")
	return NodeMaterialConnectionPointFromJSObject(retVal, f.ctx)
}

// SetWorldNormal sets the WorldNormal property of class FresnelBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelblock#worldnormal
func (f *FresnelBlock) SetWorldNormal(worldNormal *NodeMaterialConnectionPoint) *FresnelBlock {
	f.p.Set("worldNormal", worldNormal.JSObject())
	return f
}
