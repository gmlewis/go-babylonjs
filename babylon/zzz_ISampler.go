// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ISampler represents a babylon.js ISampler.
// Loader interface with additional members.
type ISampler struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *ISampler) JSObject() js.Value { return i.p }

// ISampler returns a ISampler JavaScript class.
func (ba *Babylon) ISampler() *ISampler {
	p := ba.ctx.Get("ISampler")
	return ISamplerFromJSObject(p, ba.ctx)
}

// ISamplerFromJSObject returns a wrapped ISampler JavaScript class.
func ISamplerFromJSObject(p js.Value, ctx js.Value) *ISampler {
	return &ISampler{p: p, ctx: ctx}
}

// ISamplerArrayToJSArray returns a JavaScript Array for the wrapped array.
func ISamplerArrayToJSArray(array []*ISampler) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}
