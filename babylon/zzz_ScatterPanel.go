// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ScatterPanel represents a babylon.js ScatterPanel.
// Class used to create a container panel where items get randomized planar mapping
type ScatterPanel struct {
	*VolumeBasedPanel
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (s *ScatterPanel) JSObject() js.Value { return s.p }

// ScatterPanel returns a ScatterPanel JavaScript class.
func (ba *Babylon) ScatterPanel() *ScatterPanel {
	p := ba.ctx.Get("ScatterPanel")
	return ScatterPanelFromJSObject(p, ba.ctx)
}

// ScatterPanelFromJSObject returns a wrapped ScatterPanel JavaScript class.
func ScatterPanelFromJSObject(p js.Value, ctx js.Value) *ScatterPanel {
	return &ScatterPanel{VolumeBasedPanel: VolumeBasedPanelFromJSObject(p, ctx), ctx: ctx}
}

// NewScatterPanel returns a new ScatterPanel object.
//
// https://doc.babylonjs.com/api/classes/babylon.scatterpanel
func (ba *Babylon) NewScatterPanel() *ScatterPanel {
	p := ba.ctx.Get("ScatterPanel").New()
	return ScatterPanelFromJSObject(p, ba.ctx)
}

// TODO: methods
