// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// RawTexture3D represents a babylon.js RawTexture3D.
// Class used to store 3D textures containing user data
type RawTexture3D struct {
	*Texture
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (r *RawTexture3D) JSObject() js.Value { return r.p }

// RawTexture3D returns a RawTexture3D JavaScript class.
func (ba *Babylon) RawTexture3D() *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D")
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// RawTexture3DFromJSObject returns a wrapped RawTexture3D JavaScript class.
func RawTexture3DFromJSObject(p js.Value, ctx js.Value) *RawTexture3D {
	return &RawTexture3D{Texture: TextureFromJSObject(p, ctx), ctx: ctx}
}

// RawTexture3DArrayToJSArray returns a JavaScript Array for the wrapped array.
func RawTexture3DArrayToJSArray(array []*RawTexture3D) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewRawTexture3DOpts contains optional parameters for NewRawTexture3D.
type NewRawTexture3DOpts struct {
	GenerateMipMaps *bool
	InvertY         *bool
	SamplingMode    *float64
	TextureType     *float64
}

// NewRawTexture3D returns a new RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d
func (ba *Babylon) NewRawTexture3D(data js.Value, width float64, height float64, depth float64, format float64, scene *Scene, opts *NewRawTexture3DOpts) *RawTexture3D {
	if opts == nil {
		opts = &NewRawTexture3DOpts{}
	}

	args := make([]interface{}, 0, 6+4)

	args = append(args, data)
	args = append(args, width)
	args = append(args, height)
	args = append(args, depth)
	args = append(args, format)
	args = append(args, scene.JSObject())

	if opts.GenerateMipMaps == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.GenerateMipMaps)
	}
	if opts.InvertY == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.InvertY)
	}
	if opts.SamplingMode == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.SamplingMode)
	}
	if opts.TextureType == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.TextureType)
	}

	p := ba.ctx.Get("RawTexture3D").New(args...)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// Clone calls the Clone method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#clone
func (r *RawTexture3D) Clone() *Texture {

	retVal := r.p.Call("clone")
	return TextureFromJSObject(retVal, r.ctx)
}

// RawTexture3DCreateFromBase64StringOpts contains optional parameters for RawTexture3D.CreateFromBase64String.
type RawTexture3DCreateFromBase64StringOpts struct {
	NoMipmap     *bool
	InvertY      *bool
	SamplingMode *float64
	OnLoad       func()
	OnError      func()
	Format       *float64
}

// CreateFromBase64String calls the CreateFromBase64String method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#createfrombase64string
func (r *RawTexture3D) CreateFromBase64String(data string, name string, scene *Scene, opts *RawTexture3DCreateFromBase64StringOpts) *Texture {
	if opts == nil {
		opts = &RawTexture3DCreateFromBase64StringOpts{}
	}

	args := make([]interface{}, 0, 3+6)

	args = append(args, data)
	args = append(args, name)
	args = append(args, scene.JSObject())

	if opts.NoMipmap == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.NoMipmap)
	}
	if opts.InvertY == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.InvertY)
	}
	if opts.SamplingMode == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.SamplingMode)
	}
	if opts.OnLoad == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.OnLoad)
	}
	if opts.OnError == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.OnError)
	}
	if opts.Format == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Format)
	}

	retVal := r.p.Call("CreateFromBase64String", args...)
	return TextureFromJSObject(retVal, r.ctx)
}

// Dispose calls the Dispose method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#dispose
func (r *RawTexture3D) Dispose() {

	r.p.Call("dispose")
}

// GetBaseSize calls the GetBaseSize method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#getbasesize
func (r *RawTexture3D) GetBaseSize() *ISize {

	retVal := r.p.Call("getBaseSize")
	return ISizeFromJSObject(retVal, r.ctx)
}

// GetClassName calls the GetClassName method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#getclassname
func (r *RawTexture3D) GetClassName() string {

	retVal := r.p.Call("getClassName")
	return retVal.String()
}

// GetInternalTexture calls the GetInternalTexture method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#getinternaltexture
func (r *RawTexture3D) GetInternalTexture() *InternalTexture {

	retVal := r.p.Call("getInternalTexture")
	return InternalTextureFromJSObject(retVal, r.ctx)
}

// GetReflectionTextureMatrix calls the GetReflectionTextureMatrix method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#getreflectiontexturematrix
func (r *RawTexture3D) GetReflectionTextureMatrix() *Matrix {

	retVal := r.p.Call("getReflectionTextureMatrix")
	return MatrixFromJSObject(retVal, r.ctx)
}

// GetScene calls the GetScene method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#getscene
func (r *RawTexture3D) GetScene() *Scene {

	retVal := r.p.Call("getScene")
	return SceneFromJSObject(retVal, r.ctx)
}

// GetSize calls the GetSize method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#getsize
func (r *RawTexture3D) GetSize() *ISize {

	retVal := r.p.Call("getSize")
	return ISizeFromJSObject(retVal, r.ctx)
}

// RawTexture3DGetTextureMatrixOpts contains optional parameters for RawTexture3D.GetTextureMatrix.
type RawTexture3DGetTextureMatrixOpts struct {
	UBase *float64
}

// GetTextureMatrix calls the GetTextureMatrix method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#gettexturematrix
func (r *RawTexture3D) GetTextureMatrix(opts *RawTexture3DGetTextureMatrixOpts) *Matrix {
	if opts == nil {
		opts = &RawTexture3DGetTextureMatrixOpts{}
	}

	args := make([]interface{}, 0, 0+1)

	if opts.UBase == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.UBase)
	}

	retVal := r.p.Call("getTextureMatrix", args...)
	return MatrixFromJSObject(retVal, r.ctx)
}

// IsReady calls the IsReady method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#isready
func (r *RawTexture3D) IsReady() bool {

	retVal := r.p.Call("isReady")
	return retVal.Bool()
}

// IsReadyOrNotBlocking calls the IsReadyOrNotBlocking method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#isreadyornotblocking
func (r *RawTexture3D) IsReadyOrNotBlocking() bool {

	retVal := r.p.Call("isReadyOrNotBlocking")
	return retVal.Bool()
}

// RawTexture3DLoadFromDataStringOpts contains optional parameters for RawTexture3D.LoadFromDataString.
type RawTexture3DLoadFromDataStringOpts struct {
	DeleteBuffer *bool
	NoMipmap     *bool
	InvertY      *bool
	SamplingMode *float64
	OnLoad       func()
	OnError      func()
	Format       *float64
}

// LoadFromDataString calls the LoadFromDataString method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#loadfromdatastring
func (r *RawTexture3D) LoadFromDataString(name string, buffer interface{}, scene *Scene, opts *RawTexture3DLoadFromDataStringOpts) *Texture {
	if opts == nil {
		opts = &RawTexture3DLoadFromDataStringOpts{}
	}

	args := make([]interface{}, 0, 3+7)

	args = append(args, name)
	args = append(args, buffer)
	args = append(args, scene.JSObject())

	if opts.DeleteBuffer == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DeleteBuffer)
	}
	if opts.NoMipmap == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.NoMipmap)
	}
	if opts.InvertY == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.InvertY)
	}
	if opts.SamplingMode == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.SamplingMode)
	}
	if opts.OnLoad == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.OnLoad)
	}
	if opts.OnError == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.OnError)
	}
	if opts.Format == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Format)
	}

	retVal := r.p.Call("LoadFromDataString", args...)
	return TextureFromJSObject(retVal, r.ctx)
}

// Parse calls the Parse method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#parse
func (r *RawTexture3D) Parse(parsedTexture interface{}, scene *Scene, rootUrl string) *BaseTexture {

	args := make([]interface{}, 0, 3+0)

	args = append(args, parsedTexture)
	args = append(args, scene.JSObject())
	args = append(args, rootUrl)

	retVal := r.p.Call("Parse", args...)
	return BaseTextureFromJSObject(retVal, r.ctx)
}

// RawTexture3DReadPixelsOpts contains optional parameters for RawTexture3D.ReadPixels.
type RawTexture3DReadPixelsOpts struct {
	FaceIndex *float64
	Level     *float64
	Buffer    js.Value
}

// ReadPixels calls the ReadPixels method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#readpixels
func (r *RawTexture3D) ReadPixels(opts *RawTexture3DReadPixelsOpts) js.Value {
	if opts == nil {
		opts = &RawTexture3DReadPixelsOpts{}
	}

	args := make([]interface{}, 0, 0+3)

	if opts.FaceIndex == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.FaceIndex)
	}
	if opts.Level == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Level)
	}
	args = append(args, opts.Buffer)

	retVal := r.p.Call("readPixels", args...)
	return retVal
}

// ReleaseInternalTexture calls the ReleaseInternalTexture method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#releaseinternaltexture
func (r *RawTexture3D) ReleaseInternalTexture() {

	r.p.Call("releaseInternalTexture")
}

// Scale calls the Scale method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#scale
func (r *RawTexture3D) Scale(ratio float64) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, ratio)

	r.p.Call("scale", args...)
}

// Serialize calls the Serialize method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#serialize
func (r *RawTexture3D) Serialize() interface{} {

	retVal := r.p.Call("serialize")
	return retVal
}

// ToString calls the ToString method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#tostring
func (r *RawTexture3D) ToString() string {

	retVal := r.p.Call("toString")
	return retVal.String()
}

// Update calls the Update method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#update
func (r *RawTexture3D) Update(data js.Value) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, data)

	r.p.Call("update", args...)
}

// UpdateSamplingMode calls the UpdateSamplingMode method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#updatesamplingmode
func (r *RawTexture3D) UpdateSamplingMode(samplingMode float64) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, samplingMode)

	r.p.Call("updateSamplingMode", args...)
}

// RawTexture3DUpdateURLOpts contains optional parameters for RawTexture3D.UpdateURL.
type RawTexture3DUpdateURLOpts struct {
	Buffer *string
	OnLoad func()
}

// UpdateURL calls the UpdateURL method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#updateurl
func (r *RawTexture3D) UpdateURL(url string, opts *RawTexture3DUpdateURLOpts) {
	if opts == nil {
		opts = &RawTexture3DUpdateURLOpts{}
	}

	args := make([]interface{}, 0, 1+2)

	args = append(args, url)

	if opts.Buffer == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Buffer)
	}
	if opts.OnLoad == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.OnLoad)
	}

	r.p.Call("updateURL", args...)
}

// WhenAllReady calls the WhenAllReady method on the RawTexture3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#whenallready
func (r *RawTexture3D) WhenAllReady(textures *BaseTexture, callback func()) {

	args := make([]interface{}, 0, 2+0)

	args = append(args, textures.JSObject())
	args = append(args, js.FuncOf(func(this js.Value, args []js.Value) interface{} { callback(); return nil }))

	r.p.Call("WhenAllReady", args...)
}

/*

// Animations returns the Animations property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#animations
func (r *RawTexture3D) Animations(animations *Animation) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(animations.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetAnimations sets the Animations property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#animations
func (r *RawTexture3D) SetAnimations(animations *Animation) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(animations.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// AnisotropicFilteringLevel returns the AnisotropicFilteringLevel property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#anisotropicfilteringlevel
func (r *RawTexture3D) AnisotropicFilteringLevel(anisotropicFilteringLevel float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(anisotropicFilteringLevel)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetAnisotropicFilteringLevel sets the AnisotropicFilteringLevel property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#anisotropicfilteringlevel
func (r *RawTexture3D) SetAnisotropicFilteringLevel(anisotropicFilteringLevel float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(anisotropicFilteringLevel)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// BILINEAR_SAMPLINGMODE returns the BILINEAR_SAMPLINGMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#bilinear_samplingmode
func (r *RawTexture3D) BILINEAR_SAMPLINGMODE(BILINEAR_SAMPLINGMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(BILINEAR_SAMPLINGMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetBILINEAR_SAMPLINGMODE sets the BILINEAR_SAMPLINGMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#bilinear_samplingmode
func (r *RawTexture3D) SetBILINEAR_SAMPLINGMODE(BILINEAR_SAMPLINGMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(BILINEAR_SAMPLINGMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// CLAMP_ADDRESSMODE returns the CLAMP_ADDRESSMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#clamp_addressmode
func (r *RawTexture3D) CLAMP_ADDRESSMODE(CLAMP_ADDRESSMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(CLAMP_ADDRESSMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetCLAMP_ADDRESSMODE sets the CLAMP_ADDRESSMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#clamp_addressmode
func (r *RawTexture3D) SetCLAMP_ADDRESSMODE(CLAMP_ADDRESSMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(CLAMP_ADDRESSMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// CUBIC_MODE returns the CUBIC_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#cubic_mode
func (r *RawTexture3D) CUBIC_MODE(CUBIC_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(CUBIC_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetCUBIC_MODE sets the CUBIC_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#cubic_mode
func (r *RawTexture3D) SetCUBIC_MODE(CUBIC_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(CUBIC_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// CanRescale returns the CanRescale property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#canrescale
func (r *RawTexture3D) CanRescale(canRescale bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(canRescale)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetCanRescale sets the CanRescale property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#canrescale
func (r *RawTexture3D) SetCanRescale(canRescale bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(canRescale)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// CoordinatesIndex returns the CoordinatesIndex property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#coordinatesindex
func (r *RawTexture3D) CoordinatesIndex(coordinatesIndex float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(coordinatesIndex)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetCoordinatesIndex sets the CoordinatesIndex property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#coordinatesindex
func (r *RawTexture3D) SetCoordinatesIndex(coordinatesIndex float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(coordinatesIndex)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// CoordinatesMode returns the CoordinatesMode property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#coordinatesmode
func (r *RawTexture3D) CoordinatesMode(coordinatesMode float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(coordinatesMode)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetCoordinatesMode sets the CoordinatesMode property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#coordinatesmode
func (r *RawTexture3D) SetCoordinatesMode(coordinatesMode float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(coordinatesMode)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// DEFAULT_ANISOTROPIC_FILTERING_LEVEL returns the DEFAULT_ANISOTROPIC_FILTERING_LEVEL property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#default_anisotropic_filtering_level
func (r *RawTexture3D) DEFAULT_ANISOTROPIC_FILTERING_LEVEL(DEFAULT_ANISOTROPIC_FILTERING_LEVEL float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(DEFAULT_ANISOTROPIC_FILTERING_LEVEL)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetDEFAULT_ANISOTROPIC_FILTERING_LEVEL sets the DEFAULT_ANISOTROPIC_FILTERING_LEVEL property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#default_anisotropic_filtering_level
func (r *RawTexture3D) SetDEFAULT_ANISOTROPIC_FILTERING_LEVEL(DEFAULT_ANISOTROPIC_FILTERING_LEVEL float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(DEFAULT_ANISOTROPIC_FILTERING_LEVEL)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// DelayLoadState returns the DelayLoadState property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#delayloadstate
func (r *RawTexture3D) DelayLoadState(delayLoadState float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(delayLoadState)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetDelayLoadState sets the DelayLoadState property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#delayloadstate
func (r *RawTexture3D) SetDelayLoadState(delayLoadState float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(delayLoadState)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// EQUIRECTANGULAR_MODE returns the EQUIRECTANGULAR_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#equirectangular_mode
func (r *RawTexture3D) EQUIRECTANGULAR_MODE(EQUIRECTANGULAR_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(EQUIRECTANGULAR_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetEQUIRECTANGULAR_MODE sets the EQUIRECTANGULAR_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#equirectangular_mode
func (r *RawTexture3D) SetEQUIRECTANGULAR_MODE(EQUIRECTANGULAR_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(EQUIRECTANGULAR_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// EXPLICIT_MODE returns the EXPLICIT_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#explicit_mode
func (r *RawTexture3D) EXPLICIT_MODE(EXPLICIT_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(EXPLICIT_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetEXPLICIT_MODE sets the EXPLICIT_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#explicit_mode
func (r *RawTexture3D) SetEXPLICIT_MODE(EXPLICIT_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(EXPLICIT_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// FIXED_EQUIRECTANGULAR_MIRRORED_MODE returns the FIXED_EQUIRECTANGULAR_MIRRORED_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#fixed_equirectangular_mirrored_mode
func (r *RawTexture3D) FIXED_EQUIRECTANGULAR_MIRRORED_MODE(FIXED_EQUIRECTANGULAR_MIRRORED_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(FIXED_EQUIRECTANGULAR_MIRRORED_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetFIXED_EQUIRECTANGULAR_MIRRORED_MODE sets the FIXED_EQUIRECTANGULAR_MIRRORED_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#fixed_equirectangular_mirrored_mode
func (r *RawTexture3D) SetFIXED_EQUIRECTANGULAR_MIRRORED_MODE(FIXED_EQUIRECTANGULAR_MIRRORED_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(FIXED_EQUIRECTANGULAR_MIRRORED_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// FIXED_EQUIRECTANGULAR_MODE returns the FIXED_EQUIRECTANGULAR_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#fixed_equirectangular_mode
func (r *RawTexture3D) FIXED_EQUIRECTANGULAR_MODE(FIXED_EQUIRECTANGULAR_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(FIXED_EQUIRECTANGULAR_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetFIXED_EQUIRECTANGULAR_MODE sets the FIXED_EQUIRECTANGULAR_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#fixed_equirectangular_mode
func (r *RawTexture3D) SetFIXED_EQUIRECTANGULAR_MODE(FIXED_EQUIRECTANGULAR_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(FIXED_EQUIRECTANGULAR_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// Format returns the Format property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#format
func (r *RawTexture3D) Format(format float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(format)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetFormat sets the Format property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#format
func (r *RawTexture3D) SetFormat(format float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(format)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// GammaSpace returns the GammaSpace property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#gammaspace
func (r *RawTexture3D) GammaSpace(gammaSpace bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(gammaSpace)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetGammaSpace sets the GammaSpace property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#gammaspace
func (r *RawTexture3D) SetGammaSpace(gammaSpace bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(gammaSpace)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// GetAlphaFromRGB returns the GetAlphaFromRGB property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#getalphafromrgb
func (r *RawTexture3D) GetAlphaFromRGB(getAlphaFromRGB bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(getAlphaFromRGB)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetGetAlphaFromRGB sets the GetAlphaFromRGB property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#getalphafromrgb
func (r *RawTexture3D) SetGetAlphaFromRGB(getAlphaFromRGB bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(getAlphaFromRGB)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// HasAlpha returns the HasAlpha property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#hasalpha
func (r *RawTexture3D) HasAlpha(hasAlpha bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(hasAlpha)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetHasAlpha sets the HasAlpha property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#hasalpha
func (r *RawTexture3D) SetHasAlpha(hasAlpha bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(hasAlpha)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// INVCUBIC_MODE returns the INVCUBIC_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#invcubic_mode
func (r *RawTexture3D) INVCUBIC_MODE(INVCUBIC_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(INVCUBIC_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetINVCUBIC_MODE sets the INVCUBIC_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#invcubic_mode
func (r *RawTexture3D) SetINVCUBIC_MODE(INVCUBIC_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(INVCUBIC_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// InspectableCustomProperties returns the InspectableCustomProperties property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#inspectablecustomproperties
func (r *RawTexture3D) InspectableCustomProperties(inspectableCustomProperties *IInspectable) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(inspectableCustomProperties.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetInspectableCustomProperties sets the InspectableCustomProperties property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#inspectablecustomproperties
func (r *RawTexture3D) SetInspectableCustomProperties(inspectableCustomProperties *IInspectable) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(inspectableCustomProperties.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// InvertY returns the InvertY property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#inverty
func (r *RawTexture3D) InvertY(invertY bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(invertY)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetInvertY sets the InvertY property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#inverty
func (r *RawTexture3D) SetInvertY(invertY bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(invertY)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// InvertZ returns the InvertZ property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#invertz
func (r *RawTexture3D) InvertZ(invertZ bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(invertZ)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetInvertZ sets the InvertZ property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#invertz
func (r *RawTexture3D) SetInvertZ(invertZ bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(invertZ)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// IrradianceTexture returns the IrradianceTexture property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#irradiancetexture
func (r *RawTexture3D) IrradianceTexture(irradianceTexture *BaseTexture) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(irradianceTexture.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetIrradianceTexture sets the IrradianceTexture property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#irradiancetexture
func (r *RawTexture3D) SetIrradianceTexture(irradianceTexture *BaseTexture) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(irradianceTexture.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// Is2DArray returns the Is2DArray property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#is2darray
func (r *RawTexture3D) Is2DArray(is2DArray bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(is2DArray)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetIs2DArray sets the Is2DArray property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#is2darray
func (r *RawTexture3D) SetIs2DArray(is2DArray bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(is2DArray)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// Is3D returns the Is3D property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#is3d
func (r *RawTexture3D) Is3D(is3D bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(is3D)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetIs3D sets the Is3D property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#is3d
func (r *RawTexture3D) SetIs3D(is3D bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(is3D)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// IsBlocking returns the IsBlocking property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#isblocking
func (r *RawTexture3D) IsBlocking(isBlocking bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(isBlocking)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetIsBlocking sets the IsBlocking property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#isblocking
func (r *RawTexture3D) SetIsBlocking(isBlocking bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(isBlocking)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// IsCube returns the IsCube property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#iscube
func (r *RawTexture3D) IsCube(isCube bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(isCube)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetIsCube sets the IsCube property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#iscube
func (r *RawTexture3D) SetIsCube(isCube bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(isCube)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// IsRGBD returns the IsRGBD property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#isrgbd
func (r *RawTexture3D) IsRGBD(isRGBD bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(isRGBD)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetIsRGBD sets the IsRGBD property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#isrgbd
func (r *RawTexture3D) SetIsRGBD(isRGBD bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(isRGBD)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// IsRenderTarget returns the IsRenderTarget property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#isrendertarget
func (r *RawTexture3D) IsRenderTarget(isRenderTarget bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(isRenderTarget)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetIsRenderTarget sets the IsRenderTarget property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#isrendertarget
func (r *RawTexture3D) SetIsRenderTarget(isRenderTarget bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(isRenderTarget)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// LINEAR_LINEAR returns the LINEAR_LINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_linear
func (r *RawTexture3D) LINEAR_LINEAR(LINEAR_LINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_LINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLINEAR_LINEAR sets the LINEAR_LINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_linear
func (r *RawTexture3D) SetLINEAR_LINEAR(LINEAR_LINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_LINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// LINEAR_LINEAR_MIPLINEAR returns the LINEAR_LINEAR_MIPLINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_linear_miplinear
func (r *RawTexture3D) LINEAR_LINEAR_MIPLINEAR(LINEAR_LINEAR_MIPLINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_LINEAR_MIPLINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLINEAR_LINEAR_MIPLINEAR sets the LINEAR_LINEAR_MIPLINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_linear_miplinear
func (r *RawTexture3D) SetLINEAR_LINEAR_MIPLINEAR(LINEAR_LINEAR_MIPLINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_LINEAR_MIPLINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// LINEAR_LINEAR_MIPNEAREST returns the LINEAR_LINEAR_MIPNEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_linear_mipnearest
func (r *RawTexture3D) LINEAR_LINEAR_MIPNEAREST(LINEAR_LINEAR_MIPNEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_LINEAR_MIPNEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLINEAR_LINEAR_MIPNEAREST sets the LINEAR_LINEAR_MIPNEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_linear_mipnearest
func (r *RawTexture3D) SetLINEAR_LINEAR_MIPNEAREST(LINEAR_LINEAR_MIPNEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_LINEAR_MIPNEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// LINEAR_NEAREST returns the LINEAR_NEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_nearest
func (r *RawTexture3D) LINEAR_NEAREST(LINEAR_NEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_NEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLINEAR_NEAREST sets the LINEAR_NEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_nearest
func (r *RawTexture3D) SetLINEAR_NEAREST(LINEAR_NEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_NEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// LINEAR_NEAREST_MIPLINEAR returns the LINEAR_NEAREST_MIPLINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_nearest_miplinear
func (r *RawTexture3D) LINEAR_NEAREST_MIPLINEAR(LINEAR_NEAREST_MIPLINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_NEAREST_MIPLINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLINEAR_NEAREST_MIPLINEAR sets the LINEAR_NEAREST_MIPLINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_nearest_miplinear
func (r *RawTexture3D) SetLINEAR_NEAREST_MIPLINEAR(LINEAR_NEAREST_MIPLINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_NEAREST_MIPLINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// LINEAR_NEAREST_MIPNEAREST returns the LINEAR_NEAREST_MIPNEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_nearest_mipnearest
func (r *RawTexture3D) LINEAR_NEAREST_MIPNEAREST(LINEAR_NEAREST_MIPNEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_NEAREST_MIPNEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLINEAR_NEAREST_MIPNEAREST sets the LINEAR_NEAREST_MIPNEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linear_nearest_mipnearest
func (r *RawTexture3D) SetLINEAR_NEAREST_MIPNEAREST(LINEAR_NEAREST_MIPNEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(LINEAR_NEAREST_MIPNEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// Level returns the Level property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#level
func (r *RawTexture3D) Level(level float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(level)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLevel sets the Level property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#level
func (r *RawTexture3D) SetLevel(level float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(level)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// LinearSpecularLOD returns the LinearSpecularLOD property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linearspecularlod
func (r *RawTexture3D) LinearSpecularLOD(linearSpecularLOD bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(linearSpecularLOD)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLinearSpecularLOD sets the LinearSpecularLOD property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#linearspecularlod
func (r *RawTexture3D) SetLinearSpecularLOD(linearSpecularLOD bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(linearSpecularLOD)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// LodGenerationOffset returns the LodGenerationOffset property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#lodgenerationoffset
func (r *RawTexture3D) LodGenerationOffset(lodGenerationOffset float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(lodGenerationOffset)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLodGenerationOffset sets the LodGenerationOffset property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#lodgenerationoffset
func (r *RawTexture3D) SetLodGenerationOffset(lodGenerationOffset float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(lodGenerationOffset)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// LodGenerationScale returns the LodGenerationScale property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#lodgenerationscale
func (r *RawTexture3D) LodGenerationScale(lodGenerationScale float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(lodGenerationScale)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetLodGenerationScale sets the LodGenerationScale property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#lodgenerationscale
func (r *RawTexture3D) SetLodGenerationScale(lodGenerationScale float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(lodGenerationScale)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// MIRROR_ADDRESSMODE returns the MIRROR_ADDRESSMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#mirror_addressmode
func (r *RawTexture3D) MIRROR_ADDRESSMODE(MIRROR_ADDRESSMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(MIRROR_ADDRESSMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetMIRROR_ADDRESSMODE sets the MIRROR_ADDRESSMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#mirror_addressmode
func (r *RawTexture3D) SetMIRROR_ADDRESSMODE(MIRROR_ADDRESSMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(MIRROR_ADDRESSMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// Metadata returns the Metadata property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#metadata
func (r *RawTexture3D) Metadata(metadata interface{}) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(metadata)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetMetadata sets the Metadata property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#metadata
func (r *RawTexture3D) SetMetadata(metadata interface{}) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(metadata)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// NEAREST_LINEAR returns the NEAREST_LINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_linear
func (r *RawTexture3D) NEAREST_LINEAR(NEAREST_LINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_LINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetNEAREST_LINEAR sets the NEAREST_LINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_linear
func (r *RawTexture3D) SetNEAREST_LINEAR(NEAREST_LINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_LINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// NEAREST_LINEAR_MIPLINEAR returns the NEAREST_LINEAR_MIPLINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_linear_miplinear
func (r *RawTexture3D) NEAREST_LINEAR_MIPLINEAR(NEAREST_LINEAR_MIPLINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_LINEAR_MIPLINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetNEAREST_LINEAR_MIPLINEAR sets the NEAREST_LINEAR_MIPLINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_linear_miplinear
func (r *RawTexture3D) SetNEAREST_LINEAR_MIPLINEAR(NEAREST_LINEAR_MIPLINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_LINEAR_MIPLINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// NEAREST_LINEAR_MIPNEAREST returns the NEAREST_LINEAR_MIPNEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_linear_mipnearest
func (r *RawTexture3D) NEAREST_LINEAR_MIPNEAREST(NEAREST_LINEAR_MIPNEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_LINEAR_MIPNEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetNEAREST_LINEAR_MIPNEAREST sets the NEAREST_LINEAR_MIPNEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_linear_mipnearest
func (r *RawTexture3D) SetNEAREST_LINEAR_MIPNEAREST(NEAREST_LINEAR_MIPNEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_LINEAR_MIPNEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// NEAREST_NEAREST returns the NEAREST_NEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_nearest
func (r *RawTexture3D) NEAREST_NEAREST(NEAREST_NEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_NEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetNEAREST_NEAREST sets the NEAREST_NEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_nearest
func (r *RawTexture3D) SetNEAREST_NEAREST(NEAREST_NEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_NEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// NEAREST_NEAREST_MIPLINEAR returns the NEAREST_NEAREST_MIPLINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_nearest_miplinear
func (r *RawTexture3D) NEAREST_NEAREST_MIPLINEAR(NEAREST_NEAREST_MIPLINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_NEAREST_MIPLINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetNEAREST_NEAREST_MIPLINEAR sets the NEAREST_NEAREST_MIPLINEAR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_nearest_miplinear
func (r *RawTexture3D) SetNEAREST_NEAREST_MIPLINEAR(NEAREST_NEAREST_MIPLINEAR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_NEAREST_MIPLINEAR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// NEAREST_NEAREST_MIPNEAREST returns the NEAREST_NEAREST_MIPNEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_nearest_mipnearest
func (r *RawTexture3D) NEAREST_NEAREST_MIPNEAREST(NEAREST_NEAREST_MIPNEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_NEAREST_MIPNEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetNEAREST_NEAREST_MIPNEAREST sets the NEAREST_NEAREST_MIPNEAREST property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_nearest_mipnearest
func (r *RawTexture3D) SetNEAREST_NEAREST_MIPNEAREST(NEAREST_NEAREST_MIPNEAREST float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_NEAREST_MIPNEAREST)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// NEAREST_SAMPLINGMODE returns the NEAREST_SAMPLINGMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_samplingmode
func (r *RawTexture3D) NEAREST_SAMPLINGMODE(NEAREST_SAMPLINGMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_SAMPLINGMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetNEAREST_SAMPLINGMODE sets the NEAREST_SAMPLINGMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nearest_samplingmode
func (r *RawTexture3D) SetNEAREST_SAMPLINGMODE(NEAREST_SAMPLINGMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(NEAREST_SAMPLINGMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#name
func (r *RawTexture3D) Name(name string) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(name)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#name
func (r *RawTexture3D) SetName(name string) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(name)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// NoMipmap returns the NoMipmap property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nomipmap
func (r *RawTexture3D) NoMipmap(noMipmap bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(noMipmap)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetNoMipmap sets the NoMipmap property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#nomipmap
func (r *RawTexture3D) SetNoMipmap(noMipmap bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(noMipmap)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// OnDispose returns the OnDispose property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#ondispose
func (r *RawTexture3D) OnDispose(onDispose func()) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(js.FuncOf(func(this js.Value, args []js.Value) interface{} {onDispose(); return nil}))
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetOnDispose sets the OnDispose property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#ondispose
func (r *RawTexture3D) SetOnDispose(onDispose func()) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(js.FuncOf(func(this js.Value, args []js.Value) interface{} {onDispose(); return nil}))
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// OnDisposeObservable returns the OnDisposeObservable property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#ondisposeobservable
func (r *RawTexture3D) OnDisposeObservable(onDisposeObservable *Observable) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(onDisposeObservable.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetOnDisposeObservable sets the OnDisposeObservable property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#ondisposeobservable
func (r *RawTexture3D) SetOnDisposeObservable(onDisposeObservable *Observable) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(onDisposeObservable.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// OnLoadObservable returns the OnLoadObservable property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#onloadobservable
func (r *RawTexture3D) OnLoadObservable(onLoadObservable *Observable) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(onLoadObservable.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetOnLoadObservable sets the OnLoadObservable property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#onloadobservable
func (r *RawTexture3D) SetOnLoadObservable(onLoadObservable *Observable) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(onLoadObservable.JSObject())
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// PLANAR_MODE returns the PLANAR_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#planar_mode
func (r *RawTexture3D) PLANAR_MODE(PLANAR_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(PLANAR_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetPLANAR_MODE sets the PLANAR_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#planar_mode
func (r *RawTexture3D) SetPLANAR_MODE(PLANAR_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(PLANAR_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// PROJECTION_MODE returns the PROJECTION_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#projection_mode
func (r *RawTexture3D) PROJECTION_MODE(PROJECTION_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(PROJECTION_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetPROJECTION_MODE sets the PROJECTION_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#projection_mode
func (r *RawTexture3D) SetPROJECTION_MODE(PROJECTION_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(PROJECTION_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// ReservedDataStore returns the ReservedDataStore property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#reserveddatastore
func (r *RawTexture3D) ReservedDataStore(reservedDataStore interface{}) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(reservedDataStore)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetReservedDataStore sets the ReservedDataStore property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#reserveddatastore
func (r *RawTexture3D) SetReservedDataStore(reservedDataStore interface{}) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(reservedDataStore)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SKYBOX_MODE returns the SKYBOX_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#skybox_mode
func (r *RawTexture3D) SKYBOX_MODE(SKYBOX_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(SKYBOX_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetSKYBOX_MODE sets the SKYBOX_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#skybox_mode
func (r *RawTexture3D) SetSKYBOX_MODE(SKYBOX_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(SKYBOX_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SPHERICAL_MODE returns the SPHERICAL_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#spherical_mode
func (r *RawTexture3D) SPHERICAL_MODE(SPHERICAL_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(SPHERICAL_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetSPHERICAL_MODE sets the SPHERICAL_MODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#spherical_mode
func (r *RawTexture3D) SetSPHERICAL_MODE(SPHERICAL_MODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(SPHERICAL_MODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SamplingMode returns the SamplingMode property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#samplingmode
func (r *RawTexture3D) SamplingMode(samplingMode float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(samplingMode)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetSamplingMode sets the SamplingMode property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#samplingmode
func (r *RawTexture3D) SetSamplingMode(samplingMode float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(samplingMode)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SerializeBuffers returns the SerializeBuffers property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#serializebuffers
func (r *RawTexture3D) SerializeBuffers(SerializeBuffers bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(SerializeBuffers)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetSerializeBuffers sets the SerializeBuffers property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#serializebuffers
func (r *RawTexture3D) SetSerializeBuffers(SerializeBuffers bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(SerializeBuffers)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// TRILINEAR_SAMPLINGMODE returns the TRILINEAR_SAMPLINGMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#trilinear_samplingmode
func (r *RawTexture3D) TRILINEAR_SAMPLINGMODE(TRILINEAR_SAMPLINGMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(TRILINEAR_SAMPLINGMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetTRILINEAR_SAMPLINGMODE sets the TRILINEAR_SAMPLINGMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#trilinear_samplingmode
func (r *RawTexture3D) SetTRILINEAR_SAMPLINGMODE(TRILINEAR_SAMPLINGMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(TRILINEAR_SAMPLINGMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// TextureFormat returns the TextureFormat property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#textureformat
func (r *RawTexture3D) TextureFormat(textureFormat float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(textureFormat)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetTextureFormat sets the TextureFormat property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#textureformat
func (r *RawTexture3D) SetTextureFormat(textureFormat float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(textureFormat)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// TextureType returns the TextureType property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#texturetype
func (r *RawTexture3D) TextureType(textureType float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(textureType)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetTextureType sets the TextureType property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#texturetype
func (r *RawTexture3D) SetTextureType(textureType float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(textureType)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// UAng returns the UAng property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uang
func (r *RawTexture3D) UAng(uAng float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uAng)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetUAng sets the UAng property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uang
func (r *RawTexture3D) SetUAng(uAng float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uAng)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// UOffset returns the UOffset property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uoffset
func (r *RawTexture3D) UOffset(uOffset float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uOffset)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetUOffset sets the UOffset property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uoffset
func (r *RawTexture3D) SetUOffset(uOffset float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uOffset)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// URotationCenter returns the URotationCenter property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#urotationcenter
func (r *RawTexture3D) URotationCenter(uRotationCenter float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uRotationCenter)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetURotationCenter sets the URotationCenter property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#urotationcenter
func (r *RawTexture3D) SetURotationCenter(uRotationCenter float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uRotationCenter)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// UScale returns the UScale property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uscale
func (r *RawTexture3D) UScale(uScale float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uScale)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetUScale sets the UScale property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uscale
func (r *RawTexture3D) SetUScale(uScale float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uScale)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// Uid returns the Uid property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uid
func (r *RawTexture3D) Uid(uid string) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uid)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetUid sets the Uid property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uid
func (r *RawTexture3D) SetUid(uid string) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uid)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// UniqueId returns the UniqueId property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uniqueid
func (r *RawTexture3D) UniqueId(uniqueId float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uniqueId)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetUniqueId sets the UniqueId property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#uniqueid
func (r *RawTexture3D) SetUniqueId(uniqueId float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(uniqueId)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// Url returns the Url property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#url
func (r *RawTexture3D) Url(url string) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(url)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetUrl sets the Url property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#url
func (r *RawTexture3D) SetUrl(url string) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(url)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// UseSerializedUrlIfAny returns the UseSerializedUrlIfAny property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#useserializedurlifany
func (r *RawTexture3D) UseSerializedUrlIfAny(UseSerializedUrlIfAny bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(UseSerializedUrlIfAny)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetUseSerializedUrlIfAny sets the UseSerializedUrlIfAny property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#useserializedurlifany
func (r *RawTexture3D) SetUseSerializedUrlIfAny(UseSerializedUrlIfAny bool) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(UseSerializedUrlIfAny)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// VAng returns the VAng property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#vang
func (r *RawTexture3D) VAng(vAng float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(vAng)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetVAng sets the VAng property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#vang
func (r *RawTexture3D) SetVAng(vAng float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(vAng)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// VOffset returns the VOffset property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#voffset
func (r *RawTexture3D) VOffset(vOffset float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(vOffset)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetVOffset sets the VOffset property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#voffset
func (r *RawTexture3D) SetVOffset(vOffset float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(vOffset)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// VRotationCenter returns the VRotationCenter property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#vrotationcenter
func (r *RawTexture3D) VRotationCenter(vRotationCenter float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(vRotationCenter)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetVRotationCenter sets the VRotationCenter property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#vrotationcenter
func (r *RawTexture3D) SetVRotationCenter(vRotationCenter float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(vRotationCenter)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// VScale returns the VScale property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#vscale
func (r *RawTexture3D) VScale(vScale float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(vScale)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetVScale sets the VScale property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#vscale
func (r *RawTexture3D) SetVScale(vScale float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(vScale)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// WAng returns the WAng property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wang
func (r *RawTexture3D) WAng(wAng float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wAng)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetWAng sets the WAng property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wang
func (r *RawTexture3D) SetWAng(wAng float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wAng)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// WRAP_ADDRESSMODE returns the WRAP_ADDRESSMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrap_addressmode
func (r *RawTexture3D) WRAP_ADDRESSMODE(WRAP_ADDRESSMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(WRAP_ADDRESSMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetWRAP_ADDRESSMODE sets the WRAP_ADDRESSMODE property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrap_addressmode
func (r *RawTexture3D) SetWRAP_ADDRESSMODE(WRAP_ADDRESSMODE float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(WRAP_ADDRESSMODE)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// WRotationCenter returns the WRotationCenter property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrotationcenter
func (r *RawTexture3D) WRotationCenter(wRotationCenter float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wRotationCenter)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetWRotationCenter sets the WRotationCenter property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrotationcenter
func (r *RawTexture3D) SetWRotationCenter(wRotationCenter float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wRotationCenter)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// WrapR returns the WrapR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrapr
func (r *RawTexture3D) WrapR(wrapR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wrapR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetWrapR sets the WrapR property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrapr
func (r *RawTexture3D) SetWrapR(wrapR float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wrapR)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// WrapU returns the WrapU property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrapu
func (r *RawTexture3D) WrapU(wrapU float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wrapU)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetWrapU sets the WrapU property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrapu
func (r *RawTexture3D) SetWrapU(wrapU float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wrapU)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// WrapV returns the WrapV property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrapv
func (r *RawTexture3D) WrapV(wrapV float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wrapV)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

// SetWrapV sets the WrapV property of class RawTexture3D.
//
// https://doc.babylonjs.com/api/classes/babylon.rawtexture3d#wrapv
func (r *RawTexture3D) SetWrapV(wrapV float64) *RawTexture3D {
	p := ba.ctx.Get("RawTexture3D").New(wrapV)
	return RawTexture3DFromJSObject(p, ba.ctx)
}

*/
