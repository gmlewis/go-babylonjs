// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// TransformBlock represents a babylon.js TransformBlock.
// Block used to transform a vector (2, 3 or 4) with a matrix. It will generate a Vector4
type TransformBlock struct{ *NodeMaterialBlock }

// JSObject returns the underlying js.Value.
func (t *TransformBlock) JSObject() js.Value { return t.p }

// TransformBlock returns a TransformBlock JavaScript class.
func (b *Babylon) TransformBlock() *TransformBlock {
	p := b.ctx.Get("TransformBlock")
	return TransformBlockFromJSObject(p)
}

// TransformBlockFromJSObject returns a wrapped TransformBlock JavaScript class.
func TransformBlockFromJSObject(p js.Value) *TransformBlock {
	return &TransformBlock{NodeMaterialBlockFromJSObject(p)}
}

// NewTransformBlock returns a new TransformBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.transformblock
func (b *Babylon) NewTransformBlock(name string) *TransformBlock {
	p := b.ctx.Get("TransformBlock").New(name)
	return TransformBlockFromJSObject(p)
}

// TODO: methods
