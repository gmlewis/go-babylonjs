// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ColorCorrectionPostProcess represents a babylon.js ColorCorrectionPostProcess.
// This post-process allows the modification of rendered colors by using
// a &amp;#39;look-up table&amp;#39; (LUT). This effect is also called Color Grading.

//
// For an example of a color LUT, see here:

//
// See: http://udn.epicgames.com/Three/ColorGrading.html
type ColorCorrectionPostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (c *ColorCorrectionPostProcess) JSObject() js.Value { return c.p }

// ColorCorrectionPostProcess returns a ColorCorrectionPostProcess JavaScript class.
func (b *Babylon) ColorCorrectionPostProcess() *ColorCorrectionPostProcess {
	p := b.ctx.Get("ColorCorrectionPostProcess")
	return ColorCorrectionPostProcessFromJSObject(p)
}

// ColorCorrectionPostProcessFromJSObject returns a wrapped ColorCorrectionPostProcess JavaScript class.
func ColorCorrectionPostProcessFromJSObject(p js.Value) *ColorCorrectionPostProcess {
	return &ColorCorrectionPostProcess{PostProcessFromJSObject(p)}
}

// NewColorCorrectionPostProcess returns a new ColorCorrectionPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.colorcorrectionpostprocess
func (b *Babylon) NewColorCorrectionPostProcess(todo parameters) *ColorCorrectionPostProcess {
	p := b.ctx.Get("ColorCorrectionPostProcess").New(todo)
	return ColorCorrectionPostProcessFromJSObject(p)
}

// TODO: methods
