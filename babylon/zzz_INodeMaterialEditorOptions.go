// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// INodeMaterialEditorOptions represents a babylon.js INodeMaterialEditorOptions.
// Interface used to configure the node material editor
type INodeMaterialEditorOptions struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *INodeMaterialEditorOptions) JSObject() js.Value { return i.p }

// INodeMaterialEditorOptions returns a INodeMaterialEditorOptions JavaScript class.
func (ba *Babylon) INodeMaterialEditorOptions() *INodeMaterialEditorOptions {
	p := ba.ctx.Get("INodeMaterialEditorOptions")
	return INodeMaterialEditorOptionsFromJSObject(p, ba.ctx)
}

// INodeMaterialEditorOptionsFromJSObject returns a wrapped INodeMaterialEditorOptions JavaScript class.
func INodeMaterialEditorOptionsFromJSObject(p js.Value, ctx js.Value) *INodeMaterialEditorOptions {
	return &INodeMaterialEditorOptions{p: p, ctx: ctx}
}

// INodeMaterialEditorOptionsArrayToJSArray returns a JavaScript Array for the wrapped array.
func INodeMaterialEditorOptionsArrayToJSArray(array []*INodeMaterialEditorOptions) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// EditorURL returns the EditorURL property of class INodeMaterialEditorOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.inodematerialeditoroptions#editorurl
func (i *INodeMaterialEditorOptions) EditorURL() string {
	retVal := i.p.Get("editorURL")
	return retVal.String()
}

// SetEditorURL sets the EditorURL property of class INodeMaterialEditorOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.inodematerialeditoroptions#editorurl
func (i *INodeMaterialEditorOptions) SetEditorURL(editorURL string) *INodeMaterialEditorOptions {
	i.p.Set("editorURL", editorURL)
	return i
}
