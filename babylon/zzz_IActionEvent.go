// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IActionEvent represents a babylon.js IActionEvent.
// Interface used to define ActionEvent
type IActionEvent struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IActionEvent) JSObject() js.Value { return i.p }

// IActionEvent returns a IActionEvent JavaScript class.
func (ba *Babylon) IActionEvent() *IActionEvent {
	p := ba.ctx.Get("IActionEvent")
	return IActionEventFromJSObject(p, ba.ctx)
}

// IActionEventFromJSObject returns a wrapped IActionEvent JavaScript class.
func IActionEventFromJSObject(p js.Value, ctx js.Value) *IActionEvent {
	return &IActionEvent{p: p, ctx: ctx}
}

// IActionEventArrayToJSArray returns a JavaScript Array for the wrapped array.
func IActionEventArrayToJSArray(array []*IActionEvent) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// AdditionalData returns the AdditionalData property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#additionaldata
func (i *IActionEvent) AdditionalData(additionalData interface{}) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(additionalData)
	return IActionEventFromJSObject(p, ba.ctx)
}

// SetAdditionalData sets the AdditionalData property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#additionaldata
func (i *IActionEvent) SetAdditionalData(additionalData interface{}) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(additionalData)
	return IActionEventFromJSObject(p, ba.ctx)
}

// MeshUnderPointer returns the MeshUnderPointer property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#meshunderpointer
func (i *IActionEvent) MeshUnderPointer(meshUnderPointer *AbstractMesh) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(meshUnderPointer.JSObject())
	return IActionEventFromJSObject(p, ba.ctx)
}

// SetMeshUnderPointer sets the MeshUnderPointer property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#meshunderpointer
func (i *IActionEvent) SetMeshUnderPointer(meshUnderPointer *AbstractMesh) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(meshUnderPointer.JSObject())
	return IActionEventFromJSObject(p, ba.ctx)
}

// PointerX returns the PointerX property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#pointerx
func (i *IActionEvent) PointerX(pointerX float64) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(pointerX)
	return IActionEventFromJSObject(p, ba.ctx)
}

// SetPointerX sets the PointerX property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#pointerx
func (i *IActionEvent) SetPointerX(pointerX float64) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(pointerX)
	return IActionEventFromJSObject(p, ba.ctx)
}

// PointerY returns the PointerY property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#pointery
func (i *IActionEvent) PointerY(pointerY float64) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(pointerY)
	return IActionEventFromJSObject(p, ba.ctx)
}

// SetPointerY sets the PointerY property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#pointery
func (i *IActionEvent) SetPointerY(pointerY float64) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(pointerY)
	return IActionEventFromJSObject(p, ba.ctx)
}

// Source returns the Source property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#source
func (i *IActionEvent) Source(source interface{}) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(source)
	return IActionEventFromJSObject(p, ba.ctx)
}

// SetSource sets the Source property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#source
func (i *IActionEvent) SetSource(source interface{}) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(source)
	return IActionEventFromJSObject(p, ba.ctx)
}

// SourceEvent returns the SourceEvent property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#sourceevent
func (i *IActionEvent) SourceEvent(sourceEvent interface{}) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(sourceEvent)
	return IActionEventFromJSObject(p, ba.ctx)
}

// SetSourceEvent sets the SourceEvent property of class IActionEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.iactionevent#sourceevent
func (i *IActionEvent) SetSourceEvent(sourceEvent interface{}) *IActionEvent {
	p := ba.ctx.Get("IActionEvent").New(sourceEvent)
	return IActionEventFromJSObject(p, ba.ctx)
}

*/
