// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SpherePanel represents a babylon.js SpherePanel.
// Class used to create a container panel deployed on the surface of a sphere
type SpherePanel struct{ *VolumeBasedPanel }

// JSObject returns the underlying js.Value.
func (s *SpherePanel) JSObject() js.Value { return s.p }

// SpherePanel returns a SpherePanel JavaScript class.
func (ba *Babylon) SpherePanel() *SpherePanel {
	p := ba.ctx.Get("SpherePanel")
	return SpherePanelFromJSObject(p)
}

// SpherePanelFromJSObject returns a wrapped SpherePanel JavaScript class.
func SpherePanelFromJSObject(p js.Value) *SpherePanel {
	return &SpherePanel{VolumeBasedPanelFromJSObject(p)}
}

// NewSpherePanel returns a new SpherePanel object.
//
// https://doc.babylonjs.com/api/classes/babylon.spherepanel
func (ba *Babylon) NewSpherePanel() *SpherePanel {
	p := ba.ctx.Get("SpherePanel").New()
	return SpherePanelFromJSObject(p)
}

// TODO: methods
