// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// WorkerPool represents a babylon.js WorkerPool.
// Helper class to push actions to a pool of workers.
type WorkerPool struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (w *WorkerPool) JSObject() js.Value { return w.p }

// WorkerPool returns a WorkerPool JavaScript class.
func (ba *Babylon) WorkerPool() *WorkerPool {
	p := ba.ctx.Get("WorkerPool")
	return WorkerPoolFromJSObject(p, ba.ctx)
}

// WorkerPoolFromJSObject returns a wrapped WorkerPool JavaScript class.
func WorkerPoolFromJSObject(p js.Value, ctx js.Value) *WorkerPool {
	return &WorkerPool{p: p, ctx: ctx}
}

// NewWorkerPool returns a new WorkerPool object.
//
// https://doc.babylonjs.com/api/classes/babylon.workerpool
func (ba *Babylon) NewWorkerPool(workers []js.Value) *WorkerPool {
	p := ba.ctx.Get("WorkerPool").New(workers)
	return WorkerPoolFromJSObject(p, ba.ctx)
}

// TODO: methods
