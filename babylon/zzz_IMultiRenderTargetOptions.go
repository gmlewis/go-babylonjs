// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IMultiRenderTargetOptions represents a babylon.js IMultiRenderTargetOptions.
// Creation options of the multi render target texture.
type IMultiRenderTargetOptions struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IMultiRenderTargetOptions) JSObject() js.Value { return i.p }

// IMultiRenderTargetOptions returns a IMultiRenderTargetOptions JavaScript class.
func (ba *Babylon) IMultiRenderTargetOptions() *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions")
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// IMultiRenderTargetOptionsFromJSObject returns a wrapped IMultiRenderTargetOptions JavaScript class.
func IMultiRenderTargetOptionsFromJSObject(p js.Value, ctx js.Value) *IMultiRenderTargetOptions {
	return &IMultiRenderTargetOptions{p: p, ctx: ctx}
}

// IMultiRenderTargetOptionsArrayToJSArray returns a JavaScript Array for the wrapped array.
func IMultiRenderTargetOptionsArrayToJSArray(array []*IMultiRenderTargetOptions) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// DefaultType returns the DefaultType property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#defaulttype
func (i *IMultiRenderTargetOptions) DefaultType(defaultType float64) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(defaultType)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SetDefaultType sets the DefaultType property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#defaulttype
func (i *IMultiRenderTargetOptions) SetDefaultType(defaultType float64) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(defaultType)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// DoNotChangeAspectRatio returns the DoNotChangeAspectRatio property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#donotchangeaspectratio
func (i *IMultiRenderTargetOptions) DoNotChangeAspectRatio(doNotChangeAspectRatio bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(doNotChangeAspectRatio)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SetDoNotChangeAspectRatio sets the DoNotChangeAspectRatio property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#donotchangeaspectratio
func (i *IMultiRenderTargetOptions) SetDoNotChangeAspectRatio(doNotChangeAspectRatio bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(doNotChangeAspectRatio)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// GenerateDepthBuffer returns the GenerateDepthBuffer property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#generatedepthbuffer
func (i *IMultiRenderTargetOptions) GenerateDepthBuffer(generateDepthBuffer bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(generateDepthBuffer)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SetGenerateDepthBuffer sets the GenerateDepthBuffer property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#generatedepthbuffer
func (i *IMultiRenderTargetOptions) SetGenerateDepthBuffer(generateDepthBuffer bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(generateDepthBuffer)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// GenerateDepthTexture returns the GenerateDepthTexture property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#generatedepthtexture
func (i *IMultiRenderTargetOptions) GenerateDepthTexture(generateDepthTexture bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(generateDepthTexture)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SetGenerateDepthTexture sets the GenerateDepthTexture property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#generatedepthtexture
func (i *IMultiRenderTargetOptions) SetGenerateDepthTexture(generateDepthTexture bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(generateDepthTexture)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// GenerateMipMaps returns the GenerateMipMaps property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#generatemipmaps
func (i *IMultiRenderTargetOptions) GenerateMipMaps(generateMipMaps bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(generateMipMaps)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SetGenerateMipMaps sets the GenerateMipMaps property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#generatemipmaps
func (i *IMultiRenderTargetOptions) SetGenerateMipMaps(generateMipMaps bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(generateMipMaps)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// GenerateStencilBuffer returns the GenerateStencilBuffer property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#generatestencilbuffer
func (i *IMultiRenderTargetOptions) GenerateStencilBuffer(generateStencilBuffer bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(generateStencilBuffer)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SetGenerateStencilBuffer sets the GenerateStencilBuffer property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#generatestencilbuffer
func (i *IMultiRenderTargetOptions) SetGenerateStencilBuffer(generateStencilBuffer bool) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(generateStencilBuffer)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SamplingModes returns the SamplingModes property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#samplingmodes
func (i *IMultiRenderTargetOptions) SamplingModes(samplingModes float64) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(samplingModes)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SetSamplingModes sets the SamplingModes property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#samplingmodes
func (i *IMultiRenderTargetOptions) SetSamplingModes(samplingModes float64) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(samplingModes)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// TextureCount returns the TextureCount property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#texturecount
func (i *IMultiRenderTargetOptions) TextureCount(textureCount float64) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(textureCount)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SetTextureCount sets the TextureCount property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#texturecount
func (i *IMultiRenderTargetOptions) SetTextureCount(textureCount float64) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(textureCount)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// Types returns the Types property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#types
func (i *IMultiRenderTargetOptions) Types(types float64) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(types)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

// SetTypes sets the Types property of class IMultiRenderTargetOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.imultirendertargetoptions#types
func (i *IMultiRenderTargetOptions) SetTypes(types float64) *IMultiRenderTargetOptions {
	p := ba.ctx.Get("IMultiRenderTargetOptions").New(types)
	return IMultiRenderTargetOptionsFromJSObject(p, ba.ctx)
}

*/
