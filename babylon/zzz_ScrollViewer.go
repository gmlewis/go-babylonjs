// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ScrollViewer represents a babylon.js ScrollViewer.
// Class used to hold a viewer window and sliders in a grid
type ScrollViewer struct {
	*Rectangle
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (s *ScrollViewer) JSObject() js.Value { return s.p }

// ScrollViewer returns a ScrollViewer JavaScript class.
func (ba *Babylon) ScrollViewer() *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer")
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ScrollViewerFromJSObject returns a wrapped ScrollViewer JavaScript class.
func ScrollViewerFromJSObject(p js.Value, ctx js.Value) *ScrollViewer {
	return &ScrollViewer{Rectangle: RectangleFromJSObject(p, ctx), ctx: ctx}
}

// ScrollViewerArrayToJSArray returns a JavaScript Array for the wrapped array.
func ScrollViewerArrayToJSArray(array []*ScrollViewer) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewScrollViewerOpts contains optional parameters for NewScrollViewer.
type NewScrollViewerOpts struct {
	Name         *string
	IsImageBased *bool
}

// NewScrollViewer returns a new ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer
func (ba *Babylon) NewScrollViewer(opts *NewScrollViewerOpts) *ScrollViewer {
	if opts == nil {
		opts = &NewScrollViewerOpts{}
	}

	args := make([]interface{}, 0, 0+2)

	if opts.Name == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.Name)
	}
	if opts.IsImageBased == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.IsImageBased)
	}

	p := ba.ctx.Get("ScrollViewer").New(args...)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// AddControl calls the AddControl method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#addcontrol
func (s *ScrollViewer) AddControl(control *Control) *Container {

	args := make([]interface{}, 0, 1+0)

	args = append(args, control.JSObject())

	retVal := s.p.Call("addControl", args...)
	return ContainerFromJSObject(retVal, s.ctx)
}

// ClearControls calls the ClearControls method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#clearcontrols
func (s *ScrollViewer) ClearControls() *Container {

	retVal := s.p.Call("clearControls")
	return ContainerFromJSObject(retVal, s.ctx)
}

// Contains calls the Contains method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#contains
func (s *ScrollViewer) Contains(x float64, y float64) bool {

	args := make([]interface{}, 0, 2+0)

	args = append(args, x)
	args = append(args, y)

	retVal := s.p.Call("contains", args...)
	return retVal.Bool()
}

// ContainsControl calls the ContainsControl method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#containscontrol
func (s *ScrollViewer) ContainsControl(control *Control) bool {

	args := make([]interface{}, 0, 1+0)

	args = append(args, control.JSObject())

	retVal := s.p.Call("containsControl", args...)
	return retVal.Bool()
}

// Dispose calls the Dispose method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#dispose
func (s *ScrollViewer) Dispose() {

	s.p.Call("dispose")
}

// GetAscendantOfClass calls the GetAscendantOfClass method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#getascendantofclass
func (s *ScrollViewer) GetAscendantOfClass(className string) *Control {

	args := make([]interface{}, 0, 1+0)

	args = append(args, className)

	retVal := s.p.Call("getAscendantOfClass", args...)
	return ControlFromJSObject(retVal, s.ctx)
}

// GetChildByName calls the GetChildByName method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#getchildbyname
func (s *ScrollViewer) GetChildByName(name string) *Control {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	retVal := s.p.Call("getChildByName", args...)
	return ControlFromJSObject(retVal, s.ctx)
}

// GetChildByType calls the GetChildByType method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#getchildbytype
func (s *ScrollViewer) GetChildByType(name string, jsType string) *Control {

	args := make([]interface{}, 0, 2+0)

	args = append(args, name)
	args = append(args, jsType)

	retVal := s.p.Call("getChildByType", args...)
	return ControlFromJSObject(retVal, s.ctx)
}

// GetClassName calls the GetClassName method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#getclassname
func (s *ScrollViewer) GetClassName() string {

	retVal := s.p.Call("getClassName")
	return retVal.String()
}

// ScrollViewerGetDescendantsOpts contains optional parameters for ScrollViewer.GetDescendants.
type ScrollViewerGetDescendantsOpts struct {
	DirectDescendantsOnly *bool
	Predicate             func()
}

// GetDescendants calls the GetDescendants method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#getdescendants
func (s *ScrollViewer) GetDescendants(opts *ScrollViewerGetDescendantsOpts) *Control {
	if opts == nil {
		opts = &ScrollViewerGetDescendantsOpts{}
	}

	args := make([]interface{}, 0, 0+2)

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	retVal := s.p.Call("getDescendants", args...)
	return ControlFromJSObject(retVal, s.ctx)
}

// ScrollViewerGetDescendantsToRefOpts contains optional parameters for ScrollViewer.GetDescendantsToRef.
type ScrollViewerGetDescendantsToRefOpts struct {
	DirectDescendantsOnly *bool
	Predicate             func()
}

// GetDescendantsToRef calls the GetDescendantsToRef method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#getdescendantstoref
func (s *ScrollViewer) GetDescendantsToRef(results *Control, opts *ScrollViewerGetDescendantsToRefOpts) {
	if opts == nil {
		opts = &ScrollViewerGetDescendantsToRefOpts{}
	}

	args := make([]interface{}, 0, 1+2)

	args = append(args, results.JSObject())

	if opts.DirectDescendantsOnly == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.DirectDescendantsOnly)
	}
	if opts.Predicate == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Predicate)
	}

	s.p.Call("getDescendantsToRef", args...)
}

// GetLocalCoordinates calls the GetLocalCoordinates method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#getlocalcoordinates
func (s *ScrollViewer) GetLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := s.p.Call("getLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, s.ctx)
}

// GetLocalCoordinatesToRef calls the GetLocalCoordinatesToRef method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#getlocalcoordinatestoref
func (s *ScrollViewer) GetLocalCoordinatesToRef(globalCoordinates *Vector2, result *Vector2) *Control {

	args := make([]interface{}, 0, 2+0)

	args = append(args, globalCoordinates.JSObject())
	args = append(args, result.JSObject())

	retVal := s.p.Call("getLocalCoordinatesToRef", args...)
	return ControlFromJSObject(retVal, s.ctx)
}

// GetParentLocalCoordinates calls the GetParentLocalCoordinates method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#getparentlocalcoordinates
func (s *ScrollViewer) GetParentLocalCoordinates(globalCoordinates *Vector2) *Vector2 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, globalCoordinates.JSObject())

	retVal := s.p.Call("getParentLocalCoordinates", args...)
	return Vector2FromJSObject(retVal, s.ctx)
}

// IsAscendant calls the IsAscendant method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#isascendant
func (s *ScrollViewer) IsAscendant(container *Control) bool {

	args := make([]interface{}, 0, 1+0)

	args = append(args, container.JSObject())

	retVal := s.p.Call("isAscendant", args...)
	return retVal.Bool()
}

// LinkWithMesh calls the LinkWithMesh method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkwithmesh
func (s *ScrollViewer) LinkWithMesh(mesh *AbstractMesh) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, mesh.JSObject())

	s.p.Call("linkWithMesh", args...)
}

// MoveToVector3 calls the MoveToVector3 method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#movetovector3
func (s *ScrollViewer) MoveToVector3(position *Vector3, scene *Scene) {

	args := make([]interface{}, 0, 2+0)

	args = append(args, position.JSObject())
	args = append(args, scene.JSObject())

	s.p.Call("moveToVector3", args...)
}

// RemoveControl calls the RemoveControl method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#removecontrol
func (s *ScrollViewer) RemoveControl(control *Control) *Container {

	args := make([]interface{}, 0, 1+0)

	args = append(args, control.JSObject())

	retVal := s.p.Call("removeControl", args...)
	return ContainerFromJSObject(retVal, s.ctx)
}

// ResetWindow calls the ResetWindow method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#resetwindow
func (s *ScrollViewer) ResetWindow() {

	s.p.Call("resetWindow")
}

// _flagDescendantsAsMatrixDirty calls the _flagDescendantsAsMatrixDirty method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#_flagdescendantsasmatrixdirty
func (s *ScrollViewer) _flagDescendantsAsMatrixDirty() {

	s.p.Call("_flagDescendantsAsMatrixDirty")
}

// _link calls the _link method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#_link
func (s *ScrollViewer) _link(host *AdvancedDynamicTexture) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, host.JSObject())

	s.p.Call("_link", args...)
}

// _renderHighlightSpecific calls the _renderHighlightSpecific method on the ScrollViewer object.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#_renderhighlightspecific
func (s *ScrollViewer) _renderHighlightSpecific(context js.Value) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, context)

	s.p.Call("_renderHighlightSpecific", args...)
}

/*

// AdaptHeightToChildren returns the AdaptHeightToChildren property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#adaptheighttochildren
func (s *ScrollViewer) AdaptHeightToChildren(adaptHeightToChildren bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(adaptHeightToChildren)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetAdaptHeightToChildren sets the AdaptHeightToChildren property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#adaptheighttochildren
func (s *ScrollViewer) SetAdaptHeightToChildren(adaptHeightToChildren bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(adaptHeightToChildren)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// AdaptWidthToChildren returns the AdaptWidthToChildren property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#adaptwidthtochildren
func (s *ScrollViewer) AdaptWidthToChildren(adaptWidthToChildren bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(adaptWidthToChildren)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetAdaptWidthToChildren sets the AdaptWidthToChildren property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#adaptwidthtochildren
func (s *ScrollViewer) SetAdaptWidthToChildren(adaptWidthToChildren bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(adaptWidthToChildren)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// AllowAlphaInheritance returns the AllowAlphaInheritance property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#allowalphainheritance
func (s *ScrollViewer) AllowAlphaInheritance(AllowAlphaInheritance bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(AllowAlphaInheritance)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetAllowAlphaInheritance sets the AllowAlphaInheritance property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#allowalphainheritance
func (s *ScrollViewer) SetAllowAlphaInheritance(AllowAlphaInheritance bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(AllowAlphaInheritance)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Alpha returns the Alpha property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#alpha
func (s *ScrollViewer) Alpha(alpha float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(alpha)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetAlpha sets the Alpha property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#alpha
func (s *ScrollViewer) SetAlpha(alpha float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(alpha)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Background returns the Background property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#background
func (s *ScrollViewer) Background(background string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(background)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetBackground sets the Background property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#background
func (s *ScrollViewer) SetBackground(background string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(background)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// BarBackground returns the BarBackground property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barbackground
func (s *ScrollViewer) BarBackground(barBackground string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barBackground)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetBarBackground sets the BarBackground property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barbackground
func (s *ScrollViewer) SetBarBackground(barBackground string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barBackground)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// BarColor returns the BarColor property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barcolor
func (s *ScrollViewer) BarColor(barColor string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barColor)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetBarColor sets the BarColor property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barcolor
func (s *ScrollViewer) SetBarColor(barColor string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barColor)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// BarImage returns the BarImage property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barimage
func (s *ScrollViewer) BarImage(barImage *Image) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barImage.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetBarImage sets the BarImage property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barimage
func (s *ScrollViewer) SetBarImage(barImage *Image) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barImage.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// BarImageHeight returns the BarImageHeight property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barimageheight
func (s *ScrollViewer) BarImageHeight(barImageHeight float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barImageHeight)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetBarImageHeight sets the BarImageHeight property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barimageheight
func (s *ScrollViewer) SetBarImageHeight(barImageHeight float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barImageHeight)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// BarSize returns the BarSize property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barsize
func (s *ScrollViewer) BarSize(barSize float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barSize)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetBarSize sets the BarSize property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#barsize
func (s *ScrollViewer) SetBarSize(barSize float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(barSize)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// CenterX returns the CenterX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#centerx
func (s *ScrollViewer) CenterX(centerX float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(centerX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetCenterX sets the CenterX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#centerx
func (s *ScrollViewer) SetCenterX(centerX float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(centerX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// CenterY returns the CenterY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#centery
func (s *ScrollViewer) CenterY(centerY float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(centerY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetCenterY sets the CenterY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#centery
func (s *ScrollViewer) SetCenterY(centerY float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(centerY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Children returns the Children property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#children
func (s *ScrollViewer) Children(children *Control) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(children.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetChildren sets the Children property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#children
func (s *ScrollViewer) SetChildren(children *Control) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(children.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ClipChildren returns the ClipChildren property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#clipchildren
func (s *ScrollViewer) ClipChildren(clipChildren bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(clipChildren)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetClipChildren sets the ClipChildren property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#clipchildren
func (s *ScrollViewer) SetClipChildren(clipChildren bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(clipChildren)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ClipContent returns the ClipContent property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#clipcontent
func (s *ScrollViewer) ClipContent(clipContent bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(clipContent)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetClipContent sets the ClipContent property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#clipcontent
func (s *ScrollViewer) SetClipContent(clipContent bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(clipContent)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Color returns the Color property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#color
func (s *ScrollViewer) Color(color string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(color)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetColor sets the Color property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#color
func (s *ScrollViewer) SetColor(color string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(color)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// CornerRadius returns the CornerRadius property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#cornerradius
func (s *ScrollViewer) CornerRadius(cornerRadius float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(cornerRadius)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetCornerRadius sets the CornerRadius property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#cornerradius
func (s *ScrollViewer) SetCornerRadius(cornerRadius float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(cornerRadius)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// DisabledColor returns the DisabledColor property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#disabledcolor
func (s *ScrollViewer) DisabledColor(disabledColor string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(disabledColor)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetDisabledColor sets the DisabledColor property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#disabledcolor
func (s *ScrollViewer) SetDisabledColor(disabledColor string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(disabledColor)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// FontFamily returns the FontFamily property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontfamily
func (s *ScrollViewer) FontFamily(fontFamily string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontFamily)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetFontFamily sets the FontFamily property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontfamily
func (s *ScrollViewer) SetFontFamily(fontFamily string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontFamily)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// FontOffset returns the FontOffset property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontoffset
func (s *ScrollViewer) FontOffset(fontOffset js.Value) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontOffset)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetFontOffset sets the FontOffset property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontoffset
func (s *ScrollViewer) SetFontOffset(fontOffset js.Value) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontOffset)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// FontSize returns the FontSize property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontsize
func (s *ScrollViewer) FontSize(fontSize string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontSize)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetFontSize sets the FontSize property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontsize
func (s *ScrollViewer) SetFontSize(fontSize string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontSize)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// FontSizeInPixels returns the FontSizeInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontsizeinpixels
func (s *ScrollViewer) FontSizeInPixels(fontSizeInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontSizeInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetFontSizeInPixels sets the FontSizeInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontsizeinpixels
func (s *ScrollViewer) SetFontSizeInPixels(fontSizeInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontSizeInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// FontStyle returns the FontStyle property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontstyle
func (s *ScrollViewer) FontStyle(fontStyle string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontStyle)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetFontStyle sets the FontStyle property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontstyle
func (s *ScrollViewer) SetFontStyle(fontStyle string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontStyle)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// FontWeight returns the FontWeight property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontweight
func (s *ScrollViewer) FontWeight(fontWeight string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontWeight)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetFontWeight sets the FontWeight property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#fontweight
func (s *ScrollViewer) SetFontWeight(fontWeight string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(fontWeight)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_CENTER returns the HORIZONTAL_ALIGNMENT_CENTER property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontal_alignment_center
func (s *ScrollViewer) HORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(HORIZONTAL_ALIGNMENT_CENTER)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_CENTER sets the HORIZONTAL_ALIGNMENT_CENTER property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontal_alignment_center
func (s *ScrollViewer) SetHORIZONTAL_ALIGNMENT_CENTER(HORIZONTAL_ALIGNMENT_CENTER float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(HORIZONTAL_ALIGNMENT_CENTER)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_LEFT returns the HORIZONTAL_ALIGNMENT_LEFT property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontal_alignment_left
func (s *ScrollViewer) HORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(HORIZONTAL_ALIGNMENT_LEFT)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_LEFT sets the HORIZONTAL_ALIGNMENT_LEFT property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontal_alignment_left
func (s *ScrollViewer) SetHORIZONTAL_ALIGNMENT_LEFT(HORIZONTAL_ALIGNMENT_LEFT float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(HORIZONTAL_ALIGNMENT_LEFT)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// HORIZONTAL_ALIGNMENT_RIGHT returns the HORIZONTAL_ALIGNMENT_RIGHT property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontal_alignment_right
func (s *ScrollViewer) HORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetHORIZONTAL_ALIGNMENT_RIGHT sets the HORIZONTAL_ALIGNMENT_RIGHT property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontal_alignment_right
func (s *ScrollViewer) SetHORIZONTAL_ALIGNMENT_RIGHT(HORIZONTAL_ALIGNMENT_RIGHT float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(HORIZONTAL_ALIGNMENT_RIGHT)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Height returns the Height property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#height
func (s *ScrollViewer) Height(height string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(height)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetHeight sets the Height property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#height
func (s *ScrollViewer) SetHeight(height string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(height)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// HeightInPixels returns the HeightInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#heightinpixels
func (s *ScrollViewer) HeightInPixels(heightInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(heightInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetHeightInPixels sets the HeightInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#heightinpixels
func (s *ScrollViewer) SetHeightInPixels(heightInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(heightInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// HorizontalAlignment returns the HorizontalAlignment property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontalalignment
func (s *ScrollViewer) HorizontalAlignment(horizontalAlignment float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(horizontalAlignment)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetHorizontalAlignment sets the HorizontalAlignment property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontalalignment
func (s *ScrollViewer) SetHorizontalAlignment(horizontalAlignment float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(horizontalAlignment)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// HorizontalBar returns the HorizontalBar property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontalbar
func (s *ScrollViewer) HorizontalBar(horizontalBar *ScrollBar) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(horizontalBar.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetHorizontalBar sets the HorizontalBar property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#horizontalbar
func (s *ScrollViewer) SetHorizontalBar(horizontalBar *ScrollBar) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(horizontalBar.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Host returns the Host property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#host
func (s *ScrollViewer) Host(host *AdvancedDynamicTexture) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(host.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetHost sets the Host property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#host
func (s *ScrollViewer) SetHost(host *AdvancedDynamicTexture) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(host.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// HoverCursor returns the HoverCursor property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#hovercursor
func (s *ScrollViewer) HoverCursor(hoverCursor string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(hoverCursor)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetHoverCursor sets the HoverCursor property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#hovercursor
func (s *ScrollViewer) SetHoverCursor(hoverCursor string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(hoverCursor)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// IsDirty returns the IsDirty property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#isdirty
func (s *ScrollViewer) IsDirty(isDirty bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isDirty)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetIsDirty sets the IsDirty property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#isdirty
func (s *ScrollViewer) SetIsDirty(isDirty bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isDirty)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// IsEnabled returns the IsEnabled property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#isenabled
func (s *ScrollViewer) IsEnabled(isEnabled bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isEnabled)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetIsEnabled sets the IsEnabled property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#isenabled
func (s *ScrollViewer) SetIsEnabled(isEnabled bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isEnabled)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// IsFocusInvisible returns the IsFocusInvisible property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#isfocusinvisible
func (s *ScrollViewer) IsFocusInvisible(isFocusInvisible bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isFocusInvisible)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetIsFocusInvisible sets the IsFocusInvisible property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#isfocusinvisible
func (s *ScrollViewer) SetIsFocusInvisible(isFocusInvisible bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isFocusInvisible)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// IsHighlighted returns the IsHighlighted property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#ishighlighted
func (s *ScrollViewer) IsHighlighted(isHighlighted bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isHighlighted)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetIsHighlighted sets the IsHighlighted property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#ishighlighted
func (s *ScrollViewer) SetIsHighlighted(isHighlighted bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isHighlighted)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// IsHitTestVisible returns the IsHitTestVisible property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#ishittestvisible
func (s *ScrollViewer) IsHitTestVisible(isHitTestVisible bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isHitTestVisible)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetIsHitTestVisible sets the IsHitTestVisible property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#ishittestvisible
func (s *ScrollViewer) SetIsHitTestVisible(isHitTestVisible bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isHitTestVisible)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// IsPointerBlocker returns the IsPointerBlocker property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#ispointerblocker
func (s *ScrollViewer) IsPointerBlocker(isPointerBlocker bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isPointerBlocker)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetIsPointerBlocker sets the IsPointerBlocker property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#ispointerblocker
func (s *ScrollViewer) SetIsPointerBlocker(isPointerBlocker bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isPointerBlocker)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// IsVisible returns the IsVisible property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#isvisible
func (s *ScrollViewer) IsVisible(isVisible bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isVisible)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetIsVisible sets the IsVisible property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#isvisible
func (s *ScrollViewer) SetIsVisible(isVisible bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(isVisible)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Left returns the Left property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#left
func (s *ScrollViewer) Left(left string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(left)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetLeft sets the Left property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#left
func (s *ScrollViewer) SetLeft(left string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(left)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// LeftInPixels returns the LeftInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#leftinpixels
func (s *ScrollViewer) LeftInPixels(leftInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(leftInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetLeftInPixels sets the LeftInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#leftinpixels
func (s *ScrollViewer) SetLeftInPixels(leftInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(leftInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// LinkOffsetX returns the LinkOffsetX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkoffsetx
func (s *ScrollViewer) LinkOffsetX(linkOffsetX string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkOffsetX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetLinkOffsetX sets the LinkOffsetX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkoffsetx
func (s *ScrollViewer) SetLinkOffsetX(linkOffsetX string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkOffsetX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// LinkOffsetXInPixels returns the LinkOffsetXInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkoffsetxinpixels
func (s *ScrollViewer) LinkOffsetXInPixels(linkOffsetXInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkOffsetXInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetLinkOffsetXInPixels sets the LinkOffsetXInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkoffsetxinpixels
func (s *ScrollViewer) SetLinkOffsetXInPixels(linkOffsetXInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkOffsetXInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// LinkOffsetY returns the LinkOffsetY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkoffsety
func (s *ScrollViewer) LinkOffsetY(linkOffsetY string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkOffsetY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetLinkOffsetY sets the LinkOffsetY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkoffsety
func (s *ScrollViewer) SetLinkOffsetY(linkOffsetY string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkOffsetY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// LinkOffsetYInPixels returns the LinkOffsetYInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkoffsetyinpixels
func (s *ScrollViewer) LinkOffsetYInPixels(linkOffsetYInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkOffsetYInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetLinkOffsetYInPixels sets the LinkOffsetYInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkoffsetyinpixels
func (s *ScrollViewer) SetLinkOffsetYInPixels(linkOffsetYInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkOffsetYInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// LinkedMesh returns the LinkedMesh property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkedmesh
func (s *ScrollViewer) LinkedMesh(linkedMesh *AbstractMesh) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkedMesh.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetLinkedMesh sets the LinkedMesh property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#linkedmesh
func (s *ScrollViewer) SetLinkedMesh(linkedMesh *AbstractMesh) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(linkedMesh.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// LogLayoutCycleErrors returns the LogLayoutCycleErrors property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#loglayoutcycleerrors
func (s *ScrollViewer) LogLayoutCycleErrors(logLayoutCycleErrors bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(logLayoutCycleErrors)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetLogLayoutCycleErrors sets the LogLayoutCycleErrors property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#loglayoutcycleerrors
func (s *ScrollViewer) SetLogLayoutCycleErrors(logLayoutCycleErrors bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(logLayoutCycleErrors)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// MaxLayoutCycle returns the MaxLayoutCycle property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#maxlayoutcycle
func (s *ScrollViewer) MaxLayoutCycle(maxLayoutCycle float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(maxLayoutCycle)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetMaxLayoutCycle sets the MaxLayoutCycle property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#maxlayoutcycle
func (s *ScrollViewer) SetMaxLayoutCycle(maxLayoutCycle float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(maxLayoutCycle)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Metadata returns the Metadata property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#metadata
func (s *ScrollViewer) Metadata(metadata interface{}) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(metadata)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetMetadata sets the Metadata property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#metadata
func (s *ScrollViewer) SetMetadata(metadata interface{}) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(metadata)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#name
func (s *ScrollViewer) Name(name string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(name)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#name
func (s *ScrollViewer) SetName(name string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(name)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// NotRenderable returns the NotRenderable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#notrenderable
func (s *ScrollViewer) NotRenderable(notRenderable bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(notRenderable)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetNotRenderable sets the NotRenderable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#notrenderable
func (s *ScrollViewer) SetNotRenderable(notRenderable bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(notRenderable)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// OnAfterDrawObservable returns the OnAfterDrawObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onafterdrawobservable
func (s *ScrollViewer) OnAfterDrawObservable(onAfterDrawObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onAfterDrawObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetOnAfterDrawObservable sets the OnAfterDrawObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onafterdrawobservable
func (s *ScrollViewer) SetOnAfterDrawObservable(onAfterDrawObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onAfterDrawObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// OnBeforeDrawObservable returns the OnBeforeDrawObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onbeforedrawobservable
func (s *ScrollViewer) OnBeforeDrawObservable(onBeforeDrawObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onBeforeDrawObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetOnBeforeDrawObservable sets the OnBeforeDrawObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onbeforedrawobservable
func (s *ScrollViewer) SetOnBeforeDrawObservable(onBeforeDrawObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onBeforeDrawObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// OnDirtyObservable returns the OnDirtyObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#ondirtyobservable
func (s *ScrollViewer) OnDirtyObservable(onDirtyObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onDirtyObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetOnDirtyObservable sets the OnDirtyObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#ondirtyobservable
func (s *ScrollViewer) SetOnDirtyObservable(onDirtyObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onDirtyObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// OnPointerClickObservable returns the OnPointerClickObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointerclickobservable
func (s *ScrollViewer) OnPointerClickObservable(onPointerClickObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerClickObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetOnPointerClickObservable sets the OnPointerClickObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointerclickobservable
func (s *ScrollViewer) SetOnPointerClickObservable(onPointerClickObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerClickObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// OnPointerDownObservable returns the OnPointerDownObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointerdownobservable
func (s *ScrollViewer) OnPointerDownObservable(onPointerDownObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerDownObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetOnPointerDownObservable sets the OnPointerDownObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointerdownobservable
func (s *ScrollViewer) SetOnPointerDownObservable(onPointerDownObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerDownObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// OnPointerEnterObservable returns the OnPointerEnterObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointerenterobservable
func (s *ScrollViewer) OnPointerEnterObservable(onPointerEnterObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerEnterObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetOnPointerEnterObservable sets the OnPointerEnterObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointerenterobservable
func (s *ScrollViewer) SetOnPointerEnterObservable(onPointerEnterObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerEnterObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// OnPointerMoveObservable returns the OnPointerMoveObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointermoveobservable
func (s *ScrollViewer) OnPointerMoveObservable(onPointerMoveObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerMoveObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetOnPointerMoveObservable sets the OnPointerMoveObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointermoveobservable
func (s *ScrollViewer) SetOnPointerMoveObservable(onPointerMoveObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerMoveObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// OnPointerOutObservable returns the OnPointerOutObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointeroutobservable
func (s *ScrollViewer) OnPointerOutObservable(onPointerOutObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerOutObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetOnPointerOutObservable sets the OnPointerOutObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointeroutobservable
func (s *ScrollViewer) SetOnPointerOutObservable(onPointerOutObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerOutObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// OnPointerUpObservable returns the OnPointerUpObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointerupobservable
func (s *ScrollViewer) OnPointerUpObservable(onPointerUpObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerUpObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetOnPointerUpObservable sets the OnPointerUpObservable property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#onpointerupobservable
func (s *ScrollViewer) SetOnPointerUpObservable(onPointerUpObservable *Observable) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(onPointerUpObservable.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// PaddingBottom returns the PaddingBottom property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingbottom
func (s *ScrollViewer) PaddingBottom(paddingBottom string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingBottom)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetPaddingBottom sets the PaddingBottom property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingbottom
func (s *ScrollViewer) SetPaddingBottom(paddingBottom string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingBottom)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// PaddingBottomInPixels returns the PaddingBottomInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingbottominpixels
func (s *ScrollViewer) PaddingBottomInPixels(paddingBottomInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingBottomInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetPaddingBottomInPixels sets the PaddingBottomInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingbottominpixels
func (s *ScrollViewer) SetPaddingBottomInPixels(paddingBottomInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingBottomInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// PaddingLeft returns the PaddingLeft property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingleft
func (s *ScrollViewer) PaddingLeft(paddingLeft string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingLeft)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetPaddingLeft sets the PaddingLeft property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingleft
func (s *ScrollViewer) SetPaddingLeft(paddingLeft string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingLeft)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// PaddingLeftInPixels returns the PaddingLeftInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingleftinpixels
func (s *ScrollViewer) PaddingLeftInPixels(paddingLeftInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingLeftInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetPaddingLeftInPixels sets the PaddingLeftInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingleftinpixels
func (s *ScrollViewer) SetPaddingLeftInPixels(paddingLeftInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingLeftInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// PaddingRight returns the PaddingRight property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingright
func (s *ScrollViewer) PaddingRight(paddingRight string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingRight)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetPaddingRight sets the PaddingRight property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingright
func (s *ScrollViewer) SetPaddingRight(paddingRight string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingRight)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// PaddingRightInPixels returns the PaddingRightInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingrightinpixels
func (s *ScrollViewer) PaddingRightInPixels(paddingRightInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingRightInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetPaddingRightInPixels sets the PaddingRightInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingrightinpixels
func (s *ScrollViewer) SetPaddingRightInPixels(paddingRightInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingRightInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// PaddingTop returns the PaddingTop property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingtop
func (s *ScrollViewer) PaddingTop(paddingTop string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingTop)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetPaddingTop sets the PaddingTop property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingtop
func (s *ScrollViewer) SetPaddingTop(paddingTop string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingTop)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// PaddingTopInPixels returns the PaddingTopInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingtopinpixels
func (s *ScrollViewer) PaddingTopInPixels(paddingTopInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingTopInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetPaddingTopInPixels sets the PaddingTopInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#paddingtopinpixels
func (s *ScrollViewer) SetPaddingTopInPixels(paddingTopInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(paddingTopInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Parent returns the Parent property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#parent
func (s *ScrollViewer) Parent(parent *Container) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(parent.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetParent sets the Parent property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#parent
func (s *ScrollViewer) SetParent(parent *Container) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(parent.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Rotation returns the Rotation property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#rotation
func (s *ScrollViewer) Rotation(rotation float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(rotation)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetRotation sets the Rotation property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#rotation
func (s *ScrollViewer) SetRotation(rotation float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(rotation)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ScaleX returns the ScaleX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#scalex
func (s *ScrollViewer) ScaleX(scaleX float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(scaleX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetScaleX sets the ScaleX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#scalex
func (s *ScrollViewer) SetScaleX(scaleX float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(scaleX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ScaleY returns the ScaleY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#scaley
func (s *ScrollViewer) ScaleY(scaleY float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(scaleY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetScaleY sets the ScaleY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#scaley
func (s *ScrollViewer) SetScaleY(scaleY float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(scaleY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ScrollBackground returns the ScrollBackground property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#scrollbackground
func (s *ScrollViewer) ScrollBackground(scrollBackground string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(scrollBackground)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetScrollBackground sets the ScrollBackground property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#scrollbackground
func (s *ScrollViewer) SetScrollBackground(scrollBackground string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(scrollBackground)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ShadowBlur returns the ShadowBlur property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#shadowblur
func (s *ScrollViewer) ShadowBlur(shadowBlur float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(shadowBlur)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetShadowBlur sets the ShadowBlur property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#shadowblur
func (s *ScrollViewer) SetShadowBlur(shadowBlur float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(shadowBlur)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ShadowColor returns the ShadowColor property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#shadowcolor
func (s *ScrollViewer) ShadowColor(shadowColor string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(shadowColor)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetShadowColor sets the ShadowColor property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#shadowcolor
func (s *ScrollViewer) SetShadowColor(shadowColor string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(shadowColor)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ShadowOffsetX returns the ShadowOffsetX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#shadowoffsetx
func (s *ScrollViewer) ShadowOffsetX(shadowOffsetX float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(shadowOffsetX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetShadowOffsetX sets the ShadowOffsetX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#shadowoffsetx
func (s *ScrollViewer) SetShadowOffsetX(shadowOffsetX float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(shadowOffsetX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ShadowOffsetY returns the ShadowOffsetY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#shadowoffsety
func (s *ScrollViewer) ShadowOffsetY(shadowOffsetY float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(shadowOffsetY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetShadowOffsetY sets the ShadowOffsetY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#shadowoffsety
func (s *ScrollViewer) SetShadowOffsetY(shadowOffsetY float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(shadowOffsetY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Style returns the Style property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#style
func (s *ScrollViewer) Style(style *Style) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(style.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetStyle sets the Style property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#style
func (s *ScrollViewer) SetStyle(style *Style) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(style.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Thickness returns the Thickness property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#thickness
func (s *ScrollViewer) Thickness(thickness float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(thickness)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetThickness sets the Thickness property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#thickness
func (s *ScrollViewer) SetThickness(thickness float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(thickness)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ThumbHeight returns the ThumbHeight property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#thumbheight
func (s *ScrollViewer) ThumbHeight(thumbHeight float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(thumbHeight)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetThumbHeight sets the ThumbHeight property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#thumbheight
func (s *ScrollViewer) SetThumbHeight(thumbHeight float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(thumbHeight)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ThumbImage returns the ThumbImage property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#thumbimage
func (s *ScrollViewer) ThumbImage(thumbImage *Image) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(thumbImage.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetThumbImage sets the ThumbImage property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#thumbimage
func (s *ScrollViewer) SetThumbImage(thumbImage *Image) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(thumbImage.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ThumbLength returns the ThumbLength property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#thumblength
func (s *ScrollViewer) ThumbLength(thumbLength float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(thumbLength)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetThumbLength sets the ThumbLength property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#thumblength
func (s *ScrollViewer) SetThumbLength(thumbLength float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(thumbLength)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Top returns the Top property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#top
func (s *ScrollViewer) Top(top string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(top)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetTop sets the Top property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#top
func (s *ScrollViewer) SetTop(top string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(top)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// TopInPixels returns the TopInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#topinpixels
func (s *ScrollViewer) TopInPixels(topInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(topInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetTopInPixels sets the TopInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#topinpixels
func (s *ScrollViewer) SetTopInPixels(topInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(topInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// TransformCenterX returns the TransformCenterX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#transformcenterx
func (s *ScrollViewer) TransformCenterX(transformCenterX float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(transformCenterX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetTransformCenterX sets the TransformCenterX property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#transformcenterx
func (s *ScrollViewer) SetTransformCenterX(transformCenterX float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(transformCenterX)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// TransformCenterY returns the TransformCenterY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#transformcentery
func (s *ScrollViewer) TransformCenterY(transformCenterY float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(transformCenterY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetTransformCenterY sets the TransformCenterY property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#transformcentery
func (s *ScrollViewer) SetTransformCenterY(transformCenterY float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(transformCenterY)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// TypeName returns the TypeName property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#typename
func (s *ScrollViewer) TypeName(typeName string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(typeName)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetTypeName sets the TypeName property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#typename
func (s *ScrollViewer) SetTypeName(typeName string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(typeName)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// UniqueId returns the UniqueId property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#uniqueid
func (s *ScrollViewer) UniqueId(uniqueId float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(uniqueId)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetUniqueId sets the UniqueId property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#uniqueid
func (s *ScrollViewer) SetUniqueId(uniqueId float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(uniqueId)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// UseBitmapCache returns the UseBitmapCache property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#usebitmapcache
func (s *ScrollViewer) UseBitmapCache(useBitmapCache bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(useBitmapCache)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetUseBitmapCache sets the UseBitmapCache property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#usebitmapcache
func (s *ScrollViewer) SetUseBitmapCache(useBitmapCache bool) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(useBitmapCache)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_BOTTOM returns the VERTICAL_ALIGNMENT_BOTTOM property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#vertical_alignment_bottom
func (s *ScrollViewer) VERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(VERTICAL_ALIGNMENT_BOTTOM)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_BOTTOM sets the VERTICAL_ALIGNMENT_BOTTOM property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#vertical_alignment_bottom
func (s *ScrollViewer) SetVERTICAL_ALIGNMENT_BOTTOM(VERTICAL_ALIGNMENT_BOTTOM float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(VERTICAL_ALIGNMENT_BOTTOM)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_CENTER returns the VERTICAL_ALIGNMENT_CENTER property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#vertical_alignment_center
func (s *ScrollViewer) VERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(VERTICAL_ALIGNMENT_CENTER)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_CENTER sets the VERTICAL_ALIGNMENT_CENTER property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#vertical_alignment_center
func (s *ScrollViewer) SetVERTICAL_ALIGNMENT_CENTER(VERTICAL_ALIGNMENT_CENTER float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(VERTICAL_ALIGNMENT_CENTER)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// VERTICAL_ALIGNMENT_TOP returns the VERTICAL_ALIGNMENT_TOP property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#vertical_alignment_top
func (s *ScrollViewer) VERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(VERTICAL_ALIGNMENT_TOP)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetVERTICAL_ALIGNMENT_TOP sets the VERTICAL_ALIGNMENT_TOP property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#vertical_alignment_top
func (s *ScrollViewer) SetVERTICAL_ALIGNMENT_TOP(VERTICAL_ALIGNMENT_TOP float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(VERTICAL_ALIGNMENT_TOP)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// VerticalAlignment returns the VerticalAlignment property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#verticalalignment
func (s *ScrollViewer) VerticalAlignment(verticalAlignment float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(verticalAlignment)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetVerticalAlignment sets the VerticalAlignment property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#verticalalignment
func (s *ScrollViewer) SetVerticalAlignment(verticalAlignment float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(verticalAlignment)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// VerticalBar returns the VerticalBar property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#verticalbar
func (s *ScrollViewer) VerticalBar(verticalBar *ScrollBar) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(verticalBar.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetVerticalBar sets the VerticalBar property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#verticalbar
func (s *ScrollViewer) SetVerticalBar(verticalBar *ScrollBar) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(verticalBar.JSObject())
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// WheelPrecision returns the WheelPrecision property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#wheelprecision
func (s *ScrollViewer) WheelPrecision(wheelPrecision float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(wheelPrecision)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetWheelPrecision sets the WheelPrecision property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#wheelprecision
func (s *ScrollViewer) SetWheelPrecision(wheelPrecision float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(wheelPrecision)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// Width returns the Width property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#width
func (s *ScrollViewer) Width(width string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(width)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetWidth sets the Width property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#width
func (s *ScrollViewer) SetWidth(width string) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(width)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// WidthInPixels returns the WidthInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#widthinpixels
func (s *ScrollViewer) WidthInPixels(widthInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(widthInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetWidthInPixels sets the WidthInPixels property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#widthinpixels
func (s *ScrollViewer) SetWidthInPixels(widthInPixels float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(widthInPixels)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// ZIndex returns the ZIndex property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#zindex
func (s *ScrollViewer) ZIndex(zIndex float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(zIndex)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

// SetZIndex sets the ZIndex property of class ScrollViewer.
//
// https://doc.babylonjs.com/api/classes/babylon.scrollviewer#zindex
func (s *ScrollViewer) SetZIndex(zIndex float64) *ScrollViewer {
	p := ba.ctx.Get("ScrollViewer").New(zIndex)
	return ScrollViewerFromJSObject(p, ba.ctx)
}

*/
