// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ScaleGizmo represents a babylon.js ScaleGizmo.
// Gizmo that enables scaling a mesh along 3 axis
type ScaleGizmo struct {
	*Gizmo
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (s *ScaleGizmo) JSObject() js.Value { return s.p }

// ScaleGizmo returns a ScaleGizmo JavaScript class.
func (ba *Babylon) ScaleGizmo() *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo")
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// ScaleGizmoFromJSObject returns a wrapped ScaleGizmo JavaScript class.
func ScaleGizmoFromJSObject(p js.Value, ctx js.Value) *ScaleGizmo {
	return &ScaleGizmo{Gizmo: GizmoFromJSObject(p, ctx), ctx: ctx}
}

// ScaleGizmoArrayToJSArray returns a JavaScript Array for the wrapped array.
func ScaleGizmoArrayToJSArray(array []*ScaleGizmo) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewScaleGizmoOpts contains optional parameters for NewScaleGizmo.
type NewScaleGizmoOpts struct {
	GizmoLayer *UtilityLayerRenderer
}

// NewScaleGizmo returns a new ScaleGizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo
func (ba *Babylon) NewScaleGizmo(opts *NewScaleGizmoOpts) *ScaleGizmo {
	if opts == nil {
		opts = &NewScaleGizmoOpts{}
	}

	args := make([]interface{}, 0, 0+1)

	if opts.GizmoLayer == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.GizmoLayer.JSObject())
	}

	p := ba.ctx.Get("ScaleGizmo").New(args...)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// Dispose calls the Dispose method on the ScaleGizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#dispose
func (s *ScaleGizmo) Dispose() {

	s.p.Call("dispose")
}

// SetCustomMesh calls the SetCustomMesh method on the ScaleGizmo object.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#setcustommesh
func (s *ScaleGizmo) SetCustomMesh(mesh *Mesh) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, mesh.JSObject())

	s.p.Call("setCustomMesh", args...)
}

/*

// AttachedMesh returns the AttachedMesh property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#attachedmesh
func (s *ScaleGizmo) AttachedMesh(attachedMesh *AbstractMesh) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(attachedMesh.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetAttachedMesh sets the AttachedMesh property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#attachedmesh
func (s *ScaleGizmo) SetAttachedMesh(attachedMesh *AbstractMesh) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(attachedMesh.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// GizmoLayer returns the GizmoLayer property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#gizmolayer
func (s *ScaleGizmo) GizmoLayer(gizmoLayer *UtilityLayerRenderer) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(gizmoLayer.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetGizmoLayer sets the GizmoLayer property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#gizmolayer
func (s *ScaleGizmo) SetGizmoLayer(gizmoLayer *UtilityLayerRenderer) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(gizmoLayer.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// OnDragEndObservable returns the OnDragEndObservable property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#ondragendobservable
func (s *ScaleGizmo) OnDragEndObservable(onDragEndObservable *Observable) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(onDragEndObservable.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetOnDragEndObservable sets the OnDragEndObservable property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#ondragendobservable
func (s *ScaleGizmo) SetOnDragEndObservable(onDragEndObservable *Observable) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(onDragEndObservable.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// OnDragStartObservable returns the OnDragStartObservable property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#ondragstartobservable
func (s *ScaleGizmo) OnDragStartObservable(onDragStartObservable *Observable) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(onDragStartObservable.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetOnDragStartObservable sets the OnDragStartObservable property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#ondragstartobservable
func (s *ScaleGizmo) SetOnDragStartObservable(onDragStartObservable *Observable) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(onDragStartObservable.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// ScaleRatio returns the ScaleRatio property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#scaleratio
func (s *ScaleGizmo) ScaleRatio(scaleRatio float64) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(scaleRatio)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetScaleRatio sets the ScaleRatio property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#scaleratio
func (s *ScaleGizmo) SetScaleRatio(scaleRatio float64) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(scaleRatio)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// Sensitivity returns the Sensitivity property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#sensitivity
func (s *ScaleGizmo) Sensitivity(sensitivity float64) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(sensitivity)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetSensitivity sets the Sensitivity property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#sensitivity
func (s *ScaleGizmo) SetSensitivity(sensitivity float64) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(sensitivity)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SnapDistance returns the SnapDistance property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#snapdistance
func (s *ScaleGizmo) SnapDistance(snapDistance float64) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(snapDistance)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetSnapDistance sets the SnapDistance property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#snapdistance
func (s *ScaleGizmo) SetSnapDistance(snapDistance float64) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(snapDistance)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// UniformScaleGizmo returns the UniformScaleGizmo property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#uniformscalegizmo
func (s *ScaleGizmo) UniformScaleGizmo(uniformScaleGizmo *AxisScaleGizmo) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(uniformScaleGizmo.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetUniformScaleGizmo sets the UniformScaleGizmo property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#uniformscalegizmo
func (s *ScaleGizmo) SetUniformScaleGizmo(uniformScaleGizmo *AxisScaleGizmo) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(uniformScaleGizmo.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// UpdateGizmoPositionToMatchAttachedMesh returns the UpdateGizmoPositionToMatchAttachedMesh property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#updategizmopositiontomatchattachedmesh
func (s *ScaleGizmo) UpdateGizmoPositionToMatchAttachedMesh(updateGizmoPositionToMatchAttachedMesh bool) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(updateGizmoPositionToMatchAttachedMesh)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetUpdateGizmoPositionToMatchAttachedMesh sets the UpdateGizmoPositionToMatchAttachedMesh property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#updategizmopositiontomatchattachedmesh
func (s *ScaleGizmo) SetUpdateGizmoPositionToMatchAttachedMesh(updateGizmoPositionToMatchAttachedMesh bool) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(updateGizmoPositionToMatchAttachedMesh)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// UpdateGizmoRotationToMatchAttachedMesh returns the UpdateGizmoRotationToMatchAttachedMesh property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#updategizmorotationtomatchattachedmesh
func (s *ScaleGizmo) UpdateGizmoRotationToMatchAttachedMesh(updateGizmoRotationToMatchAttachedMesh bool) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(updateGizmoRotationToMatchAttachedMesh)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetUpdateGizmoRotationToMatchAttachedMesh sets the UpdateGizmoRotationToMatchAttachedMesh property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#updategizmorotationtomatchattachedmesh
func (s *ScaleGizmo) SetUpdateGizmoRotationToMatchAttachedMesh(updateGizmoRotationToMatchAttachedMesh bool) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(updateGizmoRotationToMatchAttachedMesh)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// UpdateScale returns the UpdateScale property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#updatescale
func (s *ScaleGizmo) UpdateScale(updateScale bool) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(updateScale)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetUpdateScale sets the UpdateScale property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#updatescale
func (s *ScaleGizmo) SetUpdateScale(updateScale bool) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(updateScale)
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// XGizmo returns the XGizmo property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#xgizmo
func (s *ScaleGizmo) XGizmo(xGizmo *AxisScaleGizmo) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(xGizmo.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetXGizmo sets the XGizmo property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#xgizmo
func (s *ScaleGizmo) SetXGizmo(xGizmo *AxisScaleGizmo) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(xGizmo.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// YGizmo returns the YGizmo property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#ygizmo
func (s *ScaleGizmo) YGizmo(yGizmo *AxisScaleGizmo) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(yGizmo.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetYGizmo sets the YGizmo property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#ygizmo
func (s *ScaleGizmo) SetYGizmo(yGizmo *AxisScaleGizmo) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(yGizmo.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// ZGizmo returns the ZGizmo property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#zgizmo
func (s *ScaleGizmo) ZGizmo(zGizmo *AxisScaleGizmo) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(zGizmo.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// SetZGizmo sets the ZGizmo property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#zgizmo
func (s *ScaleGizmo) SetZGizmo(zGizmo *AxisScaleGizmo) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(zGizmo.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// _rootMesh returns the _rootMesh property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#_rootmesh
func (s *ScaleGizmo) _rootMesh(_rootMesh *Mesh) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(_rootMesh.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

// Set_rootMesh sets the _rootMesh property of class ScaleGizmo.
//
// https://doc.babylonjs.com/api/classes/babylon.scalegizmo#_rootmesh
func (s *ScaleGizmo) Set_rootMesh(_rootMesh *Mesh) *ScaleGizmo {
	p := ba.ctx.Get("ScaleGizmo").New(_rootMesh.JSObject())
	return ScaleGizmoFromJSObject(p, ba.ctx)
}

*/
