// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// TrailMesh represents a babylon.js TrailMesh.
// Class used to create a trail following a mesh
type TrailMesh struct{ *Mesh }

// JSObject returns the underlying js.Value.
func (t *TrailMesh) JSObject() js.Value { return t.p }

// TrailMesh returns a TrailMesh JavaScript class.
func (b *Babylon) TrailMesh() *TrailMesh {
	p := b.ctx.Get("TrailMesh")
	return TrailMeshFromJSObject(p)
}

// TrailMeshFromJSObject returns a wrapped TrailMesh JavaScript class.
func TrailMeshFromJSObject(p js.Value) *TrailMesh {
	return &TrailMesh{MeshFromJSObject(p)}
}

// NewTrailMeshOpts contains optional parameters for NewTrailMesh.
type NewTrailMeshOpts struct {
	Diameter *float64

	Length *float64

	AutoStart *bool
}

// NewTrailMesh returns a new TrailMesh object.
//
// https://doc.babylonjs.com/api/classes/babylon.trailmesh
func (b *Babylon) NewTrailMesh(name string, generator *AbstractMesh, scene *Scene, opts *NewTrailMeshOpts) *TrailMesh {
	if opts == nil {
		opts = &NewTrailMeshOpts{}
	}

	p := b.ctx.Get("TrailMesh").New(name, generator.JSObject(), scene.JSObject(), opts.Diameter, opts.Length, opts.AutoStart.JSObject())
	return TrailMeshFromJSObject(p)
}

// TODO: methods
