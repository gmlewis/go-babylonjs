// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// OnAfterEnteringVRObservableEvent represents a babylon.js OnAfterEnteringVRObservableEvent.
// Event containing information after VR has been entered
type OnAfterEnteringVRObservableEvent struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (o *OnAfterEnteringVRObservableEvent) JSObject() js.Value { return o.p }

// OnAfterEnteringVRObservableEvent returns a OnAfterEnteringVRObservableEvent JavaScript class.
func (ba *Babylon) OnAfterEnteringVRObservableEvent() *OnAfterEnteringVRObservableEvent {
	p := ba.ctx.Get("OnAfterEnteringVRObservableEvent")
	return OnAfterEnteringVRObservableEventFromJSObject(p, ba.ctx)
}

// OnAfterEnteringVRObservableEventFromJSObject returns a wrapped OnAfterEnteringVRObservableEvent JavaScript class.
func OnAfterEnteringVRObservableEventFromJSObject(p js.Value, ctx js.Value) *OnAfterEnteringVRObservableEvent {
	return &OnAfterEnteringVRObservableEvent{p: p, ctx: ctx}
}

// OnAfterEnteringVRObservableEventArrayToJSArray returns a JavaScript Array for the wrapped array.
func OnAfterEnteringVRObservableEventArrayToJSArray(array []*OnAfterEnteringVRObservableEvent) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// Success returns the Success property of class OnAfterEnteringVRObservableEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.onafterenteringvrobservableevent#success
func (o *OnAfterEnteringVRObservableEvent) Success() bool {
	retVal := o.p.Get("success")
	return retVal.Bool()
}

// SetSuccess sets the Success property of class OnAfterEnteringVRObservableEvent.
//
// https://doc.babylonjs.com/api/classes/babylon.onafterenteringvrobservableevent#success
func (o *OnAfterEnteringVRObservableEvent) SetSuccess(success bool) *OnAfterEnteringVRObservableEvent {
	o.p.Set("success", success)
	return o
}
