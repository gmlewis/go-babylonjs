// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PointerTouch represents a babylon.js PointerTouch.
// Data relating to a touch event on the screen.
type PointerTouch struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (p *PointerTouch) JSObject() js.Value { return p.p }

// PointerTouch returns a PointerTouch JavaScript class.
func (ba *Babylon) PointerTouch() *PointerTouch {
	p := ba.ctx.Get("PointerTouch")
	return PointerTouchFromJSObject(p, ba.ctx)
}

// PointerTouchFromJSObject returns a wrapped PointerTouch JavaScript class.
func PointerTouchFromJSObject(p js.Value, ctx js.Value) *PointerTouch {
	return &PointerTouch{p: p, ctx: ctx}
}

// PointerTouchArrayToJSArray returns a JavaScript Array for the wrapped array.
func PointerTouchArrayToJSArray(array []*PointerTouch) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// PointerId returns the PointerId property of class PointerTouch.
//
// https://doc.babylonjs.com/api/classes/babylon.pointertouch#pointerid
func (p *PointerTouch) PointerId() float64 {
	retVal := p.p.Get("pointerId")
	return retVal.Float()
}

// SetPointerId sets the PointerId property of class PointerTouch.
//
// https://doc.babylonjs.com/api/classes/babylon.pointertouch#pointerid
func (p *PointerTouch) SetPointerId(pointerId float64) *PointerTouch {
	p.p.Set("pointerId", pointerId)
	return p
}

// Type returns the Type property of class PointerTouch.
//
// https://doc.babylonjs.com/api/classes/babylon.pointertouch#type
func (p *PointerTouch) Type() js.Value {
	retVal := p.p.Get("type")
	return retVal
}

// SetType sets the Type property of class PointerTouch.
//
// https://doc.babylonjs.com/api/classes/babylon.pointertouch#type
func (p *PointerTouch) SetType(jsType JSObject) *PointerTouch {
	p.p.Set("type", jsType.JSObject())
	return p
}

// X returns the X property of class PointerTouch.
//
// https://doc.babylonjs.com/api/classes/babylon.pointertouch#x
func (p *PointerTouch) X() float64 {
	retVal := p.p.Get("x")
	return retVal.Float()
}

// SetX sets the X property of class PointerTouch.
//
// https://doc.babylonjs.com/api/classes/babylon.pointertouch#x
func (p *PointerTouch) SetX(x float64) *PointerTouch {
	p.p.Set("x", x)
	return p
}

// Y returns the Y property of class PointerTouch.
//
// https://doc.babylonjs.com/api/classes/babylon.pointertouch#y
func (p *PointerTouch) Y() float64 {
	retVal := p.p.Get("y")
	return retVal.Float()
}

// SetY sets the Y property of class PointerTouch.
//
// https://doc.babylonjs.com/api/classes/babylon.pointertouch#y
func (p *PointerTouch) SetY(y float64) *PointerTouch {
	p.p.Set("y", y)
	return p
}
