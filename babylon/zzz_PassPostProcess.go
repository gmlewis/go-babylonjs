// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PassPostProcess represents a babylon.js PassPostProcess.
// PassPostProcess which produces an output the same as it&amp;#39;s input
type PassPostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (p *PassPostProcess) JSObject() js.Value { return p.p }

// PassPostProcess returns a PassPostProcess JavaScript class.
func (b *Babylon) PassPostProcess() *PassPostProcess {
	p := b.ctx.Get("PassPostProcess")
	return PassPostProcessFromJSObject(p)
}

// PassPostProcessFromJSObject returns a wrapped PassPostProcess JavaScript class.
func PassPostProcessFromJSObject(p js.Value) *PassPostProcess {
	return &PassPostProcess{PostProcessFromJSObject(p)}
}

// NewPassPostProcess returns a new PassPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.passpostprocess
func (b *Babylon) NewPassPostProcess(todo parameters) *PassPostProcess {
	p := b.ctx.Get("PassPostProcess").New(todo)
	return PassPostProcessFromJSObject(p)
}

// TODO: methods
