// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// LengthBlock represents a babylon.js LengthBlock.
// Block used to get the length of a vector
type LengthBlock struct {
	*NodeMaterialBlock
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (l *LengthBlock) JSObject() js.Value { return l.p }

// LengthBlock returns a LengthBlock JavaScript class.
func (ba *Babylon) LengthBlock() *LengthBlock {
	p := ba.ctx.Get("LengthBlock")
	return LengthBlockFromJSObject(p, ba.ctx)
}

// LengthBlockFromJSObject returns a wrapped LengthBlock JavaScript class.
func LengthBlockFromJSObject(p js.Value, ctx js.Value) *LengthBlock {
	return &LengthBlock{NodeMaterialBlock: NodeMaterialBlockFromJSObject(p, ctx), ctx: ctx}
}

// LengthBlockArrayToJSArray returns a JavaScript Array for the wrapped array.
func LengthBlockArrayToJSArray(array []*LengthBlock) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewLengthBlock returns a new LengthBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.lengthblock#constructor
func (ba *Babylon) NewLengthBlock(name string) *LengthBlock {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	p := ba.ctx.Get("LengthBlock").New(args...)
	return LengthBlockFromJSObject(p, ba.ctx)
}

// GetClassName calls the GetClassName method on the LengthBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.lengthblock#getclassname
func (l *LengthBlock) GetClassName() string {

	retVal := l.p.Call("getClassName")
	return retVal.String()
}

// Output returns the Output property of class LengthBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.lengthblock#output
func (l *LengthBlock) Output() *NodeMaterialConnectionPoint {
	retVal := l.p.Get("output")
	return NodeMaterialConnectionPointFromJSObject(retVal, l.ctx)
}

// SetOutput sets the Output property of class LengthBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.lengthblock#output
func (l *LengthBlock) SetOutput(output *NodeMaterialConnectionPoint) *LengthBlock {
	l.p.Set("output", output.JSObject())
	return l
}

// Value returns the Value property of class LengthBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.lengthblock#value
func (l *LengthBlock) Value() *NodeMaterialConnectionPoint {
	retVal := l.p.Get("value")
	return NodeMaterialConnectionPointFromJSObject(retVal, l.ctx)
}

// SetValue sets the Value property of class LengthBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.lengthblock#value
func (l *LengthBlock) SetValue(value *NodeMaterialConnectionPoint) *LengthBlock {
	l.p.Set("value", value.JSObject())
	return l
}
