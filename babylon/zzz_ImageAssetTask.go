// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ImageAssetTask represents a babylon.js ImageAssetTask.
// Define a task used by AssetsManager to load images
type ImageAssetTask struct {
	*AbstractAssetTask
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *ImageAssetTask) JSObject() js.Value { return i.p }

// ImageAssetTask returns a ImageAssetTask JavaScript class.
func (ba *Babylon) ImageAssetTask() *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask")
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// ImageAssetTaskFromJSObject returns a wrapped ImageAssetTask JavaScript class.
func ImageAssetTaskFromJSObject(p js.Value, ctx js.Value) *ImageAssetTask {
	return &ImageAssetTask{AbstractAssetTask: AbstractAssetTaskFromJSObject(p, ctx), ctx: ctx}
}

// ImageAssetTaskArrayToJSArray returns a JavaScript Array for the wrapped array.
func ImageAssetTaskArrayToJSArray(array []*ImageAssetTask) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewImageAssetTask returns a new ImageAssetTask object.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask
func (ba *Babylon) NewImageAssetTask(name string, url string) *ImageAssetTask {

	args := make([]interface{}, 0, 2+0)

	args = append(args, name)
	args = append(args, url)

	p := ba.ctx.Get("ImageAssetTask").New(args...)
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// RunTask calls the RunTask method on the ImageAssetTask object.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#runtask
func (i *ImageAssetTask) RunTask(scene *Scene, onSuccess func(), onError func()) {

	args := make([]interface{}, 0, 3+0)

	args = append(args, scene.JSObject())
	args = append(args, js.FuncOf(func(this js.Value, args []js.Value) interface{} { onSuccess(); return nil }))
	args = append(args, js.FuncOf(func(this js.Value, args []js.Value) interface{} { onError(); return nil }))

	i.p.Call("runTask", args...)
}

/*

// Image returns the Image property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#image
func (i *ImageAssetTask) Image(image js.Value) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(image)
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// SetImage sets the Image property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#image
func (i *ImageAssetTask) SetImage(image js.Value) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(image)
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#name
func (i *ImageAssetTask) Name(name string) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(name)
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#name
func (i *ImageAssetTask) SetName(name string) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(name)
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// OnError returns the OnError property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#onerror
func (i *ImageAssetTask) OnError(onError func()) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(js.FuncOf(func(this js.Value, args []js.Value) interface{} {onError(); return nil}))
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// SetOnError sets the OnError property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#onerror
func (i *ImageAssetTask) SetOnError(onError func()) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(js.FuncOf(func(this js.Value, args []js.Value) interface{} {onError(); return nil}))
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// OnSuccess returns the OnSuccess property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#onsuccess
func (i *ImageAssetTask) OnSuccess(onSuccess func()) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(js.FuncOf(func(this js.Value, args []js.Value) interface{} {onSuccess(); return nil}))
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// SetOnSuccess sets the OnSuccess property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#onsuccess
func (i *ImageAssetTask) SetOnSuccess(onSuccess func()) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(js.FuncOf(func(this js.Value, args []js.Value) interface{} {onSuccess(); return nil}))
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// Url returns the Url property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#url
func (i *ImageAssetTask) Url(url string) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(url)
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

// SetUrl sets the Url property of class ImageAssetTask.
//
// https://doc.babylonjs.com/api/classes/babylon.imageassettask#url
func (i *ImageAssetTask) SetUrl(url string) *ImageAssetTask {
	p := ba.ctx.Get("ImageAssetTask").New(url)
	return ImageAssetTaskFromJSObject(p, ba.ctx)
}

*/
