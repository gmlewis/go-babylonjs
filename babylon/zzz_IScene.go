// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IScene represents a babylon.js IScene.
// Loader interface with additional members.
type IScene struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IScene) JSObject() js.Value { return i.p }

// IScene returns a IScene JavaScript class.
func (ba *Babylon) IScene() *IScene {
	p := ba.ctx.Get("IScene")
	return ISceneFromJSObject(p, ba.ctx)
}

// ISceneFromJSObject returns a wrapped IScene JavaScript class.
func ISceneFromJSObject(p js.Value, ctx js.Value) *IScene {
	return &IScene{p: p, ctx: ctx}
}

// ISceneArrayToJSArray returns a JavaScript Array for the wrapped array.
func ISceneArrayToJSArray(array []*IScene) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}
