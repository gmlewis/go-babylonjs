// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// AdvancedDynamicTexture represents a babylon.js AdvancedDynamicTexture.
// Class used to create texture to support 2D GUI elements
//
// See: http://doc.babylonjs.com/how_to/gui
type AdvancedDynamicTexture struct {
	*DynamicTexture
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (a *AdvancedDynamicTexture) JSObject() js.Value { return a.p }

// AdvancedDynamicTexture returns a AdvancedDynamicTexture JavaScript class.
func (ba *Babylon) AdvancedDynamicTexture() *AdvancedDynamicTexture {
	p := ba.ctx.Get("AdvancedDynamicTexture")
	return AdvancedDynamicTextureFromJSObject(p, ba.ctx)
}

// AdvancedDynamicTextureFromJSObject returns a wrapped AdvancedDynamicTexture JavaScript class.
func AdvancedDynamicTextureFromJSObject(p js.Value, ctx js.Value) *AdvancedDynamicTexture {
	return &AdvancedDynamicTexture{DynamicTexture: DynamicTextureFromJSObject(p, ctx), ctx: ctx}
}

// NewAdvancedDynamicTextureOpts contains optional parameters for NewAdvancedDynamicTexture.
type NewAdvancedDynamicTextureOpts struct {
	GenerateMipMaps *JSBool

	SamplingMode *JSFloat64
}

// NewAdvancedDynamicTexture returns a new AdvancedDynamicTexture object.
//
// https://doc.babylonjs.com/api/classes/babylon.advanceddynamictexture
func (ba *Babylon) NewAdvancedDynamicTexture(name string, width float64, height float64, scene *Scene, opts *NewAdvancedDynamicTextureOpts) *AdvancedDynamicTexture {
	if opts == nil {
		opts = &NewAdvancedDynamicTextureOpts{}
	}

	p := ba.ctx.Get("AdvancedDynamicTexture").New(name, width, height, scene.JSObject(), opts.GenerateMipMaps.JSObject(), opts.SamplingMode.JSObject())
	return AdvancedDynamicTextureFromJSObject(p, ba.ctx)
}

// TODO: methods
