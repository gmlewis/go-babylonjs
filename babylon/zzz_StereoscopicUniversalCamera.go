// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// StereoscopicUniversalCamera represents a babylon.js StereoscopicUniversalCamera.
// Camera used to simulate stereoscopic rendering (based on UniversalCamera)
//
// See: http://doc.babylonjs.com/features/cameras
type StereoscopicUniversalCamera struct{ *UniversalCamera }

// JSObject returns the underlying js.Value.
func (s *StereoscopicUniversalCamera) JSObject() js.Value { return s.p }

// StereoscopicUniversalCamera returns a StereoscopicUniversalCamera JavaScript class.
func (ba *Babylon) StereoscopicUniversalCamera() *StereoscopicUniversalCamera {
	p := ba.ctx.Get("StereoscopicUniversalCamera")
	return StereoscopicUniversalCameraFromJSObject(p)
}

// StereoscopicUniversalCameraFromJSObject returns a wrapped StereoscopicUniversalCamera JavaScript class.
func StereoscopicUniversalCameraFromJSObject(p js.Value) *StereoscopicUniversalCamera {
	return &StereoscopicUniversalCamera{UniversalCameraFromJSObject(p)}
}

// NewStereoscopicUniversalCamera returns a new StereoscopicUniversalCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.stereoscopicuniversalcamera
func (ba *Babylon) NewStereoscopicUniversalCamera(name string, position *Vector3, interaxialDistance float64, isStereoscopicSideBySide bool, scene *Scene) *StereoscopicUniversalCamera {
	p := ba.ctx.Get("StereoscopicUniversalCamera").New(name, position.JSObject(), interaxialDistance, isStereoscopicSideBySide, scene.JSObject())
	return StereoscopicUniversalCameraFromJSObject(p)
}

// TODO: methods
