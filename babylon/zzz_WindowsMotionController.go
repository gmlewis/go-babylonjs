// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// WindowsMotionController represents a babylon.js WindowsMotionController.
// Defines the WindowsMotionController object that the state of the windows motion controller
type WindowsMotionController struct {
	*WebVRController
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (w *WindowsMotionController) JSObject() js.Value { return w.p }

// WindowsMotionController returns a WindowsMotionController JavaScript class.
func (ba *Babylon) WindowsMotionController() *WindowsMotionController {
	p := ba.ctx.Get("WindowsMotionController")
	return WindowsMotionControllerFromJSObject(p, ba.ctx)
}

// WindowsMotionControllerFromJSObject returns a wrapped WindowsMotionController JavaScript class.
func WindowsMotionControllerFromJSObject(p js.Value, ctx js.Value) *WindowsMotionController {
	return &WindowsMotionController{WebVRController: WebVRControllerFromJSObject(p, ctx), ctx: ctx}
}

// NewWindowsMotionController returns a new WindowsMotionController object.
//
// https://doc.babylonjs.com/api/classes/babylon.windowsmotioncontroller
func (ba *Babylon) NewWindowsMotionController(vrGamepad interface{}) *WindowsMotionController {
	p := ba.ctx.Get("WindowsMotionController").New(vrGamepad)
	return WindowsMotionControllerFromJSObject(p, ba.ctx)
}

// TODO: methods
