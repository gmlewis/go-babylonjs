// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// VolumeBasedPanel represents a babylon.js VolumeBasedPanel.
// Abstract class used to create a container panel deployed on the surface of a volume
type VolumeBasedPanel struct{ *Container3D }

// JSObject returns the underlying js.Value.
func (v *VolumeBasedPanel) JSObject() js.Value { return v.p }

// VolumeBasedPanel returns a VolumeBasedPanel JavaScript class.
func (b *Babylon) VolumeBasedPanel() *VolumeBasedPanel {
	p := b.ctx.Get("VolumeBasedPanel")
	return VolumeBasedPanelFromJSObject(p)
}

// VolumeBasedPanelFromJSObject returns a wrapped VolumeBasedPanel JavaScript class.
func VolumeBasedPanelFromJSObject(p js.Value) *VolumeBasedPanel {
	return &VolumeBasedPanel{Container3DFromJSObject(p)}
}

// NewVolumeBasedPanel returns a new VolumeBasedPanel object.
//
// https://doc.babylonjs.com/api/classes/babylon.volumebasedpanel
func (b *Babylon) NewVolumeBasedPanel(todo parameters) *VolumeBasedPanel {
	p := b.ctx.Get("VolumeBasedPanel").New(todo)
	return VolumeBasedPanelFromJSObject(p)
}

// TODO: methods
