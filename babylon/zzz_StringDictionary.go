// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// StringDictionary represents a babylon.js StringDictionary.
// This class implement a typical dictionary using a string as key and the generic type T as value.
// The underlying implementation relies on an associative array to ensure the best performances.
// The value can be anything including &amp;#39;null&amp;#39; but except &amp;#39;undefined&amp;#39;
type StringDictionary struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (s *StringDictionary) JSObject() js.Value { return s.p }

// StringDictionary returns a StringDictionary JavaScript class.
func (b *Babylon) StringDictionary() *StringDictionary {
	p := b.ctx.Get("StringDictionary")
	return StringDictionaryFromJSObject(p)
}

// StringDictionaryFromJSObject returns a wrapped StringDictionary JavaScript class.
func StringDictionaryFromJSObject(p js.Value) *StringDictionary {
	return &StringDictionary{p: p}
}

// TODO: methods
