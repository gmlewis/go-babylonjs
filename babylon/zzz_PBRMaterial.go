// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PBRMaterial represents a babylon.js PBRMaterial.
// The Physically based material of BJS.
//
// This offers the main features of a standard PBR material.
// For more information, please refer to the documentation :
// <a href="https://doc.babylonjs.com/how_to/physically_based_rendering">https://doc.babylonjs.com/how_to/physically_based_rendering</a>
type PBRMaterial struct {
	*PBRBaseMaterial
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (p *PBRMaterial) JSObject() js.Value { return p.p }

// PBRMaterial returns a PBRMaterial JavaScript class.
func (ba *Babylon) PBRMaterial() *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial")
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// PBRMaterialFromJSObject returns a wrapped PBRMaterial JavaScript class.
func PBRMaterialFromJSObject(p js.Value, ctx js.Value) *PBRMaterial {
	return &PBRMaterial{PBRBaseMaterial: PBRBaseMaterialFromJSObject(p, ctx), ctx: ctx}
}

// PBRMaterialArrayToJSArray returns a JavaScript Array for the wrapped array.
func PBRMaterialArrayToJSArray(array []*PBRMaterial) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewPBRMaterial returns a new PBRMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial
func (ba *Babylon) NewPBRMaterial(name string, scene *Scene) *PBRMaterial {

	args := make([]interface{}, 0, 2+0)

	args = append(args, name)
	args = append(args, scene.JSObject())

	p := ba.ctx.Get("PBRMaterial").New(args...)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// Clone calls the Clone method on the PBRMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#clone
func (p *PBRMaterial) Clone(name string) *PBRMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	retVal := p.p.Call("clone", args...)
	return PBRMaterialFromJSObject(retVal, p.ctx)
}

// GetClassName calls the GetClassName method on the PBRMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#getclassname
func (p *PBRMaterial) GetClassName() string {

	retVal := p.p.Call("getClassName")
	return retVal.String()
}

// Parse calls the Parse method on the PBRMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#parse
func (p *PBRMaterial) Parse(source interface{}, scene *Scene, rootUrl string) *PBRMaterial {

	args := make([]interface{}, 0, 3+0)

	args = append(args, source)
	args = append(args, scene.JSObject())
	args = append(args, rootUrl)

	retVal := p.p.Call("Parse", args...)
	return PBRMaterialFromJSObject(retVal, p.ctx)
}

// Serialize calls the Serialize method on the PBRMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#serialize
func (p *PBRMaterial) Serialize() interface{} {

	retVal := p.p.Call("serialize")
	return retVal
}

/*

// AlbedoColor returns the AlbedoColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#albedocolor
func (p *PBRMaterial) AlbedoColor(albedoColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(albedoColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetAlbedoColor sets the AlbedoColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#albedocolor
func (p *PBRMaterial) SetAlbedoColor(albedoColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(albedoColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// AlbedoTexture returns the AlbedoTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#albedotexture
func (p *PBRMaterial) AlbedoTexture(albedoTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(albedoTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetAlbedoTexture sets the AlbedoTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#albedotexture
func (p *PBRMaterial) SetAlbedoTexture(albedoTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(albedoTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// AlphaCutOff returns the AlphaCutOff property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#alphacutoff
func (p *PBRMaterial) AlphaCutOff(alphaCutOff float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(alphaCutOff)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetAlphaCutOff sets the AlphaCutOff property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#alphacutoff
func (p *PBRMaterial) SetAlphaCutOff(alphaCutOff float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(alphaCutOff)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// AmbientColor returns the AmbientColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#ambientcolor
func (p *PBRMaterial) AmbientColor(ambientColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(ambientColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetAmbientColor sets the AmbientColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#ambientcolor
func (p *PBRMaterial) SetAmbientColor(ambientColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(ambientColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// AmbientTexture returns the AmbientTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#ambienttexture
func (p *PBRMaterial) AmbientTexture(ambientTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(ambientTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetAmbientTexture sets the AmbientTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#ambienttexture
func (p *PBRMaterial) SetAmbientTexture(ambientTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(ambientTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// AmbientTextureImpactOnAnalyticalLights returns the AmbientTextureImpactOnAnalyticalLights property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#ambienttextureimpactonanalyticallights
func (p *PBRMaterial) AmbientTextureImpactOnAnalyticalLights(ambientTextureImpactOnAnalyticalLights float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(ambientTextureImpactOnAnalyticalLights)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetAmbientTextureImpactOnAnalyticalLights sets the AmbientTextureImpactOnAnalyticalLights property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#ambienttextureimpactonanalyticallights
func (p *PBRMaterial) SetAmbientTextureImpactOnAnalyticalLights(ambientTextureImpactOnAnalyticalLights float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(ambientTextureImpactOnAnalyticalLights)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// AmbientTextureStrength returns the AmbientTextureStrength property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#ambienttexturestrength
func (p *PBRMaterial) AmbientTextureStrength(ambientTextureStrength float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(ambientTextureStrength)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetAmbientTextureStrength sets the AmbientTextureStrength property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#ambienttexturestrength
func (p *PBRMaterial) SetAmbientTextureStrength(ambientTextureStrength float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(ambientTextureStrength)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// BumpTexture returns the BumpTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#bumptexture
func (p *PBRMaterial) BumpTexture(bumpTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(bumpTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetBumpTexture sets the BumpTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#bumptexture
func (p *PBRMaterial) SetBumpTexture(bumpTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(bumpTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// CameraColorCurves returns the CameraColorCurves property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracolorcurves
func (p *PBRMaterial) CameraColorCurves(cameraColorCurves *ColorCurves) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraColorCurves.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetCameraColorCurves sets the CameraColorCurves property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracolorcurves
func (p *PBRMaterial) SetCameraColorCurves(cameraColorCurves *ColorCurves) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraColorCurves.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// CameraColorCurvesEnabled returns the CameraColorCurvesEnabled property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracolorcurvesenabled
func (p *PBRMaterial) CameraColorCurvesEnabled(cameraColorCurvesEnabled bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraColorCurvesEnabled)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetCameraColorCurvesEnabled sets the CameraColorCurvesEnabled property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracolorcurvesenabled
func (p *PBRMaterial) SetCameraColorCurvesEnabled(cameraColorCurvesEnabled bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraColorCurvesEnabled)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// CameraColorGradingEnabled returns the CameraColorGradingEnabled property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracolorgradingenabled
func (p *PBRMaterial) CameraColorGradingEnabled(cameraColorGradingEnabled bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraColorGradingEnabled)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetCameraColorGradingEnabled sets the CameraColorGradingEnabled property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracolorgradingenabled
func (p *PBRMaterial) SetCameraColorGradingEnabled(cameraColorGradingEnabled bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraColorGradingEnabled)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// CameraColorGradingTexture returns the CameraColorGradingTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracolorgradingtexture
func (p *PBRMaterial) CameraColorGradingTexture(cameraColorGradingTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraColorGradingTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetCameraColorGradingTexture sets the CameraColorGradingTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracolorgradingtexture
func (p *PBRMaterial) SetCameraColorGradingTexture(cameraColorGradingTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraColorGradingTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// CameraContrast returns the CameraContrast property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracontrast
func (p *PBRMaterial) CameraContrast(cameraContrast float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraContrast)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetCameraContrast sets the CameraContrast property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameracontrast
func (p *PBRMaterial) SetCameraContrast(cameraContrast float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraContrast)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// CameraExposure returns the CameraExposure property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameraexposure
func (p *PBRMaterial) CameraExposure(cameraExposure float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraExposure)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetCameraExposure sets the CameraExposure property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameraexposure
func (p *PBRMaterial) SetCameraExposure(cameraExposure float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraExposure)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// CameraToneMappingEnabled returns the CameraToneMappingEnabled property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameratonemappingenabled
func (p *PBRMaterial) CameraToneMappingEnabled(cameraToneMappingEnabled bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraToneMappingEnabled)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetCameraToneMappingEnabled sets the CameraToneMappingEnabled property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#cameratonemappingenabled
func (p *PBRMaterial) SetCameraToneMappingEnabled(cameraToneMappingEnabled bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(cameraToneMappingEnabled)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// DEFAULT_AO_ON_ANALYTICAL_LIGHTS returns the DEFAULT_AO_ON_ANALYTICAL_LIGHTS property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#default_ao_on_analytical_lights
func (p *PBRMaterial) DEFAULT_AO_ON_ANALYTICAL_LIGHTS(DEFAULT_AO_ON_ANALYTICAL_LIGHTS float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(DEFAULT_AO_ON_ANALYTICAL_LIGHTS)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetDEFAULT_AO_ON_ANALYTICAL_LIGHTS sets the DEFAULT_AO_ON_ANALYTICAL_LIGHTS property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#default_ao_on_analytical_lights
func (p *PBRMaterial) SetDEFAULT_AO_ON_ANALYTICAL_LIGHTS(DEFAULT_AO_ON_ANALYTICAL_LIGHTS float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(DEFAULT_AO_ON_ANALYTICAL_LIGHTS)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// DirectIntensity returns the DirectIntensity property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#directintensity
func (p *PBRMaterial) DirectIntensity(directIntensity float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(directIntensity)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetDirectIntensity sets the DirectIntensity property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#directintensity
func (p *PBRMaterial) SetDirectIntensity(directIntensity float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(directIntensity)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// DisableBumpMap returns the DisableBumpMap property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#disablebumpmap
func (p *PBRMaterial) DisableBumpMap(disableBumpMap bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(disableBumpMap)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetDisableBumpMap sets the DisableBumpMap property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#disablebumpmap
func (p *PBRMaterial) SetDisableBumpMap(disableBumpMap bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(disableBumpMap)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// DisableLighting returns the DisableLighting property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#disablelighting
func (p *PBRMaterial) DisableLighting(disableLighting bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(disableLighting)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetDisableLighting sets the DisableLighting property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#disablelighting
func (p *PBRMaterial) SetDisableLighting(disableLighting bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(disableLighting)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// EmissiveColor returns the EmissiveColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#emissivecolor
func (p *PBRMaterial) EmissiveColor(emissiveColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(emissiveColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetEmissiveColor sets the EmissiveColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#emissivecolor
func (p *PBRMaterial) SetEmissiveColor(emissiveColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(emissiveColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// EmissiveIntensity returns the EmissiveIntensity property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#emissiveintensity
func (p *PBRMaterial) EmissiveIntensity(emissiveIntensity float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(emissiveIntensity)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetEmissiveIntensity sets the EmissiveIntensity property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#emissiveintensity
func (p *PBRMaterial) SetEmissiveIntensity(emissiveIntensity float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(emissiveIntensity)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// EmissiveTexture returns the EmissiveTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#emissivetexture
func (p *PBRMaterial) EmissiveTexture(emissiveTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(emissiveTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetEmissiveTexture sets the EmissiveTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#emissivetexture
func (p *PBRMaterial) SetEmissiveTexture(emissiveTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(emissiveTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// EnableSpecularAntiAliasing returns the EnableSpecularAntiAliasing property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#enablespecularantialiasing
func (p *PBRMaterial) EnableSpecularAntiAliasing(enableSpecularAntiAliasing bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(enableSpecularAntiAliasing)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetEnableSpecularAntiAliasing sets the EnableSpecularAntiAliasing property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#enablespecularantialiasing
func (p *PBRMaterial) SetEnableSpecularAntiAliasing(enableSpecularAntiAliasing bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(enableSpecularAntiAliasing)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// EnvironmentBRDFTexture returns the EnvironmentBRDFTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#environmentbrdftexture
func (p *PBRMaterial) EnvironmentBRDFTexture(environmentBRDFTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(environmentBRDFTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetEnvironmentBRDFTexture sets the EnvironmentBRDFTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#environmentbrdftexture
func (p *PBRMaterial) SetEnvironmentBRDFTexture(environmentBRDFTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(environmentBRDFTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// EnvironmentIntensity returns the EnvironmentIntensity property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#environmentintensity
func (p *PBRMaterial) EnvironmentIntensity(environmentIntensity float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(environmentIntensity)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetEnvironmentIntensity sets the EnvironmentIntensity property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#environmentintensity
func (p *PBRMaterial) SetEnvironmentIntensity(environmentIntensity float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(environmentIntensity)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// ForceAlphaTest returns the ForceAlphaTest property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#forcealphatest
func (p *PBRMaterial) ForceAlphaTest(forceAlphaTest bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(forceAlphaTest)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetForceAlphaTest sets the ForceAlphaTest property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#forcealphatest
func (p *PBRMaterial) SetForceAlphaTest(forceAlphaTest bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(forceAlphaTest)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// ForceIrradianceInFragment returns the ForceIrradianceInFragment property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#forceirradianceinfragment
func (p *PBRMaterial) ForceIrradianceInFragment(forceIrradianceInFragment bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(forceIrradianceInFragment)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetForceIrradianceInFragment sets the ForceIrradianceInFragment property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#forceirradianceinfragment
func (p *PBRMaterial) SetForceIrradianceInFragment(forceIrradianceInFragment bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(forceIrradianceInFragment)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// ForceNormalForward returns the ForceNormalForward property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#forcenormalforward
func (p *PBRMaterial) ForceNormalForward(forceNormalForward bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(forceNormalForward)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetForceNormalForward sets the ForceNormalForward property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#forcenormalforward
func (p *PBRMaterial) SetForceNormalForward(forceNormalForward bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(forceNormalForward)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// ImageProcessingConfiguration returns the ImageProcessingConfiguration property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#imageprocessingconfiguration
func (p *PBRMaterial) ImageProcessingConfiguration(imageProcessingConfiguration *ImageProcessingConfiguration) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(imageProcessingConfiguration.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetImageProcessingConfiguration sets the ImageProcessingConfiguration property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#imageprocessingconfiguration
func (p *PBRMaterial) SetImageProcessingConfiguration(imageProcessingConfiguration *ImageProcessingConfiguration) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(imageProcessingConfiguration.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// IndexOfRefraction returns the IndexOfRefraction property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#indexofrefraction
func (p *PBRMaterial) IndexOfRefraction(indexOfRefraction float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(indexOfRefraction)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetIndexOfRefraction sets the IndexOfRefraction property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#indexofrefraction
func (p *PBRMaterial) SetIndexOfRefraction(indexOfRefraction float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(indexOfRefraction)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// InvertNormalMapX returns the InvertNormalMapX property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#invertnormalmapx
func (p *PBRMaterial) InvertNormalMapX(invertNormalMapX bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(invertNormalMapX)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetInvertNormalMapX sets the InvertNormalMapX property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#invertnormalmapx
func (p *PBRMaterial) SetInvertNormalMapX(invertNormalMapX bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(invertNormalMapX)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// InvertNormalMapY returns the InvertNormalMapY property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#invertnormalmapy
func (p *PBRMaterial) InvertNormalMapY(invertNormalMapY bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(invertNormalMapY)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetInvertNormalMapY sets the InvertNormalMapY property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#invertnormalmapy
func (p *PBRMaterial) SetInvertNormalMapY(invertNormalMapY bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(invertNormalMapY)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// InvertRefractionY returns the InvertRefractionY property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#invertrefractiony
func (p *PBRMaterial) InvertRefractionY(invertRefractionY bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(invertRefractionY)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetInvertRefractionY sets the InvertRefractionY property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#invertrefractiony
func (p *PBRMaterial) SetInvertRefractionY(invertRefractionY bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(invertRefractionY)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// LightmapTexture returns the LightmapTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#lightmaptexture
func (p *PBRMaterial) LightmapTexture(lightmapTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(lightmapTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetLightmapTexture sets the LightmapTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#lightmaptexture
func (p *PBRMaterial) SetLightmapTexture(lightmapTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(lightmapTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// LinkRefractionWithTransparency returns the LinkRefractionWithTransparency property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#linkrefractionwithtransparency
func (p *PBRMaterial) LinkRefractionWithTransparency(linkRefractionWithTransparency bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(linkRefractionWithTransparency)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetLinkRefractionWithTransparency sets the LinkRefractionWithTransparency property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#linkrefractionwithtransparency
func (p *PBRMaterial) SetLinkRefractionWithTransparency(linkRefractionWithTransparency bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(linkRefractionWithTransparency)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// MaxSimultaneousLights returns the MaxSimultaneousLights property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#maxsimultaneouslights
func (p *PBRMaterial) MaxSimultaneousLights(maxSimultaneousLights float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(maxSimultaneousLights)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetMaxSimultaneousLights sets the MaxSimultaneousLights property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#maxsimultaneouslights
func (p *PBRMaterial) SetMaxSimultaneousLights(maxSimultaneousLights float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(maxSimultaneousLights)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// Metallic returns the Metallic property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#metallic
func (p *PBRMaterial) Metallic(metallic float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(metallic)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetMetallic sets the Metallic property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#metallic
func (p *PBRMaterial) SetMetallic(metallic float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(metallic)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// MetallicF0Factor returns the MetallicF0Factor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#metallicf0factor
func (p *PBRMaterial) MetallicF0Factor(metallicF0Factor float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(metallicF0Factor)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetMetallicF0Factor sets the MetallicF0Factor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#metallicf0factor
func (p *PBRMaterial) SetMetallicF0Factor(metallicF0Factor float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(metallicF0Factor)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// MetallicTexture returns the MetallicTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#metallictexture
func (p *PBRMaterial) MetallicTexture(metallicTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(metallicTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetMetallicTexture sets the MetallicTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#metallictexture
func (p *PBRMaterial) SetMetallicTexture(metallicTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(metallicTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// MicroSurface returns the MicroSurface property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#microsurface
func (p *PBRMaterial) MicroSurface(microSurface float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(microSurface)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetMicroSurface sets the MicroSurface property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#microsurface
func (p *PBRMaterial) SetMicroSurface(microSurface float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(microSurface)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// MicroSurfaceTexture returns the MicroSurfaceTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#microsurfacetexture
func (p *PBRMaterial) MicroSurfaceTexture(microSurfaceTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(microSurfaceTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetMicroSurfaceTexture sets the MicroSurfaceTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#microsurfacetexture
func (p *PBRMaterial) SetMicroSurfaceTexture(microSurfaceTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(microSurfaceTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// OpacityTexture returns the OpacityTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#opacitytexture
func (p *PBRMaterial) OpacityTexture(opacityTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(opacityTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetOpacityTexture sets the OpacityTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#opacitytexture
func (p *PBRMaterial) SetOpacityTexture(opacityTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(opacityTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// PBRMATERIAL_ALPHABLEND returns the PBRMATERIAL_ALPHABLEND property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#pbrmaterial_alphablend
func (p *PBRMaterial) PBRMATERIAL_ALPHABLEND(PBRMATERIAL_ALPHABLEND float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(PBRMATERIAL_ALPHABLEND)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetPBRMATERIAL_ALPHABLEND sets the PBRMATERIAL_ALPHABLEND property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#pbrmaterial_alphablend
func (p *PBRMaterial) SetPBRMATERIAL_ALPHABLEND(PBRMATERIAL_ALPHABLEND float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(PBRMATERIAL_ALPHABLEND)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// PBRMATERIAL_ALPHATEST returns the PBRMATERIAL_ALPHATEST property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#pbrmaterial_alphatest
func (p *PBRMaterial) PBRMATERIAL_ALPHATEST(PBRMATERIAL_ALPHATEST float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(PBRMATERIAL_ALPHATEST)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetPBRMATERIAL_ALPHATEST sets the PBRMATERIAL_ALPHATEST property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#pbrmaterial_alphatest
func (p *PBRMaterial) SetPBRMATERIAL_ALPHATEST(PBRMATERIAL_ALPHATEST float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(PBRMATERIAL_ALPHATEST)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// PBRMATERIAL_ALPHATESTANDBLEND returns the PBRMATERIAL_ALPHATESTANDBLEND property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#pbrmaterial_alphatestandblend
func (p *PBRMaterial) PBRMATERIAL_ALPHATESTANDBLEND(PBRMATERIAL_ALPHATESTANDBLEND float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(PBRMATERIAL_ALPHATESTANDBLEND)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetPBRMATERIAL_ALPHATESTANDBLEND sets the PBRMATERIAL_ALPHATESTANDBLEND property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#pbrmaterial_alphatestandblend
func (p *PBRMaterial) SetPBRMATERIAL_ALPHATESTANDBLEND(PBRMATERIAL_ALPHATESTANDBLEND float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(PBRMATERIAL_ALPHATESTANDBLEND)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// PBRMATERIAL_OPAQUE returns the PBRMATERIAL_OPAQUE property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#pbrmaterial_opaque
func (p *PBRMaterial) PBRMATERIAL_OPAQUE(PBRMATERIAL_OPAQUE float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(PBRMATERIAL_OPAQUE)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetPBRMATERIAL_OPAQUE sets the PBRMATERIAL_OPAQUE property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#pbrmaterial_opaque
func (p *PBRMaterial) SetPBRMATERIAL_OPAQUE(PBRMATERIAL_OPAQUE float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(PBRMATERIAL_OPAQUE)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// ParallaxScaleBias returns the ParallaxScaleBias property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#parallaxscalebias
func (p *PBRMaterial) ParallaxScaleBias(parallaxScaleBias float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(parallaxScaleBias)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetParallaxScaleBias sets the ParallaxScaleBias property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#parallaxscalebias
func (p *PBRMaterial) SetParallaxScaleBias(parallaxScaleBias float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(parallaxScaleBias)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// ReflectionColor returns the ReflectionColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#reflectioncolor
func (p *PBRMaterial) ReflectionColor(reflectionColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(reflectionColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetReflectionColor sets the ReflectionColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#reflectioncolor
func (p *PBRMaterial) SetReflectionColor(reflectionColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(reflectionColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// ReflectionTexture returns the ReflectionTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#reflectiontexture
func (p *PBRMaterial) ReflectionTexture(reflectionTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(reflectionTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetReflectionTexture sets the ReflectionTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#reflectiontexture
func (p *PBRMaterial) SetReflectionTexture(reflectionTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(reflectionTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// ReflectivityColor returns the ReflectivityColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#reflectivitycolor
func (p *PBRMaterial) ReflectivityColor(reflectivityColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(reflectivityColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetReflectivityColor sets the ReflectivityColor property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#reflectivitycolor
func (p *PBRMaterial) SetReflectivityColor(reflectivityColor *Color3) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(reflectivityColor.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// ReflectivityTexture returns the ReflectivityTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#reflectivitytexture
func (p *PBRMaterial) ReflectivityTexture(reflectivityTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(reflectivityTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetReflectivityTexture sets the ReflectivityTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#reflectivitytexture
func (p *PBRMaterial) SetReflectivityTexture(reflectivityTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(reflectivityTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// RefractionTexture returns the RefractionTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#refractiontexture
func (p *PBRMaterial) RefractionTexture(refractionTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(refractionTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetRefractionTexture sets the RefractionTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#refractiontexture
func (p *PBRMaterial) SetRefractionTexture(refractionTexture *BaseTexture) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(refractionTexture.JSObject())
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// Roughness returns the Roughness property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#roughness
func (p *PBRMaterial) Roughness(roughness float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(roughness)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetRoughness sets the Roughness property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#roughness
func (p *PBRMaterial) SetRoughness(roughness float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(roughness)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SpecularIntensity returns the SpecularIntensity property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#specularintensity
func (p *PBRMaterial) SpecularIntensity(specularIntensity float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(specularIntensity)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetSpecularIntensity sets the SpecularIntensity property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#specularintensity
func (p *PBRMaterial) SetSpecularIntensity(specularIntensity float64) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(specularIntensity)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// TwoSidedLighting returns the TwoSidedLighting property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#twosidedlighting
func (p *PBRMaterial) TwoSidedLighting(twoSidedLighting bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(twoSidedLighting)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetTwoSidedLighting sets the TwoSidedLighting property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#twosidedlighting
func (p *PBRMaterial) SetTwoSidedLighting(twoSidedLighting bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(twoSidedLighting)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// Unlit returns the Unlit property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#unlit
func (p *PBRMaterial) Unlit(unlit bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(unlit)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUnlit sets the Unlit property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#unlit
func (p *PBRMaterial) SetUnlit(unlit bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(unlit)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseAlphaFresnel returns the UseAlphaFresnel property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usealphafresnel
func (p *PBRMaterial) UseAlphaFresnel(useAlphaFresnel bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAlphaFresnel)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseAlphaFresnel sets the UseAlphaFresnel property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usealphafresnel
func (p *PBRMaterial) SetUseAlphaFresnel(useAlphaFresnel bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAlphaFresnel)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseAlphaFromAlbedoTexture returns the UseAlphaFromAlbedoTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usealphafromalbedotexture
func (p *PBRMaterial) UseAlphaFromAlbedoTexture(useAlphaFromAlbedoTexture bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAlphaFromAlbedoTexture)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseAlphaFromAlbedoTexture sets the UseAlphaFromAlbedoTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usealphafromalbedotexture
func (p *PBRMaterial) SetUseAlphaFromAlbedoTexture(useAlphaFromAlbedoTexture bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAlphaFromAlbedoTexture)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseAmbientInGrayScale returns the UseAmbientInGrayScale property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useambientingrayscale
func (p *PBRMaterial) UseAmbientInGrayScale(useAmbientInGrayScale bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAmbientInGrayScale)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseAmbientInGrayScale sets the UseAmbientInGrayScale property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useambientingrayscale
func (p *PBRMaterial) SetUseAmbientInGrayScale(useAmbientInGrayScale bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAmbientInGrayScale)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseAmbientOcclusionFromMetallicTextureRed returns the UseAmbientOcclusionFromMetallicTextureRed property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useambientocclusionfrommetallictexturered
func (p *PBRMaterial) UseAmbientOcclusionFromMetallicTextureRed(useAmbientOcclusionFromMetallicTextureRed bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAmbientOcclusionFromMetallicTextureRed)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseAmbientOcclusionFromMetallicTextureRed sets the UseAmbientOcclusionFromMetallicTextureRed property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useambientocclusionfrommetallictexturered
func (p *PBRMaterial) SetUseAmbientOcclusionFromMetallicTextureRed(useAmbientOcclusionFromMetallicTextureRed bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAmbientOcclusionFromMetallicTextureRed)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseAutoMicroSurfaceFromReflectivityMap returns the UseAutoMicroSurfaceFromReflectivityMap property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useautomicrosurfacefromreflectivitymap
func (p *PBRMaterial) UseAutoMicroSurfaceFromReflectivityMap(useAutoMicroSurfaceFromReflectivityMap bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAutoMicroSurfaceFromReflectivityMap)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseAutoMicroSurfaceFromReflectivityMap sets the UseAutoMicroSurfaceFromReflectivityMap property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useautomicrosurfacefromreflectivitymap
func (p *PBRMaterial) SetUseAutoMicroSurfaceFromReflectivityMap(useAutoMicroSurfaceFromReflectivityMap bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useAutoMicroSurfaceFromReflectivityMap)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseGLTFLightFalloff returns the UseGLTFLightFalloff property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usegltflightfalloff
func (p *PBRMaterial) UseGLTFLightFalloff(useGLTFLightFalloff bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useGLTFLightFalloff)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseGLTFLightFalloff sets the UseGLTFLightFalloff property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usegltflightfalloff
func (p *PBRMaterial) SetUseGLTFLightFalloff(useGLTFLightFalloff bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useGLTFLightFalloff)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseHorizonOcclusion returns the UseHorizonOcclusion property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usehorizonocclusion
func (p *PBRMaterial) UseHorizonOcclusion(useHorizonOcclusion bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useHorizonOcclusion)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseHorizonOcclusion sets the UseHorizonOcclusion property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usehorizonocclusion
func (p *PBRMaterial) SetUseHorizonOcclusion(useHorizonOcclusion bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useHorizonOcclusion)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseLightmapAsShadowmap returns the UseLightmapAsShadowmap property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#uselightmapasshadowmap
func (p *PBRMaterial) UseLightmapAsShadowmap(useLightmapAsShadowmap bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useLightmapAsShadowmap)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseLightmapAsShadowmap sets the UseLightmapAsShadowmap property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#uselightmapasshadowmap
func (p *PBRMaterial) SetUseLightmapAsShadowmap(useLightmapAsShadowmap bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useLightmapAsShadowmap)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseLinearAlphaFresnel returns the UseLinearAlphaFresnel property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#uselinearalphafresnel
func (p *PBRMaterial) UseLinearAlphaFresnel(useLinearAlphaFresnel bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useLinearAlphaFresnel)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseLinearAlphaFresnel sets the UseLinearAlphaFresnel property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#uselinearalphafresnel
func (p *PBRMaterial) SetUseLinearAlphaFresnel(useLinearAlphaFresnel bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useLinearAlphaFresnel)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseMetallicF0FactorFromMetallicTexture returns the UseMetallicF0FactorFromMetallicTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usemetallicf0factorfrommetallictexture
func (p *PBRMaterial) UseMetallicF0FactorFromMetallicTexture(useMetallicF0FactorFromMetallicTexture bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useMetallicF0FactorFromMetallicTexture)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseMetallicF0FactorFromMetallicTexture sets the UseMetallicF0FactorFromMetallicTexture property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usemetallicf0factorfrommetallictexture
func (p *PBRMaterial) SetUseMetallicF0FactorFromMetallicTexture(useMetallicF0FactorFromMetallicTexture bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useMetallicF0FactorFromMetallicTexture)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseMetallnessFromMetallicTextureBlue returns the UseMetallnessFromMetallicTextureBlue property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usemetallnessfrommetallictextureblue
func (p *PBRMaterial) UseMetallnessFromMetallicTextureBlue(useMetallnessFromMetallicTextureBlue bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useMetallnessFromMetallicTextureBlue)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseMetallnessFromMetallicTextureBlue sets the UseMetallnessFromMetallicTextureBlue property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usemetallnessfrommetallictextureblue
func (p *PBRMaterial) SetUseMetallnessFromMetallicTextureBlue(useMetallnessFromMetallicTextureBlue bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useMetallnessFromMetallicTextureBlue)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseMicroSurfaceFromReflectivityMapAlpha returns the UseMicroSurfaceFromReflectivityMapAlpha property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usemicrosurfacefromreflectivitymapalpha
func (p *PBRMaterial) UseMicroSurfaceFromReflectivityMapAlpha(useMicroSurfaceFromReflectivityMapAlpha bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useMicroSurfaceFromReflectivityMapAlpha)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseMicroSurfaceFromReflectivityMapAlpha sets the UseMicroSurfaceFromReflectivityMapAlpha property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usemicrosurfacefromreflectivitymapalpha
func (p *PBRMaterial) SetUseMicroSurfaceFromReflectivityMapAlpha(useMicroSurfaceFromReflectivityMapAlpha bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useMicroSurfaceFromReflectivityMapAlpha)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseObjectSpaceNormalMap returns the UseObjectSpaceNormalMap property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useobjectspacenormalmap
func (p *PBRMaterial) UseObjectSpaceNormalMap(useObjectSpaceNormalMap bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useObjectSpaceNormalMap)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseObjectSpaceNormalMap sets the UseObjectSpaceNormalMap property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useobjectspacenormalmap
func (p *PBRMaterial) SetUseObjectSpaceNormalMap(useObjectSpaceNormalMap bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useObjectSpaceNormalMap)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseParallax returns the UseParallax property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useparallax
func (p *PBRMaterial) UseParallax(useParallax bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useParallax)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseParallax sets the UseParallax property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useparallax
func (p *PBRMaterial) SetUseParallax(useParallax bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useParallax)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseParallaxOcclusion returns the UseParallaxOcclusion property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useparallaxocclusion
func (p *PBRMaterial) UseParallaxOcclusion(useParallaxOcclusion bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useParallaxOcclusion)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseParallaxOcclusion sets the UseParallaxOcclusion property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useparallaxocclusion
func (p *PBRMaterial) SetUseParallaxOcclusion(useParallaxOcclusion bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useParallaxOcclusion)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UsePhysicalLightFalloff returns the UsePhysicalLightFalloff property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usephysicallightfalloff
func (p *PBRMaterial) UsePhysicalLightFalloff(usePhysicalLightFalloff bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(usePhysicalLightFalloff)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUsePhysicalLightFalloff sets the UsePhysicalLightFalloff property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usephysicallightfalloff
func (p *PBRMaterial) SetUsePhysicalLightFalloff(usePhysicalLightFalloff bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(usePhysicalLightFalloff)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseRadianceOcclusion returns the UseRadianceOcclusion property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useradianceocclusion
func (p *PBRMaterial) UseRadianceOcclusion(useRadianceOcclusion bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useRadianceOcclusion)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseRadianceOcclusion sets the UseRadianceOcclusion property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useradianceocclusion
func (p *PBRMaterial) SetUseRadianceOcclusion(useRadianceOcclusion bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useRadianceOcclusion)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseRadianceOverAlpha returns the UseRadianceOverAlpha property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useradianceoveralpha
func (p *PBRMaterial) UseRadianceOverAlpha(useRadianceOverAlpha bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useRadianceOverAlpha)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseRadianceOverAlpha sets the UseRadianceOverAlpha property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useradianceoveralpha
func (p *PBRMaterial) SetUseRadianceOverAlpha(useRadianceOverAlpha bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useRadianceOverAlpha)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseRoughnessFromMetallicTextureAlpha returns the UseRoughnessFromMetallicTextureAlpha property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useroughnessfrommetallictexturealpha
func (p *PBRMaterial) UseRoughnessFromMetallicTextureAlpha(useRoughnessFromMetallicTextureAlpha bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useRoughnessFromMetallicTextureAlpha)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseRoughnessFromMetallicTextureAlpha sets the UseRoughnessFromMetallicTextureAlpha property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useroughnessfrommetallictexturealpha
func (p *PBRMaterial) SetUseRoughnessFromMetallicTextureAlpha(useRoughnessFromMetallicTextureAlpha bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useRoughnessFromMetallicTextureAlpha)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseRoughnessFromMetallicTextureGreen returns the UseRoughnessFromMetallicTextureGreen property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useroughnessfrommetallictexturegreen
func (p *PBRMaterial) UseRoughnessFromMetallicTextureGreen(useRoughnessFromMetallicTextureGreen bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useRoughnessFromMetallicTextureGreen)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseRoughnessFromMetallicTextureGreen sets the UseRoughnessFromMetallicTextureGreen property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#useroughnessfrommetallictexturegreen
func (p *PBRMaterial) SetUseRoughnessFromMetallicTextureGreen(useRoughnessFromMetallicTextureGreen bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useRoughnessFromMetallicTextureGreen)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// UseSpecularOverAlpha returns the UseSpecularOverAlpha property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usespecularoveralpha
func (p *PBRMaterial) UseSpecularOverAlpha(useSpecularOverAlpha bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useSpecularOverAlpha)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

// SetUseSpecularOverAlpha sets the UseSpecularOverAlpha property of class PBRMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrmaterial#usespecularoveralpha
func (p *PBRMaterial) SetUseSpecularOverAlpha(useSpecularOverAlpha bool) *PBRMaterial {
	p := ba.ctx.Get("PBRMaterial").New(useSpecularOverAlpha)
	return PBRMaterialFromJSObject(p, ba.ctx)
}

*/
