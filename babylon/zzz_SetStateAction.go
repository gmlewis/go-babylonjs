// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SetStateAction represents a babylon.js SetStateAction.
// This defines an action responsible to set a the state field of the target
// to a desired value once triggered.

//
// See: http://doc.babylonjs.com/how_to/how_to_use_actions
type SetStateAction struct{ *Action }

// JSObject returns the underlying js.Value.
func (s *SetStateAction) JSObject() js.Value { return s.p }

// SetStateAction returns a SetStateAction JavaScript class.
func (b *Babylon) SetStateAction() *SetStateAction {
	p := b.ctx.Get("SetStateAction")
	return SetStateActionFromJSObject(p)
}

// SetStateActionFromJSObject returns a wrapped SetStateAction JavaScript class.
func SetStateActionFromJSObject(p js.Value) *SetStateAction {
	return &SetStateAction{ActionFromJSObject(p)}
}

// NewSetStateAction returns a new SetStateAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.setstateaction
func (b *Babylon) NewSetStateAction(todo parameters) *SetStateAction {
	p := b.ctx.Get("SetStateAction").New(todo)
	return SetStateActionFromJSObject(p)
}

// TODO: methods
