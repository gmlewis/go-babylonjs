// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// CustomOptimization represents a babylon.js CustomOptimization.
// Defines an optimization based on user defined callback.
//
// See: http://doc.babylonjs.com/how_to/how_to_use_sceneoptimizer
type CustomOptimization struct {
	*SceneOptimization
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (c *CustomOptimization) JSObject() js.Value { return c.p }

// CustomOptimization returns a CustomOptimization JavaScript class.
func (ba *Babylon) CustomOptimization() *CustomOptimization {
	p := ba.ctx.Get("CustomOptimization")
	return CustomOptimizationFromJSObject(p, ba.ctx)
}

// CustomOptimizationFromJSObject returns a wrapped CustomOptimization JavaScript class.
func CustomOptimizationFromJSObject(p js.Value, ctx js.Value) *CustomOptimization {
	return &CustomOptimization{SceneOptimization: SceneOptimizationFromJSObject(p, ctx), ctx: ctx}
}

// NewCustomOptimizationOpts contains optional parameters for NewCustomOptimization.
type NewCustomOptimizationOpts struct {
	Priority *JSFloat64
}

// NewCustomOptimization returns a new CustomOptimization object.
//
// https://doc.babylonjs.com/api/classes/babylon.customoptimization
func (ba *Babylon) NewCustomOptimization(opts *NewCustomOptimizationOpts) *CustomOptimization {
	if opts == nil {
		opts = &NewCustomOptimizationOpts{}
	}

	p := ba.ctx.Get("CustomOptimization").New(opts.Priority.JSObject())
	return CustomOptimizationFromJSObject(p, ba.ctx)
}

// TODO: methods
