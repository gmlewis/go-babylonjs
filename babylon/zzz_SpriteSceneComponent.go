// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SpriteSceneComponent represents a babylon.js SpriteSceneComponent.
// Defines the sprite scene component responsible to manage sprites
// in a given scene.
type SpriteSceneComponent struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (s *SpriteSceneComponent) JSObject() js.Value { return s.p }

// SpriteSceneComponent returns a SpriteSceneComponent JavaScript class.
func (ba *Babylon) SpriteSceneComponent() *SpriteSceneComponent {
	p := ba.ctx.Get("SpriteSceneComponent")
	return SpriteSceneComponentFromJSObject(p)
}

// SpriteSceneComponentFromJSObject returns a wrapped SpriteSceneComponent JavaScript class.
func SpriteSceneComponentFromJSObject(p js.Value) *SpriteSceneComponent {
	return &SpriteSceneComponent{p: p}
}

// NewSpriteSceneComponent returns a new SpriteSceneComponent object.
//
// https://doc.babylonjs.com/api/classes/babylon.spritescenecomponent
func (ba *Babylon) NewSpriteSceneComponent(scene *Scene) *SpriteSceneComponent {
	p := ba.ctx.Get("SpriteSceneComponent").New(scene.JSObject())
	return SpriteSceneComponentFromJSObject(p)
}

// TODO: methods
