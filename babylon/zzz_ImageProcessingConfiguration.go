// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ImageProcessingConfiguration represents a babylon.js ImageProcessingConfiguration.
// This groups together the common properties used for image processing either in direct forward pass
// or through post processing effect depending on the use of the image processing pipeline in your scene
// or not.
type ImageProcessingConfiguration struct{}

// JSObject returns the underlying js.Value.
func (i *ImageProcessingConfiguration) JSObject() js.Value { return i.p }

// ImageProcessingConfiguration returns a ImageProcessingConfiguration JavaScript class.
func (b *Babylon) ImageProcessingConfiguration() *ImageProcessingConfiguration {
	p := b.ctx.Get("ImageProcessingConfiguration")
	return ImageProcessingConfigurationFromJSObject(p)
}

// ImageProcessingConfigurationFromJSObject returns a wrapped ImageProcessingConfiguration JavaScript class.
func ImageProcessingConfigurationFromJSObject(p js.Value) *ImageProcessingConfiguration {
	return &ImageProcessingConfiguration{p: p}
}

// NewImageProcessingConfiguration returns a new ImageProcessingConfiguration object.
//
// https://doc.babylonjs.com/api/classes/babylon.imageprocessingconfiguration
func (b *Babylon) NewImageProcessingConfiguration(todo parameters) *ImageProcessingConfiguration {
	p := b.ctx.Get("ImageProcessingConfiguration").New(todo)
	return ImageProcessingConfigurationFromJSObject(p)
}

// TODO: methods
