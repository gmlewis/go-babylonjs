// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ChromaticAberrationPostProcess represents a babylon.js ChromaticAberrationPostProcess.
// The ChromaticAberrationPostProcess separates the rgb channels in an image to produce chromatic distortion around the edges of the screen
type ChromaticAberrationPostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (c *ChromaticAberrationPostProcess) JSObject() js.Value { return c.p }

// ChromaticAberrationPostProcess returns a ChromaticAberrationPostProcess JavaScript class.
func (b *Babylon) ChromaticAberrationPostProcess() *ChromaticAberrationPostProcess {
	p := b.ctx.Get("ChromaticAberrationPostProcess")
	return ChromaticAberrationPostProcessFromJSObject(p)
}

// ChromaticAberrationPostProcessFromJSObject returns a wrapped ChromaticAberrationPostProcess JavaScript class.
func ChromaticAberrationPostProcessFromJSObject(p js.Value) *ChromaticAberrationPostProcess {
	return &ChromaticAberrationPostProcess{PostProcessFromJSObject(p)}
}

// NewChromaticAberrationPostProcess returns a new ChromaticAberrationPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.chromaticaberrationpostprocess
func (b *Babylon) NewChromaticAberrationPostProcess(todo parameters) *ChromaticAberrationPostProcess {
	p := b.ctx.Get("ChromaticAberrationPostProcess").New(todo)
	return ChromaticAberrationPostProcessFromJSObject(p)
}

// TODO: methods
