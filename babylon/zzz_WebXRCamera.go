// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// WebXRCamera represents a babylon.js WebXRCamera.
// WebXR Camera which holds the views for the xrSession
//
// See: https://doc.babylonjs.com/how_to/webxr
type WebXRCamera struct{ *FreeCamera }

// JSObject returns the underlying js.Value.
func (w *WebXRCamera) JSObject() js.Value { return w.p }

// WebXRCamera returns a WebXRCamera JavaScript class.
func (b *Babylon) WebXRCamera() *WebXRCamera {
	p := b.ctx.Get("WebXRCamera")
	return WebXRCameraFromJSObject(p)
}

// WebXRCameraFromJSObject returns a wrapped WebXRCamera JavaScript class.
func WebXRCameraFromJSObject(p js.Value) *WebXRCamera {
	return &WebXRCamera{FreeCameraFromJSObject(p)}
}

// NewWebXRCamera returns a new WebXRCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrcamera
func (b *Babylon) NewWebXRCamera(name string, scene *Scene) *WebXRCamera {
	p := b.ctx.Get("WebXRCamera").New(name, scene.JSObject())
	return WebXRCameraFromJSObject(p)
}

// TODO: methods
