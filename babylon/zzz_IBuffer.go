// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IBuffer represents a babylon.js IBuffer.
// Loader interface with additional members.
type IBuffer struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IBuffer) JSObject() js.Value { return i.p }

// IBuffer returns a IBuffer JavaScript class.
func (ba *Babylon) IBuffer() *IBuffer {
	p := ba.ctx.Get("IBuffer")
	return IBufferFromJSObject(p, ba.ctx)
}

// IBufferFromJSObject returns a wrapped IBuffer JavaScript class.
func IBufferFromJSObject(p js.Value, ctx js.Value) *IBuffer {
	return &IBuffer{p: p, ctx: ctx}
}

// IBufferArrayToJSArray returns a JavaScript Array for the wrapped array.
func IBufferArrayToJSArray(array []*IBuffer) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// ByteLength returns the ByteLength property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#bytelength
func (i *IBuffer) ByteLength(byteLength float64) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(byteLength)
	return IBufferFromJSObject(p, ba.ctx)
}

// SetByteLength sets the ByteLength property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#bytelength
func (i *IBuffer) SetByteLength(byteLength float64) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(byteLength)
	return IBufferFromJSObject(p, ba.ctx)
}

// Extensions returns the Extensions property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#extensions
func (i *IBuffer) Extensions(extensions js.Value) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(extensions)
	return IBufferFromJSObject(p, ba.ctx)
}

// SetExtensions sets the Extensions property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#extensions
func (i *IBuffer) SetExtensions(extensions js.Value) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(extensions)
	return IBufferFromJSObject(p, ba.ctx)
}

// Extras returns the Extras property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#extras
func (i *IBuffer) Extras(extras interface{}) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(extras)
	return IBufferFromJSObject(p, ba.ctx)
}

// SetExtras sets the Extras property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#extras
func (i *IBuffer) SetExtras(extras interface{}) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(extras)
	return IBufferFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#index
func (i *IBuffer) Index(index float64) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(index)
	return IBufferFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#index
func (i *IBuffer) SetIndex(index float64) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(index)
	return IBufferFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#name
func (i *IBuffer) Name(name string) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(name)
	return IBufferFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#name
func (i *IBuffer) SetName(name string) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(name)
	return IBufferFromJSObject(p, ba.ctx)
}

// Uri returns the Uri property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#uri
func (i *IBuffer) Uri(uri string) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(uri)
	return IBufferFromJSObject(p, ba.ctx)
}

// SetUri sets the Uri property of class IBuffer.
//
// https://doc.babylonjs.com/api/classes/babylon.ibuffer#uri
func (i *IBuffer) SetUri(uri string) *IBuffer {
	p := ba.ctx.Get("IBuffer").New(uri)
	return IBufferFromJSObject(p, ba.ctx)
}

*/
