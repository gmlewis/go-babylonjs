// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// GUI3DManager represents a babylon.js GUI3DManager.
// Class used to manage 3D user interface
//
// See: http://doc.babylonjs.com/how_to/gui3d
type GUI3DManager struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (g *GUI3DManager) JSObject() js.Value { return g.p }

// GUI3DManager returns a GUI3DManager JavaScript class.
func (ba *Babylon) GUI3DManager() *GUI3DManager {
	p := ba.ctx.Get("GUI3DManager")
	return GUI3DManagerFromJSObject(p, ba.ctx)
}

// GUI3DManagerFromJSObject returns a wrapped GUI3DManager JavaScript class.
func GUI3DManagerFromJSObject(p js.Value, ctx js.Value) *GUI3DManager {
	return &GUI3DManager{p: p, ctx: ctx}
}

// NewGUI3DManagerOpts contains optional parameters for NewGUI3DManager.
type NewGUI3DManagerOpts struct {
	Scene *Scene
}

// NewGUI3DManager returns a new GUI3DManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.gui3dmanager
func (ba *Babylon) NewGUI3DManager(opts *NewGUI3DManagerOpts) *GUI3DManager {
	if opts == nil {
		opts = &NewGUI3DManagerOpts{}
	}

	p := ba.ctx.Get("GUI3DManager").New(opts.Scene.JSObject())
	return GUI3DManagerFromJSObject(p, ba.ctx)
}

// TODO: methods
