// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PhysicsUpdraftEvent represents a babylon.js PhysicsUpdraftEvent.
// Represents a physics updraft event
type PhysicsUpdraftEvent struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (p *PhysicsUpdraftEvent) JSObject() js.Value { return p.p }

// PhysicsUpdraftEvent returns a PhysicsUpdraftEvent JavaScript class.
func (b *Babylon) PhysicsUpdraftEvent() *PhysicsUpdraftEvent {
	p := b.ctx.Get("PhysicsUpdraftEvent")
	return PhysicsUpdraftEventFromJSObject(p)
}

// PhysicsUpdraftEventFromJSObject returns a wrapped PhysicsUpdraftEvent JavaScript class.
func PhysicsUpdraftEventFromJSObject(p js.Value) *PhysicsUpdraftEvent {
	return &PhysicsUpdraftEvent{p: p}
}

// NewPhysicsUpdraftEvent returns a new PhysicsUpdraftEvent object.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsupdraftevent
func (b *Babylon) NewPhysicsUpdraftEvent(_scene *Scene, _origin *Vector3, _options *PhysicsUpdraftEventOptions) *PhysicsUpdraftEvent {
	p := b.ctx.Get("PhysicsUpdraftEvent").New(_scene.JSObject(), _origin.JSObject(), _options.JSObject())
	return PhysicsUpdraftEventFromJSObject(p)
}

// TODO: methods
