// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SoundTrack represents a babylon.js SoundTrack.
// It could be useful to isolate your music &amp;amp; sounds on several tracks to better manage volume on a grouped instance of sounds.
// It will be also used in a future release to apply effects on a specific track.

//
// See: http://doc.babylonjs.com/how_to/playing_sounds_and_music#using-sound-tracks
type SoundTrack struct{}

// JSObject returns the underlying js.Value.
func (s *SoundTrack) JSObject() js.Value { return s.p }

// SoundTrack returns a SoundTrack JavaScript class.
func (b *Babylon) SoundTrack() *SoundTrack {
	p := b.ctx.Get("SoundTrack")
	return SoundTrackFromJSObject(p)
}

// SoundTrackFromJSObject returns a wrapped SoundTrack JavaScript class.
func SoundTrackFromJSObject(p js.Value) *SoundTrack {
	return &SoundTrack{p: p}
}

// NewSoundTrack returns a new SoundTrack object.
//
// https://doc.babylonjs.com/api/classes/babylon.soundtrack
func (b *Babylon) NewSoundTrack(todo parameters) *SoundTrack {
	p := b.ctx.Get("SoundTrack").New(todo)
	return SoundTrackFromJSObject(p)
}

// TODO: methods
