// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ClipboardInfo represents a babylon.js ClipboardInfo.
// This class is used to store clipboard related info for the onClipboardObservable event.
type ClipboardInfo struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (c *ClipboardInfo) JSObject() js.Value { return c.p }

// ClipboardInfo returns a ClipboardInfo JavaScript class.
func (ba *Babylon) ClipboardInfo() *ClipboardInfo {
	p := ba.ctx.Get("ClipboardInfo")
	return ClipboardInfoFromJSObject(p, ba.ctx)
}

// ClipboardInfoFromJSObject returns a wrapped ClipboardInfo JavaScript class.
func ClipboardInfoFromJSObject(p js.Value, ctx js.Value) *ClipboardInfo {
	return &ClipboardInfo{p: p, ctx: ctx}
}

// ClipboardInfoArrayToJSArray returns a JavaScript Array for the wrapped array.
func ClipboardInfoArrayToJSArray(array []*ClipboardInfo) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewClipboardInfo returns a new ClipboardInfo object.
//
// https://doc.babylonjs.com/api/classes/babylon.clipboardinfo
func (ba *Babylon) NewClipboardInfo(jsType float64, event js.Value) *ClipboardInfo {

	args := make([]interface{}, 0, 2+0)

	args = append(args, jsType)
	args = append(args, event)

	p := ba.ctx.Get("ClipboardInfo").New(args...)
	return ClipboardInfoFromJSObject(p, ba.ctx)
}

// GetTypeFromCharacter calls the GetTypeFromCharacter method on the ClipboardInfo object.
//
// https://doc.babylonjs.com/api/classes/babylon.clipboardinfo#gettypefromcharacter
func (c *ClipboardInfo) GetTypeFromCharacter(keyCode float64) float64 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, keyCode)

	retVal := c.p.Call("GetTypeFromCharacter", args...)
	return retVal.Float()
}

// Event returns the Event property of class ClipboardInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.clipboardinfo#event
func (c *ClipboardInfo) Event() js.Value {
	retVal := c.p.Get("event")
	return retVal
}

// SetEvent sets the Event property of class ClipboardInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.clipboardinfo#event
func (c *ClipboardInfo) SetEvent(event js.Value) *ClipboardInfo {
	c.p.Set("event", event)
	return c
}

// Type returns the Type property of class ClipboardInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.clipboardinfo#type
func (c *ClipboardInfo) Type() float64 {
	retVal := c.p.Get("type")
	return retVal.Float()
}

// SetType sets the Type property of class ClipboardInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.clipboardinfo#type
func (c *ClipboardInfo) SetType(jsType float64) *ClipboardInfo {
	c.p.Set("type", jsType)
	return c
}
