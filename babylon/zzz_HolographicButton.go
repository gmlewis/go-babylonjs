// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// HolographicButton represents a babylon.js HolographicButton.
// Class used to create a holographic button in 3D
type HolographicButton struct {
	*Button3D
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (h *HolographicButton) JSObject() js.Value { return h.p }

// HolographicButton returns a HolographicButton JavaScript class.
func (ba *Babylon) HolographicButton() *HolographicButton {
	p := ba.ctx.Get("HolographicButton")
	return HolographicButtonFromJSObject(p, ba.ctx)
}

// HolographicButtonFromJSObject returns a wrapped HolographicButton JavaScript class.
func HolographicButtonFromJSObject(p js.Value, ctx js.Value) *HolographicButton {
	return &HolographicButton{Button3D: Button3DFromJSObject(p, ctx), ctx: ctx}
}

// NewHolographicButtonOpts contains optional parameters for NewHolographicButton.
type NewHolographicButtonOpts struct {
	Name *JSString

	ShareMaterials *JSBool
}

// NewHolographicButton returns a new HolographicButton object.
//
// https://doc.babylonjs.com/api/classes/babylon.holographicbutton
func (ba *Babylon) NewHolographicButton(opts *NewHolographicButtonOpts) *HolographicButton {
	if opts == nil {
		opts = &NewHolographicButtonOpts{}
	}

	p := ba.ctx.Get("HolographicButton").New(opts.Name.JSObject(), opts.ShareMaterials.JSObject())
	return HolographicButtonFromJSObject(p, ba.ctx)
}

// TODO: methods
