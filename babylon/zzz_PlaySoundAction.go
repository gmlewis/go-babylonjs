// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PlaySoundAction represents a babylon.js PlaySoundAction.
// This defines an action helpful to play a defined sound on a triggered action.
type PlaySoundAction struct{ *Action }

// JSObject returns the underlying js.Value.
func (p *PlaySoundAction) JSObject() js.Value { return p.p }

// PlaySoundAction returns a PlaySoundAction JavaScript class.
func (b *Babylon) PlaySoundAction() *PlaySoundAction {
	p := b.ctx.Get("PlaySoundAction")
	return PlaySoundActionFromJSObject(p)
}

// PlaySoundActionFromJSObject returns a wrapped PlaySoundAction JavaScript class.
func PlaySoundActionFromJSObject(p js.Value) *PlaySoundAction {
	return &PlaySoundAction{ActionFromJSObject(p)}
}

// NewPlaySoundActionOpts contains optional parameters for NewPlaySoundAction.
type NewPlaySoundActionOpts struct {
	Condition *Condition
}

// NewPlaySoundAction returns a new PlaySoundAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.playsoundaction
func (b *Babylon) NewPlaySoundAction(triggerOptions interface{}, sound *Sound, opts *NewPlaySoundActionOpts) *PlaySoundAction {
	if opts == nil {
		opts = &NewPlaySoundActionOpts{}
	}

	p := b.ctx.Get("PlaySoundAction").New(triggerOptions, sound.JSObject(), opts.Condition.JSObject())
	return PlaySoundActionFromJSObject(p)
}

// TODO: methods
