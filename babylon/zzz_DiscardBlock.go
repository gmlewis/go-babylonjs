// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// DiscardBlock represents a babylon.js DiscardBlock.
// Block used to discard a pixel if a value is smaller than a cutoff
type DiscardBlock struct {
	*NodeMaterialBlock
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (d *DiscardBlock) JSObject() js.Value { return d.p }

// DiscardBlock returns a DiscardBlock JavaScript class.
func (ba *Babylon) DiscardBlock() *DiscardBlock {
	p := ba.ctx.Get("DiscardBlock")
	return DiscardBlockFromJSObject(p, ba.ctx)
}

// DiscardBlockFromJSObject returns a wrapped DiscardBlock JavaScript class.
func DiscardBlockFromJSObject(p js.Value, ctx js.Value) *DiscardBlock {
	return &DiscardBlock{NodeMaterialBlock: NodeMaterialBlockFromJSObject(p, ctx), ctx: ctx}
}

// DiscardBlockArrayToJSArray returns a JavaScript Array for the wrapped array.
func DiscardBlockArrayToJSArray(array []*DiscardBlock) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewDiscardBlock returns a new DiscardBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.discardblock
func (ba *Babylon) NewDiscardBlock(name string) *DiscardBlock {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	p := ba.ctx.Get("DiscardBlock").New(args...)
	return DiscardBlockFromJSObject(p, ba.ctx)
}

// GetClassName calls the GetClassName method on the DiscardBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.discardblock#getclassname
func (d *DiscardBlock) GetClassName() string {

	retVal := d.p.Call("getClassName")
	return retVal.String()
}

// Cutoff returns the Cutoff property of class DiscardBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.discardblock#cutoff
func (d *DiscardBlock) Cutoff() *NodeMaterialConnectionPoint {
	retVal := d.p.Get("cutoff")
	return NodeMaterialConnectionPointFromJSObject(retVal, d.ctx)
}

// SetCutoff sets the Cutoff property of class DiscardBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.discardblock#cutoff
func (d *DiscardBlock) SetCutoff(cutoff *NodeMaterialConnectionPoint) *DiscardBlock {
	d.p.Set("cutoff", cutoff.JSObject())
	return d
}

// Value returns the Value property of class DiscardBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.discardblock#value
func (d *DiscardBlock) Value() *NodeMaterialConnectionPoint {
	retVal := d.p.Get("value")
	return NodeMaterialConnectionPointFromJSObject(retVal, d.ctx)
}

// SetValue sets the Value property of class DiscardBlock.
//
// https://doc.babylonjs.com/api/classes/babylon.discardblock#value
func (d *DiscardBlock) SetValue(value *NodeMaterialConnectionPoint) *DiscardBlock {
	d.p.Set("value", value.JSObject())
	return d
}
