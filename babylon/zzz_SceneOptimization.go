// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SceneOptimization represents a babylon.js SceneOptimization.
// Defines the root class used to create scene optimization to use with SceneOptimizer
//
// See: http://doc.babylonjs.com/how_to/how_to_use_sceneoptimizer
type SceneOptimization struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (s *SceneOptimization) JSObject() js.Value { return s.p }

// SceneOptimization returns a SceneOptimization JavaScript class.
func (ba *Babylon) SceneOptimization() *SceneOptimization {
	p := ba.ctx.Get("SceneOptimization")
	return SceneOptimizationFromJSObject(p)
}

// SceneOptimizationFromJSObject returns a wrapped SceneOptimization JavaScript class.
func SceneOptimizationFromJSObject(p js.Value) *SceneOptimization {
	return &SceneOptimization{p: p}
}

// NewSceneOptimizationOpts contains optional parameters for NewSceneOptimization.
type NewSceneOptimizationOpts struct {
	Priority *JSFloat64
}

// NewSceneOptimization returns a new SceneOptimization object.
//
// https://doc.babylonjs.com/api/classes/babylon.sceneoptimization
func (ba *Babylon) NewSceneOptimization(opts *NewSceneOptimizationOpts) *SceneOptimization {
	if opts == nil {
		opts = &NewSceneOptimizationOpts{}
	}

	p := ba.ctx.Get("SceneOptimization").New(opts.Priority)
	return SceneOptimizationFromJSObject(p)
}

// TODO: methods
