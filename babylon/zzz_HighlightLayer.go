// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// HighlightLayer represents a babylon.js HighlightLayer.
// The highlight layer Helps adding a glow effect around a mesh.
//
// !!! THIS REQUIRES AN ACTIVE STENCIL BUFFER ON THE CANVAS !!!
type HighlightLayer struct{ *EffectLayer }

// JSObject returns the underlying js.Value.
func (h *HighlightLayer) JSObject() js.Value { return h.p }

// HighlightLayer returns a HighlightLayer JavaScript class.
func (b *Babylon) HighlightLayer() *HighlightLayer {
	p := b.ctx.Get("HighlightLayer")
	return HighlightLayerFromJSObject(p)
}

// HighlightLayerFromJSObject returns a wrapped HighlightLayer JavaScript class.
func HighlightLayerFromJSObject(p js.Value) *HighlightLayer {
	return &HighlightLayer{EffectLayerFromJSObject(p)}
}

// NewHighlightLayerOpts contains optional parameters for NewHighlightLayer.
type NewHighlightLayerOpts struct {
	Options js.Value
}

// NewHighlightLayer returns a new HighlightLayer object.
//
// https://doc.babylonjs.com/api/classes/babylon.highlightlayer
func (b *Babylon) NewHighlightLayer(name string, scene *Scene, opts *NewHighlightLayerOpts) *HighlightLayer {
	if opts == nil {
		opts = &NewHighlightLayerOpts{}
	}

	p := b.ctx.Get("HighlightLayer").New(name, scene.JSObject(), opts.Options)
	return HighlightLayerFromJSObject(p)
}

// TODO: methods
