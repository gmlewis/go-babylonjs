// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// WeightedSound represents a babylon.js WeightedSound.
// Wraps one or more Sound objects and selects one with random weight for playback.
type WeightedSound struct{}

// JSObject returns the underlying js.Value.
func (w *WeightedSound) JSObject() js.Value { return w.p }

// WeightedSound returns a WeightedSound JavaScript class.
func (b *Babylon) WeightedSound() *WeightedSound {
	p := b.ctx.Get("WeightedSound")
	return WeightedSoundFromJSObject(p)
}

// WeightedSoundFromJSObject returns a wrapped WeightedSound JavaScript class.
func WeightedSoundFromJSObject(p js.Value) *WeightedSound {
	return &WeightedSound{p: p}
}

// NewWeightedSound returns a new WeightedSound object.
//
// https://doc.babylonjs.com/api/classes/babylon.weightedsound
func (b *Babylon) NewWeightedSound(todo parameters) *WeightedSound {
	p := b.ctx.Get("WeightedSound").New(todo)
	return WeightedSoundFromJSObject(p)
}

// TODO: methods
