// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ITextureInfo represents a babylon.js ITextureInfo.
// Loader interface with additional members.
type ITextureInfo struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *ITextureInfo) JSObject() js.Value { return i.p }

// ITextureInfo returns a ITextureInfo JavaScript class.
func (ba *Babylon) ITextureInfo() *ITextureInfo {
	p := ba.ctx.Get("ITextureInfo")
	return ITextureInfoFromJSObject(p, ba.ctx)
}

// ITextureInfoFromJSObject returns a wrapped ITextureInfo JavaScript class.
func ITextureInfoFromJSObject(p js.Value, ctx js.Value) *ITextureInfo {
	return &ITextureInfo{p: p, ctx: ctx}
}

// ITextureInfoArrayToJSArray returns a JavaScript Array for the wrapped array.
func ITextureInfoArrayToJSArray(array []*ITextureInfo) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

 */
