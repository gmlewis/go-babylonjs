// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// FresnelParameters represents a babylon.js FresnelParameters.
// This represents all the required information to add a fresnel effect on a material:
//
// See: http://doc.babylonjs.com/how_to/how_to_use_fresnelparameters
type FresnelParameters struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (f *FresnelParameters) JSObject() js.Value { return f.p }

// FresnelParameters returns a FresnelParameters JavaScript class.
func (ba *Babylon) FresnelParameters() *FresnelParameters {
	p := ba.ctx.Get("FresnelParameters")
	return FresnelParametersFromJSObject(p, ba.ctx)
}

// FresnelParametersFromJSObject returns a wrapped FresnelParameters JavaScript class.
func FresnelParametersFromJSObject(p js.Value, ctx js.Value) *FresnelParameters {
	return &FresnelParameters{p: p, ctx: ctx}
}

// FresnelParametersArrayToJSArray returns a JavaScript Array for the wrapped array.
func FresnelParametersArrayToJSArray(array []*FresnelParameters) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// Clone calls the Clone method on the FresnelParameters object.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#clone
func (f *FresnelParameters) Clone() *FresnelParameters {

	retVal := f.p.Call("clone")
	return FresnelParametersFromJSObject(retVal, f.ctx)
}

// Parse calls the Parse method on the FresnelParameters object.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#parse
func (f *FresnelParameters) Parse(parsedFresnelParameters JSObject) *FresnelParameters {

	args := make([]interface{}, 0, 1+0)

	if parsedFresnelParameters == nil {
		args = append(args, js.Null())
	} else {
		args = append(args, parsedFresnelParameters.JSObject())
	}

	retVal := f.p.Call("Parse", args...)
	return FresnelParametersFromJSObject(retVal, f.ctx)
}

// Serialize calls the Serialize method on the FresnelParameters object.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#serialize
func (f *FresnelParameters) Serialize() js.Value {

	retVal := f.p.Call("serialize")
	return retVal
}

// Bias returns the Bias property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#bias
func (f *FresnelParameters) Bias() float64 {
	retVal := f.p.Get("bias")
	return retVal.Float()
}

// SetBias sets the Bias property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#bias
func (f *FresnelParameters) SetBias(bias float64) *FresnelParameters {
	f.p.Set("bias", bias)
	return f
}

// IsEnabled returns the IsEnabled property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#isenabled
func (f *FresnelParameters) IsEnabled() bool {
	retVal := f.p.Get("isEnabled")
	return retVal.Bool()
}

// SetIsEnabled sets the IsEnabled property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#isenabled
func (f *FresnelParameters) SetIsEnabled(isEnabled bool) *FresnelParameters {
	f.p.Set("isEnabled", isEnabled)
	return f
}

// LeftColor returns the LeftColor property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#leftcolor
func (f *FresnelParameters) LeftColor() *Color3 {
	retVal := f.p.Get("leftColor")
	return Color3FromJSObject(retVal, f.ctx)
}

// SetLeftColor sets the LeftColor property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#leftcolor
func (f *FresnelParameters) SetLeftColor(leftColor *Color3) *FresnelParameters {
	f.p.Set("leftColor", leftColor.JSObject())
	return f
}

// Power returns the Power property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#power
func (f *FresnelParameters) Power() float64 {
	retVal := f.p.Get("power")
	return retVal.Float()
}

// SetPower sets the Power property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#power
func (f *FresnelParameters) SetPower(power float64) *FresnelParameters {
	f.p.Set("power", power)
	return f
}

// RightColor returns the RightColor property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#rightcolor
func (f *FresnelParameters) RightColor() *Color3 {
	retVal := f.p.Get("rightColor")
	return Color3FromJSObject(retVal, f.ctx)
}

// SetRightColor sets the RightColor property of class FresnelParameters.
//
// https://doc.babylonjs.com/api/classes/babylon.fresnelparameters#rightcolor
func (f *FresnelParameters) SetRightColor(rightColor *Color3) *FresnelParameters {
	f.p.Set("rightColor", rightColor.JSObject())
	return f
}
