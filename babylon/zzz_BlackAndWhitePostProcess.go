// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// BlackAndWhitePostProcess represents a babylon.js BlackAndWhitePostProcess.
// Post process used to render in black and white
type BlackAndWhitePostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (b *BlackAndWhitePostProcess) JSObject() js.Value { return b.p }

// BlackAndWhitePostProcess returns a BlackAndWhitePostProcess JavaScript class.
func (b *Babylon) BlackAndWhitePostProcess() *BlackAndWhitePostProcess {
	p := b.ctx.Get("BlackAndWhitePostProcess")
	return BlackAndWhitePostProcessFromJSObject(p)
}

// BlackAndWhitePostProcessFromJSObject returns a wrapped BlackAndWhitePostProcess JavaScript class.
func BlackAndWhitePostProcessFromJSObject(p js.Value) *BlackAndWhitePostProcess {
	return &BlackAndWhitePostProcess{PostProcessFromJSObject(p)}
}

// NewBlackAndWhitePostProcess returns a new BlackAndWhitePostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.blackandwhitepostprocess
func (b *Babylon) NewBlackAndWhitePostProcess(todo parameters) *BlackAndWhitePostProcess {
	p := b.ctx.Get("BlackAndWhitePostProcess").New(todo)
	return BlackAndWhitePostProcessFromJSObject(p)
}

// TODO: methods
