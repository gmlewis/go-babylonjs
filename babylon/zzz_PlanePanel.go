// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PlanePanel represents a babylon.js PlanePanel.
// Class used to create a container panel deployed on the surface of a plane
type PlanePanel struct{ *VolumeBasedPanel }

// JSObject returns the underlying js.Value.
func (p *PlanePanel) JSObject() js.Value { return p.p }

// PlanePanel returns a PlanePanel JavaScript class.
func (ba *Babylon) PlanePanel() *PlanePanel {
	p := ba.ctx.Get("PlanePanel")
	return PlanePanelFromJSObject(p)
}

// PlanePanelFromJSObject returns a wrapped PlanePanel JavaScript class.
func PlanePanelFromJSObject(p js.Value) *PlanePanel {
	return &PlanePanel{VolumeBasedPanelFromJSObject(p)}
}

// NewPlanePanel returns a new PlanePanel object.
//
// https://doc.babylonjs.com/api/classes/babylon.planepanel
func (ba *Babylon) NewPlanePanel() *PlanePanel {
	p := ba.ctx.Get("PlanePanel").New()
	return PlanePanelFromJSObject(p)
}

// TODO: methods
