// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Button represents a babylon.js Button.
// Class used to create 2D buttons
type Button struct{ *Rectangle }

// JSObject returns the underlying js.Value.
func (b *Button) JSObject() js.Value { return b.p }

// Button returns a Button JavaScript class.
func (b *Babylon) Button() *Button {
	p := b.ctx.Get("Button")
	return ButtonFromJSObject(p)
}

// ButtonFromJSObject returns a wrapped Button JavaScript class.
func ButtonFromJSObject(p js.Value) *Button {
	return &Button{RectangleFromJSObject(p)}
}

// NewButtonOpts contains optional parameters for NewButton.
type NewButtonOpts struct {
	Name *string
}

// NewButton returns a new Button object.
//
// https://doc.babylonjs.com/api/classes/babylon.button
func (b *Babylon) NewButton(opts *NewButtonOpts) *Button {
	if opts == nil {
		opts = &NewButtonOpts{}
	}

	p := b.ctx.Get("Button").New(opts.Name)
	return ButtonFromJSObject(p)
}

// TODO: methods
