// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// AnimationPropertiesOverride represents a babylon.js AnimationPropertiesOverride.
// Class used to override all child animations of a given target
type AnimationPropertiesOverride struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (a *AnimationPropertiesOverride) JSObject() js.Value { return a.p }

// AnimationPropertiesOverride returns a AnimationPropertiesOverride JavaScript class.
func (ba *Babylon) AnimationPropertiesOverride() *AnimationPropertiesOverride {
	p := ba.ctx.Get("AnimationPropertiesOverride")
	return AnimationPropertiesOverrideFromJSObject(p, ba.ctx)
}

// AnimationPropertiesOverrideFromJSObject returns a wrapped AnimationPropertiesOverride JavaScript class.
func AnimationPropertiesOverrideFromJSObject(p js.Value, ctx js.Value) *AnimationPropertiesOverride {
	return &AnimationPropertiesOverride{p: p, ctx: ctx}
}

// AnimationPropertiesOverrideArrayToJSArray returns a JavaScript Array for the wrapped array.
func AnimationPropertiesOverrideArrayToJSArray(array []*AnimationPropertiesOverride) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// BlendingSpeed returns the BlendingSpeed property of class AnimationPropertiesOverride.
//
// https://doc.babylonjs.com/api/classes/babylon.animationpropertiesoverride#blendingspeed
func (a *AnimationPropertiesOverride) BlendingSpeed() float64 {
	retVal := a.p.Get("blendingSpeed")
	return retVal.Float()
}

// SetBlendingSpeed sets the BlendingSpeed property of class AnimationPropertiesOverride.
//
// https://doc.babylonjs.com/api/classes/babylon.animationpropertiesoverride#blendingspeed
func (a *AnimationPropertiesOverride) SetBlendingSpeed(blendingSpeed float64) *AnimationPropertiesOverride {
	a.p.Set("blendingSpeed", blendingSpeed)
	return a
}

// EnableBlending returns the EnableBlending property of class AnimationPropertiesOverride.
//
// https://doc.babylonjs.com/api/classes/babylon.animationpropertiesoverride#enableblending
func (a *AnimationPropertiesOverride) EnableBlending() bool {
	retVal := a.p.Get("enableBlending")
	return retVal.Bool()
}

// SetEnableBlending sets the EnableBlending property of class AnimationPropertiesOverride.
//
// https://doc.babylonjs.com/api/classes/babylon.animationpropertiesoverride#enableblending
func (a *AnimationPropertiesOverride) SetEnableBlending(enableBlending bool) *AnimationPropertiesOverride {
	a.p.Set("enableBlending", enableBlending)
	return a
}

// LoopMode returns the LoopMode property of class AnimationPropertiesOverride.
//
// https://doc.babylonjs.com/api/classes/babylon.animationpropertiesoverride#loopmode
func (a *AnimationPropertiesOverride) LoopMode() float64 {
	retVal := a.p.Get("loopMode")
	return retVal.Float()
}

// SetLoopMode sets the LoopMode property of class AnimationPropertiesOverride.
//
// https://doc.babylonjs.com/api/classes/babylon.animationpropertiesoverride#loopmode
func (a *AnimationPropertiesOverride) SetLoopMode(loopMode float64) *AnimationPropertiesOverride {
	a.p.Set("loopMode", loopMode)
	return a
}
