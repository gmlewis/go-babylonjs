// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PBRSpecularGlossinessMaterial represents a babylon.js PBRSpecularGlossinessMaterial.
// The PBR material of BJS following the specular glossiness convention.
//
// This fits to the PBR convention in the GLTF definition:
// <a href="https://github.com/KhronosGroup/glTF/tree/2.0/extensions/Khronos/KHR_materials_pbrSpecularGlossiness">https://github.com/KhronosGroup/glTF/tree/2.0/extensions/Khronos/KHR_materials_pbrSpecularGlossiness</a>
type PBRSpecularGlossinessMaterial struct {
	*PBRBaseSimpleMaterial
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (p *PBRSpecularGlossinessMaterial) JSObject() js.Value { return p.p }

// PBRSpecularGlossinessMaterial returns a PBRSpecularGlossinessMaterial JavaScript class.
func (ba *Babylon) PBRSpecularGlossinessMaterial() *PBRSpecularGlossinessMaterial {
	p := ba.ctx.Get("PBRSpecularGlossinessMaterial")
	return PBRSpecularGlossinessMaterialFromJSObject(p, ba.ctx)
}

// PBRSpecularGlossinessMaterialFromJSObject returns a wrapped PBRSpecularGlossinessMaterial JavaScript class.
func PBRSpecularGlossinessMaterialFromJSObject(p js.Value, ctx js.Value) *PBRSpecularGlossinessMaterial {
	return &PBRSpecularGlossinessMaterial{PBRBaseSimpleMaterial: PBRBaseSimpleMaterialFromJSObject(p, ctx), ctx: ctx}
}

// PBRSpecularGlossinessMaterialArrayToJSArray returns a JavaScript Array for the wrapped array.
func PBRSpecularGlossinessMaterialArrayToJSArray(array []*PBRSpecularGlossinessMaterial) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewPBRSpecularGlossinessMaterial returns a new PBRSpecularGlossinessMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#constructor
func (ba *Babylon) NewPBRSpecularGlossinessMaterial(name string, scene *Scene) *PBRSpecularGlossinessMaterial {

	args := make([]interface{}, 0, 2+0)

	args = append(args, name)
	args = append(args, scene.JSObject())

	p := ba.ctx.Get("PBRSpecularGlossinessMaterial").New(args...)
	return PBRSpecularGlossinessMaterialFromJSObject(p, ba.ctx)
}

// Clone calls the Clone method on the PBRSpecularGlossinessMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#clone
func (p *PBRSpecularGlossinessMaterial) Clone(name string) *PBRSpecularGlossinessMaterial {

	args := make([]interface{}, 0, 1+0)

	args = append(args, name)

	retVal := p.p.Call("clone", args...)
	return PBRSpecularGlossinessMaterialFromJSObject(retVal, p.ctx)
}

// GetClassName calls the GetClassName method on the PBRSpecularGlossinessMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#getclassname
func (p *PBRSpecularGlossinessMaterial) GetClassName() string {

	retVal := p.p.Call("getClassName")
	return retVal.String()
}

// Parse calls the Parse method on the PBRSpecularGlossinessMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#parse
func (p *PBRSpecularGlossinessMaterial) Parse(source JSObject, scene *Scene, rootUrl string) *PBRSpecularGlossinessMaterial {

	args := make([]interface{}, 0, 3+0)

	if source == nil {
		args = append(args, js.Null())
	} else {
		args = append(args, source.JSObject())
	}

	if scene == nil {
		args = append(args, js.Null())
	} else {
		args = append(args, scene.JSObject())
	}

	args = append(args, rootUrl)

	retVal := p.p.Call("Parse", args...)
	return PBRSpecularGlossinessMaterialFromJSObject(retVal, p.ctx)
}

// Serialize calls the Serialize method on the PBRSpecularGlossinessMaterial object.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#serialize
func (p *PBRSpecularGlossinessMaterial) Serialize() js.Value {

	retVal := p.p.Call("serialize")
	return retVal
}

// DiffuseColor returns the DiffuseColor property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#diffusecolor
func (p *PBRSpecularGlossinessMaterial) DiffuseColor() *Color3 {
	retVal := p.p.Get("diffuseColor")
	return Color3FromJSObject(retVal, p.ctx)
}

// SetDiffuseColor sets the DiffuseColor property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#diffusecolor
func (p *PBRSpecularGlossinessMaterial) SetDiffuseColor(diffuseColor *Color3) *PBRSpecularGlossinessMaterial {
	p.p.Set("diffuseColor", diffuseColor.JSObject())
	return p
}

// DiffuseTexture returns the DiffuseTexture property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#diffusetexture
func (p *PBRSpecularGlossinessMaterial) DiffuseTexture() *BaseTexture {
	retVal := p.p.Get("diffuseTexture")
	return BaseTextureFromJSObject(retVal, p.ctx)
}

// SetDiffuseTexture sets the DiffuseTexture property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#diffusetexture
func (p *PBRSpecularGlossinessMaterial) SetDiffuseTexture(diffuseTexture *BaseTexture) *PBRSpecularGlossinessMaterial {
	p.p.Set("diffuseTexture", diffuseTexture.JSObject())
	return p
}

// Glossiness returns the Glossiness property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#glossiness
func (p *PBRSpecularGlossinessMaterial) Glossiness() float64 {
	retVal := p.p.Get("glossiness")
	return retVal.Float()
}

// SetGlossiness sets the Glossiness property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#glossiness
func (p *PBRSpecularGlossinessMaterial) SetGlossiness(glossiness float64) *PBRSpecularGlossinessMaterial {
	p.p.Set("glossiness", glossiness)
	return p
}

// SpecularColor returns the SpecularColor property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#specularcolor
func (p *PBRSpecularGlossinessMaterial) SpecularColor() *Color3 {
	retVal := p.p.Get("specularColor")
	return Color3FromJSObject(retVal, p.ctx)
}

// SetSpecularColor sets the SpecularColor property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#specularcolor
func (p *PBRSpecularGlossinessMaterial) SetSpecularColor(specularColor *Color3) *PBRSpecularGlossinessMaterial {
	p.p.Set("specularColor", specularColor.JSObject())
	return p
}

// SpecularGlossinessTexture returns the SpecularGlossinessTexture property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#specularglossinesstexture
func (p *PBRSpecularGlossinessMaterial) SpecularGlossinessTexture() *BaseTexture {
	retVal := p.p.Get("specularGlossinessTexture")
	return BaseTextureFromJSObject(retVal, p.ctx)
}

// SetSpecularGlossinessTexture sets the SpecularGlossinessTexture property of class PBRSpecularGlossinessMaterial.
//
// https://doc.babylonjs.com/api/classes/babylon.pbrspecularglossinessmaterial#specularglossinesstexture
func (p *PBRSpecularGlossinessMaterial) SetSpecularGlossinessTexture(specularGlossinessTexture *BaseTexture) *PBRSpecularGlossinessMaterial {
	p.p.Set("specularGlossinessTexture", specularGlossinessTexture.JSObject())
	return p
}
