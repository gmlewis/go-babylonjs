// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// FlyCameraMouseInput represents a babylon.js FlyCameraMouseInput.
// Listen to mouse events to control the camera.

//
// See: http://doc.babylonjs.com/how_to/customizing_camera_inputs
type FlyCameraMouseInput struct{}

// JSObject returns the underlying js.Value.
func (f *FlyCameraMouseInput) JSObject() js.Value { return f.p }

// FlyCameraMouseInput returns a FlyCameraMouseInput JavaScript class.
func (b *Babylon) FlyCameraMouseInput() *FlyCameraMouseInput {
	p := b.ctx.Get("FlyCameraMouseInput")
	return FlyCameraMouseInputFromJSObject(p)
}

// FlyCameraMouseInputFromJSObject returns a wrapped FlyCameraMouseInput JavaScript class.
func FlyCameraMouseInputFromJSObject(p js.Value) *FlyCameraMouseInput {
	return &FlyCameraMouseInput{p: p}
}

// NewFlyCameraMouseInput returns a new FlyCameraMouseInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.flycameramouseinput
func (b *Babylon) NewFlyCameraMouseInput(todo parameters) *FlyCameraMouseInput {
	p := b.ctx.Get("FlyCameraMouseInput").New(todo)
	return FlyCameraMouseInputFromJSObject(p)
}

// TODO: methods
