// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// FlyCameraMouseInput represents a babylon.js FlyCameraMouseInput.
// Listen to mouse events to control the camera.
//
// See: http://doc.babylonjs.com/how_to/customizing_camera_inputs
type FlyCameraMouseInput struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (f *FlyCameraMouseInput) JSObject() js.Value { return f.p }

// FlyCameraMouseInput returns a FlyCameraMouseInput JavaScript class.
func (ba *Babylon) FlyCameraMouseInput() *FlyCameraMouseInput {
	p := ba.ctx.Get("FlyCameraMouseInput")
	return FlyCameraMouseInputFromJSObject(p, ba.ctx)
}

// FlyCameraMouseInputFromJSObject returns a wrapped FlyCameraMouseInput JavaScript class.
func FlyCameraMouseInputFromJSObject(p js.Value, ctx js.Value) *FlyCameraMouseInput {
	return &FlyCameraMouseInput{p: p, ctx: ctx}
}

// NewFlyCameraMouseInputOpts contains optional parameters for NewFlyCameraMouseInput.
type NewFlyCameraMouseInputOpts struct {
	TouchEnabled *JSBool
}

// NewFlyCameraMouseInput returns a new FlyCameraMouseInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.flycameramouseinput
func (ba *Babylon) NewFlyCameraMouseInput(opts *NewFlyCameraMouseInputOpts) *FlyCameraMouseInput {
	if opts == nil {
		opts = &NewFlyCameraMouseInputOpts{}
	}

	p := ba.ctx.Get("FlyCameraMouseInput").New(opts.TouchEnabled.JSObject())
	return FlyCameraMouseInputFromJSObject(p, ba.ctx)
}

// TODO: methods
