// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IAnimationSampler represents a babylon.js IAnimationSampler.
// Loader interface with additional members.
type IAnimationSampler struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IAnimationSampler) JSObject() js.Value { return i.p }

// IAnimationSampler returns a IAnimationSampler JavaScript class.
func (ba *Babylon) IAnimationSampler() *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler")
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// IAnimationSamplerFromJSObject returns a wrapped IAnimationSampler JavaScript class.
func IAnimationSamplerFromJSObject(p js.Value, ctx js.Value) *IAnimationSampler {
	return &IAnimationSampler{p: p, ctx: ctx}
}

// IAnimationSamplerArrayToJSArray returns a JavaScript Array for the wrapped array.
func IAnimationSamplerArrayToJSArray(array []*IAnimationSampler) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Extensions returns the Extensions property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#extensions
func (i *IAnimationSampler) Extensions(extensions js.Value) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(extensions)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// SetExtensions sets the Extensions property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#extensions
func (i *IAnimationSampler) SetExtensions(extensions js.Value) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(extensions)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// Extras returns the Extras property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#extras
func (i *IAnimationSampler) Extras(extras interface{}) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(extras)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// SetExtras sets the Extras property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#extras
func (i *IAnimationSampler) SetExtras(extras interface{}) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(extras)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#index
func (i *IAnimationSampler) Index(index float64) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(index)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#index
func (i *IAnimationSampler) SetIndex(index float64) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(index)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// Input returns the Input property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#input
func (i *IAnimationSampler) Input(input float64) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(input)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// SetInput sets the Input property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#input
func (i *IAnimationSampler) SetInput(input float64) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(input)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// Interpolation returns the Interpolation property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#interpolation
func (i *IAnimationSampler) Interpolation(interpolation *AnimationSamplerInterpolation) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(interpolation.JSObject())
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// SetInterpolation sets the Interpolation property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#interpolation
func (i *IAnimationSampler) SetInterpolation(interpolation *AnimationSamplerInterpolation) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(interpolation.JSObject())
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// Output returns the Output property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#output
func (i *IAnimationSampler) Output(output float64) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(output)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// SetOutput sets the Output property of class IAnimationSampler.
//
// https://doc.babylonjs.com/api/classes/babylon.ianimationsampler#output
func (i *IAnimationSampler) SetOutput(output float64) *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler").New(output)
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

*/
