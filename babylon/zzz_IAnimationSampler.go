// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IAnimationSampler represents a babylon.js IAnimationSampler.
// Loader interface with additional members.
type IAnimationSampler struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IAnimationSampler) JSObject() js.Value { return i.p }

// IAnimationSampler returns a IAnimationSampler JavaScript class.
func (ba *Babylon) IAnimationSampler() *IAnimationSampler {
	p := ba.ctx.Get("IAnimationSampler")
	return IAnimationSamplerFromJSObject(p, ba.ctx)
}

// IAnimationSamplerFromJSObject returns a wrapped IAnimationSampler JavaScript class.
func IAnimationSamplerFromJSObject(p js.Value, ctx js.Value) *IAnimationSampler {
	return &IAnimationSampler{p: p, ctx: ctx}
}

// IAnimationSamplerArrayToJSArray returns a JavaScript Array for the wrapped array.
func IAnimationSamplerArrayToJSArray(array []*IAnimationSampler) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}
