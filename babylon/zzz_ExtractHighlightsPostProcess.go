// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ExtractHighlightsPostProcess represents a babylon.js ExtractHighlightsPostProcess.
// The extract highlights post process sets all pixels to black except pixels above the specified luminance threshold. Used as the first step for a bloom effect.
type ExtractHighlightsPostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (e *ExtractHighlightsPostProcess) JSObject() js.Value { return e.p }

// ExtractHighlightsPostProcess returns a ExtractHighlightsPostProcess JavaScript class.
func (b *Babylon) ExtractHighlightsPostProcess() *ExtractHighlightsPostProcess {
	p := b.ctx.Get("ExtractHighlightsPostProcess")
	return ExtractHighlightsPostProcessFromJSObject(p)
}

// ExtractHighlightsPostProcessFromJSObject returns a wrapped ExtractHighlightsPostProcess JavaScript class.
func ExtractHighlightsPostProcessFromJSObject(p js.Value) *ExtractHighlightsPostProcess {
	return &ExtractHighlightsPostProcess{PostProcessFromJSObject(p)}
}

// NewExtractHighlightsPostProcess returns a new ExtractHighlightsPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.extracthighlightspostprocess
func (b *Babylon) NewExtractHighlightsPostProcess(todo parameters) *ExtractHighlightsPostProcess {
	p := b.ctx.Get("ExtractHighlightsPostProcess").New(todo)
	return ExtractHighlightsPostProcessFromJSObject(p)
}

// TODO: methods
