// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// VectorMergerBlock represents a babylon.js VectorMergerBlock.
// Block used to create a Vector2/3/4 out of individual inputs (one for each component)
type VectorMergerBlock struct{ *NodeMaterialBlock }

// JSObject returns the underlying js.Value.
func (v *VectorMergerBlock) JSObject() js.Value { return v.p }

// VectorMergerBlock returns a VectorMergerBlock JavaScript class.
func (b *Babylon) VectorMergerBlock() *VectorMergerBlock {
	p := b.ctx.Get("VectorMergerBlock")
	return VectorMergerBlockFromJSObject(p)
}

// VectorMergerBlockFromJSObject returns a wrapped VectorMergerBlock JavaScript class.
func VectorMergerBlockFromJSObject(p js.Value) *VectorMergerBlock {
	return &VectorMergerBlock{NodeMaterialBlockFromJSObject(p)}
}

// NewVectorMergerBlock returns a new VectorMergerBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.vectormergerblock
func (b *Babylon) NewVectorMergerBlock(todo parameters) *VectorMergerBlock {
	p := b.ctx.Get("VectorMergerBlock").New(todo)
	return VectorMergerBlockFromJSObject(p)
}

// TODO: methods
