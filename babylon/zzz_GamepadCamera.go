// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// GamepadCamera represents a babylon.js GamepadCamera.
// This represents a FPS type of camera. This is only here for back compat purpose.
// Please use the UniversalCamera instead as both are identical.
//
// See: http://doc.babylonjs.com/features/cameras#universal-camera
type GamepadCamera struct {
	*UniversalCamera
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (g *GamepadCamera) JSObject() js.Value { return g.p }

// GamepadCamera returns a GamepadCamera JavaScript class.
func (ba *Babylon) GamepadCamera() *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera")
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// GamepadCameraFromJSObject returns a wrapped GamepadCamera JavaScript class.
func GamepadCameraFromJSObject(p js.Value, ctx js.Value) *GamepadCamera {
	return &GamepadCamera{UniversalCamera: UniversalCameraFromJSObject(p, ctx), ctx: ctx}
}

// GamepadCameraArrayToJSArray returns a JavaScript Array for the wrapped array.
func GamepadCameraArrayToJSArray(array []*GamepadCamera) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewGamepadCamera returns a new GamepadCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera
func (ba *Babylon) NewGamepadCamera(name string, position *Vector3, scene *Scene) *GamepadCamera {

	args := make([]interface{}, 0, 3+0)

	args = append(args, name)
	args = append(args, position.JSObject())
	args = append(args, scene.JSObject())

	p := ba.ctx.Get("GamepadCamera").New(args...)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// GamepadCameraAttachControlOpts contains optional parameters for GamepadCamera.AttachControl.
type GamepadCameraAttachControlOpts struct {
	NoPreventDefault *bool
}

// AttachControl calls the AttachControl method on the GamepadCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#attachcontrol
func (g *GamepadCamera) AttachControl(element js.Value, opts *GamepadCameraAttachControlOpts) {
	if opts == nil {
		opts = &GamepadCameraAttachControlOpts{}
	}

	args := make([]interface{}, 0, 1+1)

	args = append(args, element)

	if opts.NoPreventDefault == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, *opts.NoPreventDefault)
	}

	g.p.Call("attachControl", args...)
}

// DetachControl calls the DetachControl method on the GamepadCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#detachcontrol
func (g *GamepadCamera) DetachControl(element js.Value) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, element)

	g.p.Call("detachControl", args...)
}

// Dispose calls the Dispose method on the GamepadCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#dispose
func (g *GamepadCamera) Dispose() {

	g.p.Call("dispose")
}

// GetClassName calls the GetClassName method on the GamepadCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#getclassname
func (g *GamepadCamera) GetClassName() string {

	retVal := g.p.Call("getClassName")
	return retVal.String()
}

// GetFrontPosition calls the GetFrontPosition method on the GamepadCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#getfrontposition
func (g *GamepadCamera) GetFrontPosition(distance float64) *Vector3 {

	args := make([]interface{}, 0, 1+0)

	args = append(args, distance)

	retVal := g.p.Call("getFrontPosition", args...)
	return Vector3FromJSObject(retVal, g.ctx)
}

// GetTarget calls the GetTarget method on the GamepadCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#gettarget
func (g *GamepadCamera) GetTarget() *Vector3 {

	retVal := g.p.Call("getTarget")
	return Vector3FromJSObject(retVal, g.ctx)
}

// SetTarget calls the SetTarget method on the GamepadCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#settarget
func (g *GamepadCamera) SetTarget(target *Vector3) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, target.JSObject())

	g.p.Call("setTarget", args...)
}

// StoreState calls the StoreState method on the GamepadCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#storestate
func (g *GamepadCamera) StoreState() *Camera {

	retVal := g.p.Call("storeState")
	return CameraFromJSObject(retVal, g.ctx)
}

/*

// AngularSensibility returns the AngularSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#angularsensibility
func (g *GamepadCamera) AngularSensibility(angularSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(angularSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetAngularSensibility sets the AngularSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#angularsensibility
func (g *GamepadCamera) SetAngularSensibility(angularSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(angularSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// ApplyGravity returns the ApplyGravity property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#applygravity
func (g *GamepadCamera) ApplyGravity(applyGravity bool) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(applyGravity)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetApplyGravity sets the ApplyGravity property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#applygravity
func (g *GamepadCamera) SetApplyGravity(applyGravity bool) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(applyGravity)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// CameraDirection returns the CameraDirection property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#cameradirection
func (g *GamepadCamera) CameraDirection(cameraDirection *Vector3) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(cameraDirection.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetCameraDirection sets the CameraDirection property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#cameradirection
func (g *GamepadCamera) SetCameraDirection(cameraDirection *Vector3) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(cameraDirection.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// CameraRotation returns the CameraRotation property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#camerarotation
func (g *GamepadCamera) CameraRotation(cameraRotation *Vector2) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(cameraRotation.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetCameraRotation sets the CameraRotation property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#camerarotation
func (g *GamepadCamera) SetCameraRotation(cameraRotation *Vector2) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(cameraRotation.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// CheckCollisions returns the CheckCollisions property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#checkcollisions
func (g *GamepadCamera) CheckCollisions(checkCollisions bool) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(checkCollisions)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetCheckCollisions sets the CheckCollisions property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#checkcollisions
func (g *GamepadCamera) SetCheckCollisions(checkCollisions bool) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(checkCollisions)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// CollisionMask returns the CollisionMask property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#collisionmask
func (g *GamepadCamera) CollisionMask(collisionMask float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(collisionMask)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetCollisionMask sets the CollisionMask property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#collisionmask
func (g *GamepadCamera) SetCollisionMask(collisionMask float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(collisionMask)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// Ellipsoid returns the Ellipsoid property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#ellipsoid
func (g *GamepadCamera) Ellipsoid(ellipsoid *Vector3) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(ellipsoid.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetEllipsoid sets the Ellipsoid property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#ellipsoid
func (g *GamepadCamera) SetEllipsoid(ellipsoid *Vector3) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(ellipsoid.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// EllipsoidOffset returns the EllipsoidOffset property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#ellipsoidoffset
func (g *GamepadCamera) EllipsoidOffset(ellipsoidOffset *Vector3) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(ellipsoidOffset.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetEllipsoidOffset sets the EllipsoidOffset property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#ellipsoidoffset
func (g *GamepadCamera) SetEllipsoidOffset(ellipsoidOffset *Vector3) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(ellipsoidOffset.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// GamepadAngularSensibility returns the GamepadAngularSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#gamepadangularsensibility
func (g *GamepadCamera) GamepadAngularSensibility(gamepadAngularSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(gamepadAngularSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetGamepadAngularSensibility sets the GamepadAngularSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#gamepadangularsensibility
func (g *GamepadCamera) SetGamepadAngularSensibility(gamepadAngularSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(gamepadAngularSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// GamepadMoveSensibility returns the GamepadMoveSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#gamepadmovesensibility
func (g *GamepadCamera) GamepadMoveSensibility(gamepadMoveSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(gamepadMoveSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetGamepadMoveSensibility sets the GamepadMoveSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#gamepadmovesensibility
func (g *GamepadCamera) SetGamepadMoveSensibility(gamepadMoveSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(gamepadMoveSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// Inputs returns the Inputs property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#inputs
func (g *GamepadCamera) Inputs(inputs *FreeCameraInputsManager) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(inputs.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetInputs sets the Inputs property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#inputs
func (g *GamepadCamera) SetInputs(inputs *FreeCameraInputsManager) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(inputs.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// KeysDown returns the KeysDown property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#keysdown
func (g *GamepadCamera) KeysDown(keysDown float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(keysDown)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetKeysDown sets the KeysDown property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#keysdown
func (g *GamepadCamera) SetKeysDown(keysDown float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(keysDown)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// KeysLeft returns the KeysLeft property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#keysleft
func (g *GamepadCamera) KeysLeft(keysLeft float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(keysLeft)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetKeysLeft sets the KeysLeft property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#keysleft
func (g *GamepadCamera) SetKeysLeft(keysLeft float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(keysLeft)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// KeysRight returns the KeysRight property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#keysright
func (g *GamepadCamera) KeysRight(keysRight float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(keysRight)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetKeysRight sets the KeysRight property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#keysright
func (g *GamepadCamera) SetKeysRight(keysRight float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(keysRight)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// KeysUp returns the KeysUp property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#keysup
func (g *GamepadCamera) KeysUp(keysUp float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(keysUp)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetKeysUp sets the KeysUp property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#keysup
func (g *GamepadCamera) SetKeysUp(keysUp float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(keysUp)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// LockedTarget returns the LockedTarget property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#lockedtarget
func (g *GamepadCamera) LockedTarget(lockedTarget interface{}) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(lockedTarget)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetLockedTarget sets the LockedTarget property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#lockedtarget
func (g *GamepadCamera) SetLockedTarget(lockedTarget interface{}) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(lockedTarget)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// NoRotationConstraint returns the NoRotationConstraint property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#norotationconstraint
func (g *GamepadCamera) NoRotationConstraint(noRotationConstraint bool) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(noRotationConstraint)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetNoRotationConstraint sets the NoRotationConstraint property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#norotationconstraint
func (g *GamepadCamera) SetNoRotationConstraint(noRotationConstraint bool) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(noRotationConstraint)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// OnCollide returns the OnCollide property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#oncollide
func (g *GamepadCamera) OnCollide(onCollide func()) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(js.FuncOf(func(this js.Value, args []js.Value) interface{} {onCollide(); return nil}))
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetOnCollide sets the OnCollide property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#oncollide
func (g *GamepadCamera) SetOnCollide(onCollide func()) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(js.FuncOf(func(this js.Value, args []js.Value) interface{} {onCollide(); return nil}))
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// Rotation returns the Rotation property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#rotation
func (g *GamepadCamera) Rotation(rotation *Vector3) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(rotation.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetRotation sets the Rotation property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#rotation
func (g *GamepadCamera) SetRotation(rotation *Vector3) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(rotation.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// RotationQuaternion returns the RotationQuaternion property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#rotationquaternion
func (g *GamepadCamera) RotationQuaternion(rotationQuaternion *Quaternion) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(rotationQuaternion.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetRotationQuaternion sets the RotationQuaternion property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#rotationquaternion
func (g *GamepadCamera) SetRotationQuaternion(rotationQuaternion *Quaternion) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(rotationQuaternion.JSObject())
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// Speed returns the Speed property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#speed
func (g *GamepadCamera) Speed(speed float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(speed)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetSpeed sets the Speed property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#speed
func (g *GamepadCamera) SetSpeed(speed float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(speed)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// TouchAngularSensibility returns the TouchAngularSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#touchangularsensibility
func (g *GamepadCamera) TouchAngularSensibility(touchAngularSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(touchAngularSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetTouchAngularSensibility sets the TouchAngularSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#touchangularsensibility
func (g *GamepadCamera) SetTouchAngularSensibility(touchAngularSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(touchAngularSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// TouchMoveSensibility returns the TouchMoveSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#touchmovesensibility
func (g *GamepadCamera) TouchMoveSensibility(touchMoveSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(touchMoveSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetTouchMoveSensibility sets the TouchMoveSensibility property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#touchmovesensibility
func (g *GamepadCamera) SetTouchMoveSensibility(touchMoveSensibility float64) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(touchMoveSensibility)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// UpdateUpVectorFromRotation returns the UpdateUpVectorFromRotation property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#updateupvectorfromrotation
func (g *GamepadCamera) UpdateUpVectorFromRotation(updateUpVectorFromRotation bool) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(updateUpVectorFromRotation)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

// SetUpdateUpVectorFromRotation sets the UpdateUpVectorFromRotation property of class GamepadCamera.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadcamera#updateupvectorfromrotation
func (g *GamepadCamera) SetUpdateUpVectorFromRotation(updateUpVectorFromRotation bool) *GamepadCamera {
	p := ba.ctx.Get("GamepadCamera").New(updateUpVectorFromRotation)
	return GamepadCameraFromJSObject(p, ba.ctx)
}

*/
