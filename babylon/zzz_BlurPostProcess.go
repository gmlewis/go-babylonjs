// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// BlurPostProcess represents a babylon.js BlurPostProcess.
// The Blur Post Process which blurs an image based on a kernel and direction.
// Can be used twice in x and y directions to perform a guassian blur in two passes.
type BlurPostProcess struct{ *PostProcess }

// JSObject returns the underlying js.Value.
func (b *BlurPostProcess) JSObject() js.Value { return b.p }

// BlurPostProcess returns a BlurPostProcess JavaScript class.
func (b *Babylon) BlurPostProcess() *BlurPostProcess {
	p := b.ctx.Get("BlurPostProcess")
	return BlurPostProcessFromJSObject(p)
}

// BlurPostProcessFromJSObject returns a wrapped BlurPostProcess JavaScript class.
func BlurPostProcessFromJSObject(p js.Value) *BlurPostProcess {
	return &BlurPostProcess{PostProcessFromJSObject(p)}
}

// NewBlurPostProcess returns a new BlurPostProcess object.
//
// https://doc.babylonjs.com/api/classes/babylon.blurpostprocess
func (b *Babylon) NewBlurPostProcess(todo parameters) *BlurPostProcess {
	p := b.ctx.Get("BlurPostProcess").New(todo)
	return BlurPostProcessFromJSObject(p)
}

// TODO: methods
