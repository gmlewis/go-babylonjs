// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SwitchBooleanAction represents a babylon.js SwitchBooleanAction.
// This defines an action responsible to toggle a boolean once triggered.
//
// See: http://doc.babylonjs.com/how_to/how_to_use_actions
type SwitchBooleanAction struct {
	*Action
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (s *SwitchBooleanAction) JSObject() js.Value { return s.p }

// SwitchBooleanAction returns a SwitchBooleanAction JavaScript class.
func (ba *Babylon) SwitchBooleanAction() *SwitchBooleanAction {
	p := ba.ctx.Get("SwitchBooleanAction")
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

// SwitchBooleanActionFromJSObject returns a wrapped SwitchBooleanAction JavaScript class.
func SwitchBooleanActionFromJSObject(p js.Value, ctx js.Value) *SwitchBooleanAction {
	return &SwitchBooleanAction{Action: ActionFromJSObject(p, ctx), ctx: ctx}
}

// SwitchBooleanActionArrayToJSArray returns a JavaScript Array for the wrapped array.
func SwitchBooleanActionArrayToJSArray(array []*SwitchBooleanAction) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// NewSwitchBooleanActionOpts contains optional parameters for NewSwitchBooleanAction.
type NewSwitchBooleanActionOpts struct {
	Condition *Condition
}

// NewSwitchBooleanAction returns a new SwitchBooleanAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction
func (ba *Babylon) NewSwitchBooleanAction(triggerOptions interface{}, target interface{}, propertyPath string, opts *NewSwitchBooleanActionOpts) *SwitchBooleanAction {
	if opts == nil {
		opts = &NewSwitchBooleanActionOpts{}
	}

	args := make([]interface{}, 0, 3+1)

	args = append(args, triggerOptions)
	args = append(args, target)
	args = append(args, propertyPath)

	if opts.Condition == nil {
		args = append(args, js.Undefined())
	} else {
		args = append(args, opts.Condition.JSObject())
	}

	p := ba.ctx.Get("SwitchBooleanAction").New(args...)
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

// Execute calls the Execute method on the SwitchBooleanAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#execute
func (s *SwitchBooleanAction) Execute() {

	s.p.Call("execute")
}

// GetTriggerParameter calls the GetTriggerParameter method on the SwitchBooleanAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#gettriggerparameter
func (s *SwitchBooleanAction) GetTriggerParameter() interface{} {

	retVal := s.p.Call("getTriggerParameter")
	return retVal
}

// Serialize calls the Serialize method on the SwitchBooleanAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#serialize
func (s *SwitchBooleanAction) Serialize(parent interface{}) interface{} {

	args := make([]interface{}, 0, 1+0)

	args = append(args, parent)

	retVal := s.p.Call("serialize", args...)
	return retVal
}

// SkipToNextActiveAction calls the SkipToNextActiveAction method on the SwitchBooleanAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#skiptonextactiveaction
func (s *SwitchBooleanAction) SkipToNextActiveAction() {

	s.p.Call("skipToNextActiveAction")
}

// Then calls the Then method on the SwitchBooleanAction object.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#then
func (s *SwitchBooleanAction) Then(action *Action) *Action {

	args := make([]interface{}, 0, 1+0)

	args = append(args, action.JSObject())

	retVal := s.p.Call("then", args...)
	return ActionFromJSObject(retVal, s.ctx)
}

/*

// OnBeforeExecuteObservable returns the OnBeforeExecuteObservable property of class SwitchBooleanAction.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#onbeforeexecuteobservable
func (s *SwitchBooleanAction) OnBeforeExecuteObservable(onBeforeExecuteObservable *Observable) *SwitchBooleanAction {
	p := ba.ctx.Get("SwitchBooleanAction").New(onBeforeExecuteObservable.JSObject())
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

// SetOnBeforeExecuteObservable sets the OnBeforeExecuteObservable property of class SwitchBooleanAction.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#onbeforeexecuteobservable
func (s *SwitchBooleanAction) SetOnBeforeExecuteObservable(onBeforeExecuteObservable *Observable) *SwitchBooleanAction {
	p := ba.ctx.Get("SwitchBooleanAction").New(onBeforeExecuteObservable.JSObject())
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

// PropertyPath returns the PropertyPath property of class SwitchBooleanAction.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#propertypath
func (s *SwitchBooleanAction) PropertyPath(propertyPath string) *SwitchBooleanAction {
	p := ba.ctx.Get("SwitchBooleanAction").New(propertyPath)
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

// SetPropertyPath sets the PropertyPath property of class SwitchBooleanAction.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#propertypath
func (s *SwitchBooleanAction) SetPropertyPath(propertyPath string) *SwitchBooleanAction {
	p := ba.ctx.Get("SwitchBooleanAction").New(propertyPath)
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

// Trigger returns the Trigger property of class SwitchBooleanAction.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#trigger
func (s *SwitchBooleanAction) Trigger(trigger float64) *SwitchBooleanAction {
	p := ba.ctx.Get("SwitchBooleanAction").New(trigger)
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

// SetTrigger sets the Trigger property of class SwitchBooleanAction.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#trigger
func (s *SwitchBooleanAction) SetTrigger(trigger float64) *SwitchBooleanAction {
	p := ba.ctx.Get("SwitchBooleanAction").New(trigger)
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

// TriggerOptions returns the TriggerOptions property of class SwitchBooleanAction.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#triggeroptions
func (s *SwitchBooleanAction) TriggerOptions(triggerOptions interface{}) *SwitchBooleanAction {
	p := ba.ctx.Get("SwitchBooleanAction").New(triggerOptions)
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

// SetTriggerOptions sets the TriggerOptions property of class SwitchBooleanAction.
//
// https://doc.babylonjs.com/api/classes/babylon.switchbooleanaction#triggeroptions
func (s *SwitchBooleanAction) SetTriggerOptions(triggerOptions interface{}) *SwitchBooleanAction {
	p := ba.ctx.Get("SwitchBooleanAction").New(triggerOptions)
	return SwitchBooleanActionFromJSObject(p, ba.ctx)
}

*/
