// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// BaseTexture represents a babylon.js BaseTexture.
// Base class of all the textures in babylon.
// It groups all the common properties the materials, post process, lights... might need
// in order to make a correct use of the texture.
type BaseTexture struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (b *BaseTexture) JSObject() js.Value { return b.p }

// BaseTexture returns a BaseTexture JavaScript class.
func (b *Babylon) BaseTexture() *BaseTexture {
	p := b.ctx.Get("BaseTexture")
	return BaseTextureFromJSObject(p)
}

// BaseTextureFromJSObject returns a wrapped BaseTexture JavaScript class.
func BaseTextureFromJSObject(p js.Value) *BaseTexture {
	return &BaseTexture{p: p}
}

// NewBaseTexture returns a new BaseTexture object.
//
// https://doc.babylonjs.com/api/classes/babylon.basetexture
func (b *Babylon) NewBaseTexture(scene *Scene) *BaseTexture {
	p := b.ctx.Get("BaseTexture").New(scene.JSObject())
	return BaseTextureFromJSObject(p)
}

// TODO: methods
