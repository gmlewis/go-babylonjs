// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PhysicsUpdraftEventOptions represents a babylon.js PhysicsUpdraftEventOptions.
// Options fot the updraft event
//
// See: https://doc.babylonjs.com/how_to/using_the_physics_engine#further-functionality-of-the-impostor-class
type PhysicsUpdraftEventOptions struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (p *PhysicsUpdraftEventOptions) JSObject() js.Value { return p.p }

// PhysicsUpdraftEventOptions returns a PhysicsUpdraftEventOptions JavaScript class.
func (ba *Babylon) PhysicsUpdraftEventOptions() *PhysicsUpdraftEventOptions {
	p := ba.ctx.Get("PhysicsUpdraftEventOptions")
	return PhysicsUpdraftEventOptionsFromJSObject(p, ba.ctx)
}

// PhysicsUpdraftEventOptionsFromJSObject returns a wrapped PhysicsUpdraftEventOptions JavaScript class.
func PhysicsUpdraftEventOptionsFromJSObject(p js.Value, ctx js.Value) *PhysicsUpdraftEventOptions {
	return &PhysicsUpdraftEventOptions{p: p, ctx: ctx}
}

// PhysicsUpdraftEventOptionsArrayToJSArray returns a JavaScript Array for the wrapped array.
func PhysicsUpdraftEventOptionsArrayToJSArray(array []*PhysicsUpdraftEventOptions) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Height returns the Height property of class PhysicsUpdraftEventOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsupdrafteventoptions#height
func (p *PhysicsUpdraftEventOptions) Height(height float64) *PhysicsUpdraftEventOptions {
	p := ba.ctx.Get("PhysicsUpdraftEventOptions").New(height)
	return PhysicsUpdraftEventOptionsFromJSObject(p, ba.ctx)
}

// SetHeight sets the Height property of class PhysicsUpdraftEventOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsupdrafteventoptions#height
func (p *PhysicsUpdraftEventOptions) SetHeight(height float64) *PhysicsUpdraftEventOptions {
	p := ba.ctx.Get("PhysicsUpdraftEventOptions").New(height)
	return PhysicsUpdraftEventOptionsFromJSObject(p, ba.ctx)
}

// Radius returns the Radius property of class PhysicsUpdraftEventOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsupdrafteventoptions#radius
func (p *PhysicsUpdraftEventOptions) Radius(radius float64) *PhysicsUpdraftEventOptions {
	p := ba.ctx.Get("PhysicsUpdraftEventOptions").New(radius)
	return PhysicsUpdraftEventOptionsFromJSObject(p, ba.ctx)
}

// SetRadius sets the Radius property of class PhysicsUpdraftEventOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsupdrafteventoptions#radius
func (p *PhysicsUpdraftEventOptions) SetRadius(radius float64) *PhysicsUpdraftEventOptions {
	p := ba.ctx.Get("PhysicsUpdraftEventOptions").New(radius)
	return PhysicsUpdraftEventOptionsFromJSObject(p, ba.ctx)
}

// Strength returns the Strength property of class PhysicsUpdraftEventOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsupdrafteventoptions#strength
func (p *PhysicsUpdraftEventOptions) Strength(strength float64) *PhysicsUpdraftEventOptions {
	p := ba.ctx.Get("PhysicsUpdraftEventOptions").New(strength)
	return PhysicsUpdraftEventOptionsFromJSObject(p, ba.ctx)
}

// SetStrength sets the Strength property of class PhysicsUpdraftEventOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsupdrafteventoptions#strength
func (p *PhysicsUpdraftEventOptions) SetStrength(strength float64) *PhysicsUpdraftEventOptions {
	p := ba.ctx.Get("PhysicsUpdraftEventOptions").New(strength)
	return PhysicsUpdraftEventOptionsFromJSObject(p, ba.ctx)
}

// UpdraftMode returns the UpdraftMode property of class PhysicsUpdraftEventOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsupdrafteventoptions#updraftmode
func (p *PhysicsUpdraftEventOptions) UpdraftMode(updraftMode js.Value) *PhysicsUpdraftEventOptions {
	p := ba.ctx.Get("PhysicsUpdraftEventOptions").New(updraftMode)
	return PhysicsUpdraftEventOptionsFromJSObject(p, ba.ctx)
}

// SetUpdraftMode sets the UpdraftMode property of class PhysicsUpdraftEventOptions.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsupdrafteventoptions#updraftmode
func (p *PhysicsUpdraftEventOptions) SetUpdraftMode(updraftMode js.Value) *PhysicsUpdraftEventOptions {
	p := ba.ctx.Get("PhysicsUpdraftEventOptions").New(updraftMode)
	return PhysicsUpdraftEventOptionsFromJSObject(p, ba.ctx)
}

*/
