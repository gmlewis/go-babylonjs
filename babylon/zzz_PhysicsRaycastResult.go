// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PhysicsRaycastResult represents a babylon.js PhysicsRaycastResult.
// Holds the data for the raycast result
//
// See: https://doc.babylonjs.com/how_to/using_the_physics_engine
type PhysicsRaycastResult struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (p *PhysicsRaycastResult) JSObject() js.Value { return p.p }

// PhysicsRaycastResult returns a PhysicsRaycastResult JavaScript class.
func (ba *Babylon) PhysicsRaycastResult() *PhysicsRaycastResult {
	p := ba.ctx.Get("PhysicsRaycastResult")
	return PhysicsRaycastResultFromJSObject(p, ba.ctx)
}

// PhysicsRaycastResultFromJSObject returns a wrapped PhysicsRaycastResult JavaScript class.
func PhysicsRaycastResultFromJSObject(p js.Value, ctx js.Value) *PhysicsRaycastResult {
	return &PhysicsRaycastResult{p: p, ctx: ctx}
}

// TODO: methods
