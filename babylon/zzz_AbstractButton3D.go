// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// AbstractButton3D represents a babylon.js AbstractButton3D.
// Class used as a root to all buttons
type AbstractButton3D struct{ *Control3D }

// JSObject returns the underlying js.Value.
func (a *AbstractButton3D) JSObject() js.Value { return a.p }

// AbstractButton3D returns a AbstractButton3D JavaScript class.
func (b *Babylon) AbstractButton3D() *AbstractButton3D {
	p := b.ctx.Get("AbstractButton3D")
	return AbstractButton3DFromJSObject(p)
}

// AbstractButton3DFromJSObject returns a wrapped AbstractButton3D JavaScript class.
func AbstractButton3DFromJSObject(p js.Value) *AbstractButton3D {
	return &AbstractButton3D{Control3DFromJSObject(p)}
}

// NewAbstractButton3D returns a new AbstractButton3D object.
//
// https://doc.babylonjs.com/api/classes/babylon.abstractbutton3d
func (b *Babylon) NewAbstractButton3D(todo parameters) *AbstractButton3D {
	p := b.ctx.Get("AbstractButton3D").New(todo)
	return AbstractButton3DFromJSObject(p)
}

// TODO: methods
