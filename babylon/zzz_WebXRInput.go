// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// WebXRInput represents a babylon.js WebXRInput.
// XR input used to track XR inputs such as controllers/rays
type WebXRInput struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (w *WebXRInput) JSObject() js.Value { return w.p }

// WebXRInput returns a WebXRInput JavaScript class.
func (ba *Babylon) WebXRInput() *WebXRInput {
	p := ba.ctx.Get("WebXRInput")
	return WebXRInputFromJSObject(p)
}

// WebXRInputFromJSObject returns a wrapped WebXRInput JavaScript class.
func WebXRInputFromJSObject(p js.Value) *WebXRInput {
	return &WebXRInput{p: p}
}

// NewWebXRInput returns a new WebXRInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrinput
func (ba *Babylon) NewWebXRInput(baseExperience *WebXRExperienceHelper) *WebXRInput {
	p := ba.ctx.Get("WebXRInput").New(baseExperience.JSObject())
	return WebXRInputFromJSObject(p)
}

// TODO: methods
