// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SpritePackedManager represents a babylon.js SpritePackedManager.
// Class used to manage multiple sprites of different sizes on the same spritesheet

//
// See: http://doc.babylonjs.com/babylon101/sprites
type SpritePackedManager struct{ *SpriteManager }

// JSObject returns the underlying js.Value.
func (s *SpritePackedManager) JSObject() js.Value { return s.p }

// SpritePackedManager returns a SpritePackedManager JavaScript class.
func (b *Babylon) SpritePackedManager() *SpritePackedManager {
	p := b.ctx.Get("SpritePackedManager")
	return SpritePackedManagerFromJSObject(p)
}

// SpritePackedManagerFromJSObject returns a wrapped SpritePackedManager JavaScript class.
func SpritePackedManagerFromJSObject(p js.Value) *SpritePackedManager {
	return &SpritePackedManager{SpriteManagerFromJSObject(p)}
}

// NewSpritePackedManager returns a new SpritePackedManager object.
//
// https://doc.babylonjs.com/api/classes/babylon.spritepackedmanager
func (b *Babylon) NewSpritePackedManager(todo parameters) *SpritePackedManager {
	p := b.ctx.Get("SpritePackedManager").New(todo)
	return SpritePackedManagerFromJSObject(p)
}

// TODO: methods
