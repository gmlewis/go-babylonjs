// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// DivideBlock represents a babylon.js DivideBlock.
// Block used to divide 2 vectors
type DivideBlock struct{ *NodeMaterialBlock }

// JSObject returns the underlying js.Value.
func (d *DivideBlock) JSObject() js.Value { return d.p }

// DivideBlock returns a DivideBlock JavaScript class.
func (b *Babylon) DivideBlock() *DivideBlock {
	p := b.ctx.Get("DivideBlock")
	return DivideBlockFromJSObject(p)
}

// DivideBlockFromJSObject returns a wrapped DivideBlock JavaScript class.
func DivideBlockFromJSObject(p js.Value) *DivideBlock {
	return &DivideBlock{NodeMaterialBlockFromJSObject(p)}
}

// NewDivideBlock returns a new DivideBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.divideblock
func (b *Babylon) NewDivideBlock(todo parameters) *DivideBlock {
	p := b.ctx.Get("DivideBlock").New(todo)
	return DivideBlockFromJSObject(p)
}

// TODO: methods
