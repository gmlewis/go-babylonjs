// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IExplorerExtensibilityGroup represents a babylon.js IExplorerExtensibilityGroup.
// Defines a group of actions associated with a predicate to use when extending the Inspector scene explorer
type IExplorerExtensibilityGroup struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IExplorerExtensibilityGroup) JSObject() js.Value { return i.p }

// IExplorerExtensibilityGroup returns a IExplorerExtensibilityGroup JavaScript class.
func (ba *Babylon) IExplorerExtensibilityGroup() *IExplorerExtensibilityGroup {
	p := ba.ctx.Get("IExplorerExtensibilityGroup")
	return IExplorerExtensibilityGroupFromJSObject(p, ba.ctx)
}

// IExplorerExtensibilityGroupFromJSObject returns a wrapped IExplorerExtensibilityGroup JavaScript class.
func IExplorerExtensibilityGroupFromJSObject(p js.Value, ctx js.Value) *IExplorerExtensibilityGroup {
	return &IExplorerExtensibilityGroup{p: p, ctx: ctx}
}

// IExplorerExtensibilityGroupArrayToJSArray returns a JavaScript Array for the wrapped array.
func IExplorerExtensibilityGroupArrayToJSArray(array []*IExplorerExtensibilityGroup) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// Entries returns the Entries property of class IExplorerExtensibilityGroup.
//
// https://doc.babylonjs.com/api/classes/babylon.iexplorerextensibilitygroup#entries
func (i *IExplorerExtensibilityGroup) Entries() *IExplorerExtensibilityOption {
	retVal := i.p.Get("entries")
	return IExplorerExtensibilityOptionFromJSObject(retVal, i.ctx)
}

// SetEntries sets the Entries property of class IExplorerExtensibilityGroup.
//
// https://doc.babylonjs.com/api/classes/babylon.iexplorerextensibilitygroup#entries
func (i *IExplorerExtensibilityGroup) SetEntries(entries *IExplorerExtensibilityOption) *IExplorerExtensibilityGroup {
	i.p.Set("entries", entries.JSObject())
	return i
}

// Predicate returns the Predicate property of class IExplorerExtensibilityGroup.
//
// https://doc.babylonjs.com/api/classes/babylon.iexplorerextensibilitygroup#predicate
func (i *IExplorerExtensibilityGroup) Predicate() js.Value {
	retVal := i.p.Get("predicate")
	return retVal
}

// SetPredicate sets the Predicate property of class IExplorerExtensibilityGroup.
//
// https://doc.babylonjs.com/api/classes/babylon.iexplorerextensibilitygroup#predicate
func (i *IExplorerExtensibilityGroup) SetPredicate(predicate func()) *IExplorerExtensibilityGroup {
	i.p.Set("predicate", js.FuncOf(func(this js.Value, args []js.Value) interface{} { predicate(); return nil }))
	return i
}
