// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// WebXRExperienceHelper represents a babylon.js WebXRExperienceHelper.
// Base set of functionality needed to create an XR experince (WebXRSessionManager, Camera, StateManagement, etc.)
//
// See: https://doc.babylonjs.com/how_to/webxr
type WebXRExperienceHelper struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (w *WebXRExperienceHelper) JSObject() js.Value { return w.p }

// WebXRExperienceHelper returns a WebXRExperienceHelper JavaScript class.
func (ba *Babylon) WebXRExperienceHelper() *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper")
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// WebXRExperienceHelperFromJSObject returns a wrapped WebXRExperienceHelper JavaScript class.
func WebXRExperienceHelperFromJSObject(p js.Value, ctx js.Value) *WebXRExperienceHelper {
	return &WebXRExperienceHelper{p: p, ctx: ctx}
}

// CreateAsync calls the CreateAsync method on the WebXRExperienceHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#createasync
func (w *WebXRExperienceHelper) CreateAsync(scene *Scene) *WebXRExperienceHelper {

	args := make([]interface{}, 0, 1+0)

	args = append(args, scene.JSObject())

	retVal := w.p.Call("CreateAsync", args...)
	return WebXRExperienceHelperFromJSObject(retVal, w.ctx)
}

// Dispose calls the Dispose method on the WebXRExperienceHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#dispose
func (w *WebXRExperienceHelper) Dispose() {

	args := make([]interface{}, 0, 0+0)

	w.p.Call("dispose", args...)
}

// EnterXRAsync calls the EnterXRAsync method on the WebXRExperienceHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#enterxrasync
func (w *WebXRExperienceHelper) EnterXRAsync(sessionMode *XRSessionMode, referenceSpaceType *XRReferenceSpaceType, renderTarget *WebXRRenderTarget) *WebXRSessionManager {

	args := make([]interface{}, 0, 3+0)

	args = append(args, sessionMode.JSObject())
	args = append(args, referenceSpaceType.JSObject())
	args = append(args, renderTarget.JSObject())

	retVal := w.p.Call("enterXRAsync", args...)
	return WebXRSessionManagerFromJSObject(retVal, w.ctx)
}

// ExitXRAsync calls the ExitXRAsync method on the WebXRExperienceHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#exitxrasync
func (w *WebXRExperienceHelper) ExitXRAsync() {

	args := make([]interface{}, 0, 0+0)

	w.p.Call("exitXRAsync", args...)
}

// RotateCameraByQuaternionUsingContainer calls the RotateCameraByQuaternionUsingContainer method on the WebXRExperienceHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#rotatecamerabyquaternionusingcontainer
func (w *WebXRExperienceHelper) RotateCameraByQuaternionUsingContainer(rotation *Quaternion) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, rotation.JSObject())

	w.p.Call("rotateCameraByQuaternionUsingContainer", args...)
}

// SetPositionOfCameraUsingContainer calls the SetPositionOfCameraUsingContainer method on the WebXRExperienceHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#setpositionofcamerausingcontainer
func (w *WebXRExperienceHelper) SetPositionOfCameraUsingContainer(position *Vector3) {

	args := make([]interface{}, 0, 1+0)

	args = append(args, position.JSObject())

	w.p.Call("setPositionOfCameraUsingContainer", args...)
}

/*

// Camera returns the Camera property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#camera
func (w *WebXRExperienceHelper) Camera(camera *WebXRCamera) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(camera.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// SetCamera sets the Camera property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#camera
func (w *WebXRExperienceHelper) SetCamera(camera *WebXRCamera) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(camera.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// Container returns the Container property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#container
func (w *WebXRExperienceHelper) Container(container *AbstractMesh) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(container.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// SetContainer sets the Container property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#container
func (w *WebXRExperienceHelper) SetContainer(container *AbstractMesh) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(container.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// OnStateChangedObservable returns the OnStateChangedObservable property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#onstatechangedobservable
func (w *WebXRExperienceHelper) OnStateChangedObservable(onStateChangedObservable *Observable) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(onStateChangedObservable.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// SetOnStateChangedObservable sets the OnStateChangedObservable property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#onstatechangedobservable
func (w *WebXRExperienceHelper) SetOnStateChangedObservable(onStateChangedObservable *Observable) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(onStateChangedObservable.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// SessionManager returns the SessionManager property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#sessionmanager
func (w *WebXRExperienceHelper) SessionManager(sessionManager *WebXRSessionManager) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(sessionManager.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// SetSessionManager sets the SessionManager property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#sessionmanager
func (w *WebXRExperienceHelper) SetSessionManager(sessionManager *WebXRSessionManager) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(sessionManager.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// State returns the State property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#state
func (w *WebXRExperienceHelper) State(state *WebXRState) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(state.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

// SetState sets the State property of class WebXRExperienceHelper.
//
// https://doc.babylonjs.com/api/classes/babylon.webxrexperiencehelper#state
func (w *WebXRExperienceHelper) SetState(state *WebXRState) *WebXRExperienceHelper {
	p := ba.ctx.Get("WebXRExperienceHelper").New(state.JSObject())
	return WebXRExperienceHelperFromJSObject(p, ba.ctx)
}

*/
