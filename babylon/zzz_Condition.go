// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Condition represents a babylon.js Condition.
// A Condition applied to an Action
type Condition struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (c *Condition) JSObject() js.Value { return c.p }

// Condition returns a Condition JavaScript class.
func (ba *Babylon) Condition() *Condition {
	p := ba.ctx.Get("Condition")
	return ConditionFromJSObject(p, ba.ctx)
}

// ConditionFromJSObject returns a wrapped Condition JavaScript class.
func ConditionFromJSObject(p js.Value, ctx js.Value) *Condition {
	return &Condition{p: p, ctx: ctx}
}

// NewCondition returns a new Condition object.
//
// https://doc.babylonjs.com/api/classes/babylon.condition
func (ba *Babylon) NewCondition(actionManager *ActionManager) *Condition {
	p := ba.ctx.Get("Condition").New(actionManager.JSObject())
	return ConditionFromJSObject(p, ba.ctx)
}

// TODO: methods
