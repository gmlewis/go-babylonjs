// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ImageBasedSlider represents a babylon.js ImageBasedSlider.
// Class used to create slider controls based on images
type ImageBasedSlider struct{ *BaseSlider }

// JSObject returns the underlying js.Value.
func (i *ImageBasedSlider) JSObject() js.Value { return i.p }

// ImageBasedSlider returns a ImageBasedSlider JavaScript class.
func (b *Babylon) ImageBasedSlider() *ImageBasedSlider {
	p := b.ctx.Get("ImageBasedSlider")
	return ImageBasedSliderFromJSObject(p)
}

// ImageBasedSliderFromJSObject returns a wrapped ImageBasedSlider JavaScript class.
func ImageBasedSliderFromJSObject(p js.Value) *ImageBasedSlider {
	return &ImageBasedSlider{BaseSliderFromJSObject(p)}
}

// NewImageBasedSliderOpts contains optional parameters for NewImageBasedSlider.
type NewImageBasedSliderOpts struct {
	Name *string
}

// NewImageBasedSlider returns a new ImageBasedSlider object.
//
// https://doc.babylonjs.com/api/classes/babylon.imagebasedslider
func (b *Babylon) NewImageBasedSlider(opts *NewImageBasedSliderOpts) *ImageBasedSlider {
	if opts == nil {
		opts = &NewImageBasedSliderOpts{}
	}

	p := b.ctx.Get("ImageBasedSlider").New(opts.Name)
	return ImageBasedSliderFromJSObject(p)
}

// TODO: methods
