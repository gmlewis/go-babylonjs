// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PhysicsHelper represents a babylon.js PhysicsHelper.
// A helper for physics simulations
//
// See: https://doc.babylonjs.com/how_to/using_the_physics_engine#further-functionality-of-the-impostor-class
type PhysicsHelper struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (p *PhysicsHelper) JSObject() js.Value { return p.p }

// PhysicsHelper returns a PhysicsHelper JavaScript class.
func (ba *Babylon) PhysicsHelper() *PhysicsHelper {
	p := ba.ctx.Get("PhysicsHelper")
	return PhysicsHelperFromJSObject(p)
}

// PhysicsHelperFromJSObject returns a wrapped PhysicsHelper JavaScript class.
func PhysicsHelperFromJSObject(p js.Value) *PhysicsHelper {
	return &PhysicsHelper{p: p}
}

// NewPhysicsHelper returns a new PhysicsHelper object.
//
// https://doc.babylonjs.com/api/classes/babylon.physicshelper
func (ba *Babylon) NewPhysicsHelper(scene *Scene) *PhysicsHelper {
	p := ba.ctx.Get("PhysicsHelper").New(scene.JSObject())
	return PhysicsHelperFromJSObject(p)
}

// TODO: methods
