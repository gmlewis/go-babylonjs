// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ISkin represents a babylon.js ISkin.
// Loader interface with additional members.
type ISkin struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *ISkin) JSObject() js.Value { return i.p }

// ISkin returns a ISkin JavaScript class.
func (ba *Babylon) ISkin() *ISkin {
	p := ba.ctx.Get("ISkin")
	return ISkinFromJSObject(p, ba.ctx)
}

// ISkinFromJSObject returns a wrapped ISkin JavaScript class.
func ISkinFromJSObject(p js.Value, ctx js.Value) *ISkin {
	return &ISkin{p: p, ctx: ctx}
}

// ISkinArrayToJSArray returns a JavaScript Array for the wrapped array.
func ISkinArrayToJSArray(array []*ISkin) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Extensions returns the Extensions property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#extensions
func (i *ISkin) Extensions(extensions js.Value) *ISkin {
	p := ba.ctx.Get("ISkin").New(extensions)
	return ISkinFromJSObject(p, ba.ctx)
}

// SetExtensions sets the Extensions property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#extensions
func (i *ISkin) SetExtensions(extensions js.Value) *ISkin {
	p := ba.ctx.Get("ISkin").New(extensions)
	return ISkinFromJSObject(p, ba.ctx)
}

// Extras returns the Extras property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#extras
func (i *ISkin) Extras(extras interface{}) *ISkin {
	p := ba.ctx.Get("ISkin").New(extras)
	return ISkinFromJSObject(p, ba.ctx)
}

// SetExtras sets the Extras property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#extras
func (i *ISkin) SetExtras(extras interface{}) *ISkin {
	p := ba.ctx.Get("ISkin").New(extras)
	return ISkinFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#index
func (i *ISkin) Index(index float64) *ISkin {
	p := ba.ctx.Get("ISkin").New(index)
	return ISkinFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#index
func (i *ISkin) SetIndex(index float64) *ISkin {
	p := ba.ctx.Get("ISkin").New(index)
	return ISkinFromJSObject(p, ba.ctx)
}

// InverseBindMatrices returns the InverseBindMatrices property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#inversebindmatrices
func (i *ISkin) InverseBindMatrices(inverseBindMatrices float64) *ISkin {
	p := ba.ctx.Get("ISkin").New(inverseBindMatrices)
	return ISkinFromJSObject(p, ba.ctx)
}

// SetInverseBindMatrices sets the InverseBindMatrices property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#inversebindmatrices
func (i *ISkin) SetInverseBindMatrices(inverseBindMatrices float64) *ISkin {
	p := ba.ctx.Get("ISkin").New(inverseBindMatrices)
	return ISkinFromJSObject(p, ba.ctx)
}

// Joints returns the Joints property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#joints
func (i *ISkin) Joints(joints float64) *ISkin {
	p := ba.ctx.Get("ISkin").New(joints)
	return ISkinFromJSObject(p, ba.ctx)
}

// SetJoints sets the Joints property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#joints
func (i *ISkin) SetJoints(joints float64) *ISkin {
	p := ba.ctx.Get("ISkin").New(joints)
	return ISkinFromJSObject(p, ba.ctx)
}

// Name returns the Name property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#name
func (i *ISkin) Name(name string) *ISkin {
	p := ba.ctx.Get("ISkin").New(name)
	return ISkinFromJSObject(p, ba.ctx)
}

// SetName sets the Name property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#name
func (i *ISkin) SetName(name string) *ISkin {
	p := ba.ctx.Get("ISkin").New(name)
	return ISkinFromJSObject(p, ba.ctx)
}

// Skeleton returns the Skeleton property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#skeleton
func (i *ISkin) Skeleton(skeleton float64) *ISkin {
	p := ba.ctx.Get("ISkin").New(skeleton)
	return ISkinFromJSObject(p, ba.ctx)
}

// SetSkeleton sets the Skeleton property of class ISkin.
//
// https://doc.babylonjs.com/api/classes/babylon.iskin#skeleton
func (i *ISkin) SetSkeleton(skeleton float64) *ISkin {
	p := ba.ctx.Get("ISkin").New(skeleton)
	return ISkinFromJSObject(p, ba.ctx)
}

*/
