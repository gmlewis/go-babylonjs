// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ISkin represents a babylon.js ISkin.
// Loader interface with additional members.
type ISkin struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *ISkin) JSObject() js.Value { return i.p }

// ISkin returns a ISkin JavaScript class.
func (ba *Babylon) ISkin() *ISkin {
	p := ba.ctx.Get("ISkin")
	return ISkinFromJSObject(p, ba.ctx)
}

// ISkinFromJSObject returns a wrapped ISkin JavaScript class.
func ISkinFromJSObject(p js.Value, ctx js.Value) *ISkin {
	return &ISkin{p: p, ctx: ctx}
}

// ISkinArrayToJSArray returns a JavaScript Array for the wrapped array.
func ISkinArrayToJSArray(array []*ISkin) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

 */
