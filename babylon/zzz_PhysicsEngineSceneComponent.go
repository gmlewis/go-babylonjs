// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PhysicsEngineSceneComponent represents a babylon.js PhysicsEngineSceneComponent.
// Defines the physics engine scene component responsible to manage a physics engine
type PhysicsEngineSceneComponent struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (p *PhysicsEngineSceneComponent) JSObject() js.Value { return p.p }

// PhysicsEngineSceneComponent returns a PhysicsEngineSceneComponent JavaScript class.
func (b *Babylon) PhysicsEngineSceneComponent() *PhysicsEngineSceneComponent {
	p := b.ctx.Get("PhysicsEngineSceneComponent")
	return PhysicsEngineSceneComponentFromJSObject(p)
}

// PhysicsEngineSceneComponentFromJSObject returns a wrapped PhysicsEngineSceneComponent JavaScript class.
func PhysicsEngineSceneComponentFromJSObject(p js.Value) *PhysicsEngineSceneComponent {
	return &PhysicsEngineSceneComponent{p: p}
}

// NewPhysicsEngineSceneComponent returns a new PhysicsEngineSceneComponent object.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsenginescenecomponent
func (b *Babylon) NewPhysicsEngineSceneComponent(scene *Scene) *PhysicsEngineSceneComponent {
	p := b.ctx.Get("PhysicsEngineSceneComponent").New(scene.JSObject())
	return PhysicsEngineSceneComponentFromJSObject(p)
}

// TODO: methods
