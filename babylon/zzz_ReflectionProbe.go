// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ReflectionProbe represents a babylon.js ReflectionProbe.
// Class used to generate realtime reflection / refraction cube textures
//
// See: http://doc.babylonjs.com/how_to/how_to_use_reflection_probes
type ReflectionProbe struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (r *ReflectionProbe) JSObject() js.Value { return r.p }

// ReflectionProbe returns a ReflectionProbe JavaScript class.
func (ba *Babylon) ReflectionProbe() *ReflectionProbe {
	p := ba.ctx.Get("ReflectionProbe")
	return ReflectionProbeFromJSObject(p)
}

// ReflectionProbeFromJSObject returns a wrapped ReflectionProbe JavaScript class.
func ReflectionProbeFromJSObject(p js.Value) *ReflectionProbe {
	return &ReflectionProbe{p: p}
}

// NewReflectionProbeOpts contains optional parameters for NewReflectionProbe.
type NewReflectionProbeOpts struct {
	GenerateMipMaps *JSBool

	UseFloat *JSBool
}

// NewReflectionProbe returns a new ReflectionProbe object.
//
// https://doc.babylonjs.com/api/classes/babylon.reflectionprobe
func (ba *Babylon) NewReflectionProbe(name string, size float64, scene *Scene, opts *NewReflectionProbeOpts) *ReflectionProbe {
	if opts == nil {
		opts = &NewReflectionProbeOpts{}
	}

	p := ba.ctx.Get("ReflectionProbe").New(name, size, scene.JSObject(), opts.GenerateMipMaps.JSObject(), opts.UseFloat.JSObject())
	return ReflectionProbeFromJSObject(p)
}

// TODO: methods
