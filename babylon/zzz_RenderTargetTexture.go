// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// RenderTargetTexture represents a babylon.js RenderTargetTexture.
// This Helps creating a texture that will be created from a camera in your scene.
// It is basically a dynamic texture that could be used to create special effects for instance.
// Actually, It is the base of lot of effects in the framework like post process, shadows, effect layers and rendering pipelines...
type RenderTargetTexture struct{ *Texture }

// JSObject returns the underlying js.Value.
func (r *RenderTargetTexture) JSObject() js.Value { return r.p }

// RenderTargetTexture returns a RenderTargetTexture JavaScript class.
func (b *Babylon) RenderTargetTexture() *RenderTargetTexture {
	p := b.ctx.Get("RenderTargetTexture")
	return RenderTargetTextureFromJSObject(p)
}

// RenderTargetTextureFromJSObject returns a wrapped RenderTargetTexture JavaScript class.
func RenderTargetTextureFromJSObject(p js.Value) *RenderTargetTexture {
	return &RenderTargetTexture{TextureFromJSObject(p)}
}

// NewRenderTargetTexture returns a new RenderTargetTexture object.
//
// https://doc.babylonjs.com/api/classes/babylon.rendertargettexture
func (b *Babylon) NewRenderTargetTexture(todo parameters) *RenderTargetTexture {
	p := b.ctx.Get("RenderTargetTexture").New(todo)
	return RenderTargetTextureFromJSObject(p)
}

// TODO: methods
