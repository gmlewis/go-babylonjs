// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ValueAndUnit represents a babylon.js ValueAndUnit.
// Class used to specific a value and its associated unit
type ValueAndUnit struct{}

// JSObject returns the underlying js.Value.
func (v *ValueAndUnit) JSObject() js.Value { return v.p }

// ValueAndUnit returns a ValueAndUnit JavaScript class.
func (b *Babylon) ValueAndUnit() *ValueAndUnit {
	p := b.ctx.Get("ValueAndUnit")
	return ValueAndUnitFromJSObject(p)
}

// ValueAndUnitFromJSObject returns a wrapped ValueAndUnit JavaScript class.
func ValueAndUnitFromJSObject(p js.Value) *ValueAndUnit {
	return &ValueAndUnit{p: p}
}

// NewValueAndUnit returns a new ValueAndUnit object.
//
// https://doc.babylonjs.com/api/classes/babylon.valueandunit
func (b *Babylon) NewValueAndUnit(todo parameters) *ValueAndUnit {
	p := b.ctx.Get("ValueAndUnit").New(todo)
	return ValueAndUnitFromJSObject(p)
}

// TODO: methods
