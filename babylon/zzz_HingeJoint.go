// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// HingeJoint represents a babylon.js HingeJoint.
// This class represents a single physics Hinge-Joint
//
// See: https://doc.babylonjs.com/how_to/using_the_physics_engine
type HingeJoint struct{ *MotorEnabledJoint }

// JSObject returns the underlying js.Value.
func (h *HingeJoint) JSObject() js.Value { return h.p }

// HingeJoint returns a HingeJoint JavaScript class.
func (b *Babylon) HingeJoint() *HingeJoint {
	p := b.ctx.Get("HingeJoint")
	return HingeJointFromJSObject(p)
}

// HingeJointFromJSObject returns a wrapped HingeJoint JavaScript class.
func HingeJointFromJSObject(p js.Value) *HingeJoint {
	return &HingeJoint{MotorEnabledJointFromJSObject(p)}
}

// NewHingeJoint returns a new HingeJoint object.
//
// https://doc.babylonjs.com/api/classes/babylon.hingejoint
func (b *Babylon) NewHingeJoint(jointData js.Value) *HingeJoint {
	p := b.ctx.Get("HingeJoint").New(jointData)
	return HingeJointFromJSObject(p)
}

// TODO: methods
