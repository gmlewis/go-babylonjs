// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// IMeshPrimitive represents a babylon.js IMeshPrimitive.
// Loader interface with additional members.
type IMeshPrimitive struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *IMeshPrimitive) JSObject() js.Value { return i.p }

// IMeshPrimitive returns a IMeshPrimitive JavaScript class.
func (ba *Babylon) IMeshPrimitive() *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive")
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// IMeshPrimitiveFromJSObject returns a wrapped IMeshPrimitive JavaScript class.
func IMeshPrimitiveFromJSObject(p js.Value, ctx js.Value) *IMeshPrimitive {
	return &IMeshPrimitive{p: p, ctx: ctx}
}

// IMeshPrimitiveArrayToJSArray returns a JavaScript Array for the wrapped array.
func IMeshPrimitiveArrayToJSArray(array []*IMeshPrimitive) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

/*

// Attributes returns the Attributes property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#attributes
func (i *IMeshPrimitive) Attributes(attributes js.Value) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(attributes)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// SetAttributes sets the Attributes property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#attributes
func (i *IMeshPrimitive) SetAttributes(attributes js.Value) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(attributes)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// Extensions returns the Extensions property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#extensions
func (i *IMeshPrimitive) Extensions(extensions js.Value) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(extensions)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// SetExtensions sets the Extensions property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#extensions
func (i *IMeshPrimitive) SetExtensions(extensions js.Value) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(extensions)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// Extras returns the Extras property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#extras
func (i *IMeshPrimitive) Extras(extras interface{}) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(extras)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// SetExtras sets the Extras property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#extras
func (i *IMeshPrimitive) SetExtras(extras interface{}) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(extras)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// Index returns the Index property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#index
func (i *IMeshPrimitive) Index(index float64) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(index)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// SetIndex sets the Index property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#index
func (i *IMeshPrimitive) SetIndex(index float64) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(index)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// Indices returns the Indices property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#indices
func (i *IMeshPrimitive) Indices(indices float64) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(indices)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// SetIndices sets the Indices property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#indices
func (i *IMeshPrimitive) SetIndices(indices float64) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(indices)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// Material returns the Material property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#material
func (i *IMeshPrimitive) Material(material float64) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(material)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// SetMaterial sets the Material property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#material
func (i *IMeshPrimitive) SetMaterial(material float64) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(material)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// Mode returns the Mode property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#mode
func (i *IMeshPrimitive) Mode(mode *MeshPrimitiveMode) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(mode.JSObject())
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// SetMode sets the Mode property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#mode
func (i *IMeshPrimitive) SetMode(mode *MeshPrimitiveMode) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(mode.JSObject())
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// Targets returns the Targets property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#targets
func (i *IMeshPrimitive) Targets(targets js.Value) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(targets)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

// SetTargets sets the Targets property of class IMeshPrimitive.
//
// https://doc.babylonjs.com/api/classes/babylon.imeshprimitive#targets
func (i *IMeshPrimitive) SetTargets(targets js.Value) *IMeshPrimitive {
	p := ba.ctx.Get("IMeshPrimitive").New(targets)
	return IMeshPrimitiveFromJSObject(p, ba.ctx)
}

*/
