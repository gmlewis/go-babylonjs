// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// InstancingAttributeInfo represents a babylon.js InstancingAttributeInfo.
// Interface for attribute information associated with buffer instanciation
type InstancingAttributeInfo struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (i *InstancingAttributeInfo) JSObject() js.Value { return i.p }

// InstancingAttributeInfo returns a InstancingAttributeInfo JavaScript class.
func (ba *Babylon) InstancingAttributeInfo() *InstancingAttributeInfo {
	p := ba.ctx.Get("InstancingAttributeInfo")
	return InstancingAttributeInfoFromJSObject(p, ba.ctx)
}

// InstancingAttributeInfoFromJSObject returns a wrapped InstancingAttributeInfo JavaScript class.
func InstancingAttributeInfoFromJSObject(p js.Value, ctx js.Value) *InstancingAttributeInfo {
	return &InstancingAttributeInfo{p: p, ctx: ctx}
}

// InstancingAttributeInfoArrayToJSArray returns a JavaScript Array for the wrapped array.
func InstancingAttributeInfoArrayToJSArray(array []*InstancingAttributeInfo) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// AttributeName returns the AttributeName property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#attributename
func (i *InstancingAttributeInfo) AttributeName() string {
	retVal := i.p.Get("attributeName")
	return retVal.String()
}

// SetAttributeName sets the AttributeName property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#attributename
func (i *InstancingAttributeInfo) SetAttributeName(attributeName string) *InstancingAttributeInfo {
	i.p.Set("attributeName", attributeName)
	return i
}

// AttributeSize returns the AttributeSize property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#attributesize
func (i *InstancingAttributeInfo) AttributeSize() float64 {
	retVal := i.p.Get("attributeSize")
	return retVal.Float()
}

// SetAttributeSize sets the AttributeSize property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#attributesize
func (i *InstancingAttributeInfo) SetAttributeSize(attributeSize float64) *InstancingAttributeInfo {
	i.p.Set("attributeSize", attributeSize)
	return i
}

// AttributeType returns the AttributeType property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#attributetype
func (i *InstancingAttributeInfo) AttributeType() float64 {
	retVal := i.p.Get("attributeType")
	return retVal.Float()
}

// SetAttributeType sets the AttributeType property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#attributetype
func (i *InstancingAttributeInfo) SetAttributeType(attributeType float64) *InstancingAttributeInfo {
	i.p.Set("attributeType", attributeType)
	return i
}

// Index returns the Index property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#index
func (i *InstancingAttributeInfo) Index() float64 {
	retVal := i.p.Get("index")
	return retVal.Float()
}

// SetIndex sets the Index property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#index
func (i *InstancingAttributeInfo) SetIndex(index float64) *InstancingAttributeInfo {
	i.p.Set("index", index)
	return i
}

// Normalized returns the Normalized property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#normalized
func (i *InstancingAttributeInfo) Normalized() bool {
	retVal := i.p.Get("normalized")
	return retVal.Bool()
}

// SetNormalized sets the Normalized property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#normalized
func (i *InstancingAttributeInfo) SetNormalized(normalized bool) *InstancingAttributeInfo {
	i.p.Set("normalized", normalized)
	return i
}

// Offset returns the Offset property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#offset
func (i *InstancingAttributeInfo) Offset() float64 {
	retVal := i.p.Get("offset")
	return retVal.Float()
}

// SetOffset sets the Offset property of class InstancingAttributeInfo.
//
// https://doc.babylonjs.com/api/classes/babylon.instancingattributeinfo#offset
func (i *InstancingAttributeInfo) SetOffset(offset float64) *InstancingAttributeInfo {
	i.p.Set("offset", offset)
	return i
}
