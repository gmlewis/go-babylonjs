// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// LightInformationBlock represents a babylon.js LightInformationBlock.
// Block used to get data information from a light
type LightInformationBlock struct {
	*NodeMaterialBlock
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (l *LightInformationBlock) JSObject() js.Value { return l.p }

// LightInformationBlock returns a LightInformationBlock JavaScript class.
func (ba *Babylon) LightInformationBlock() *LightInformationBlock {
	p := ba.ctx.Get("LightInformationBlock")
	return LightInformationBlockFromJSObject(p, ba.ctx)
}

// LightInformationBlockFromJSObject returns a wrapped LightInformationBlock JavaScript class.
func LightInformationBlockFromJSObject(p js.Value, ctx js.Value) *LightInformationBlock {
	return &LightInformationBlock{NodeMaterialBlock: NodeMaterialBlockFromJSObject(p, ctx), ctx: ctx}
}

// NewLightInformationBlock returns a new LightInformationBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.lightinformationblock
func (ba *Babylon) NewLightInformationBlock(name string) *LightInformationBlock {
	p := ba.ctx.Get("LightInformationBlock").New(name)
	return LightInformationBlockFromJSObject(p, ba.ctx)
}

// TODO: methods
