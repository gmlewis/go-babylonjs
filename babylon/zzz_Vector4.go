// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// Vector4 represents a babylon.js Vector4.
// Vector4 class created for EulerAngle class conversion to Quaternion
type Vector4 struct{ p js.Value }

// JSObject returns the underlying js.Value.
func (v *Vector4) JSObject() js.Value { return v.p }

// Vector4 returns a Vector4 JavaScript class.
func (ba *Babylon) Vector4() *Vector4 {
	p := ba.ctx.Get("Vector4")
	return Vector4FromJSObject(p)
}

// Vector4FromJSObject returns a wrapped Vector4 JavaScript class.
func Vector4FromJSObject(p js.Value) *Vector4 {
	return &Vector4{p: p}
}

// NewVector4 returns a new Vector4 object.
//
// https://doc.babylonjs.com/api/classes/babylon.vector4
func (ba *Babylon) NewVector4(x float64, y float64, z float64, w float64) *Vector4 {
	p := ba.ctx.Get("Vector4").New(x, y, z, w)
	return Vector4FromJSObject(p)
}

// TODO: methods
