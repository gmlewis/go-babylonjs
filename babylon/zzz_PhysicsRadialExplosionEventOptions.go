// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// PhysicsRadialExplosionEventOptions represents a babylon.js PhysicsRadialExplosionEventOptions.
// Options fot the radial explosion event

//
// See: https://doc.babylonjs.com/how_to/using_the_physics_engine#further-functionality-of-the-impostor-class
type PhysicsRadialExplosionEventOptions struct{}

// JSObject returns the underlying js.Value.
func (p *PhysicsRadialExplosionEventOptions) JSObject() js.Value { return p.p }

// PhysicsRadialExplosionEventOptions returns a PhysicsRadialExplosionEventOptions JavaScript class.
func (b *Babylon) PhysicsRadialExplosionEventOptions() *PhysicsRadialExplosionEventOptions {
	p := b.ctx.Get("PhysicsRadialExplosionEventOptions")
	return PhysicsRadialExplosionEventOptionsFromJSObject(p)
}

// PhysicsRadialExplosionEventOptionsFromJSObject returns a wrapped PhysicsRadialExplosionEventOptions JavaScript class.
func PhysicsRadialExplosionEventOptionsFromJSObject(p js.Value) *PhysicsRadialExplosionEventOptions {
	return &PhysicsRadialExplosionEventOptions{p: p}
}

// NewPhysicsRadialExplosionEventOptions returns a new PhysicsRadialExplosionEventOptions object.
//
// https://doc.babylonjs.com/api/classes/babylon.physicsradialexplosioneventoptions
func (b *Babylon) NewPhysicsRadialExplosionEventOptions(todo parameters) *PhysicsRadialExplosionEventOptions {
	p := b.ctx.Get("PhysicsRadialExplosionEventOptions").New(todo)
	return PhysicsRadialExplosionEventOptionsFromJSObject(p)
}

// TODO: methods
