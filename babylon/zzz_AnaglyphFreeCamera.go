// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// AnaglyphFreeCamera represents a babylon.js AnaglyphFreeCamera.
// Camera used to simulate anaglyphic rendering (based on FreeCamera)
//
// See: http://doc.babylonjs.com/features/cameras#anaglyph-cameras
type AnaglyphFreeCamera struct {
	*FreeCamera
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (a *AnaglyphFreeCamera) JSObject() js.Value { return a.p }

// AnaglyphFreeCamera returns a AnaglyphFreeCamera JavaScript class.
func (ba *Babylon) AnaglyphFreeCamera() *AnaglyphFreeCamera {
	p := ba.ctx.Get("AnaglyphFreeCamera")
	return AnaglyphFreeCameraFromJSObject(p, ba.ctx)
}

// AnaglyphFreeCameraFromJSObject returns a wrapped AnaglyphFreeCamera JavaScript class.
func AnaglyphFreeCameraFromJSObject(p js.Value, ctx js.Value) *AnaglyphFreeCamera {
	return &AnaglyphFreeCamera{FreeCamera: FreeCameraFromJSObject(p, ctx), ctx: ctx}
}

// NewAnaglyphFreeCamera returns a new AnaglyphFreeCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.anaglyphfreecamera
func (ba *Babylon) NewAnaglyphFreeCamera(name string, position *Vector3, interaxialDistance float64, scene *Scene) *AnaglyphFreeCamera {
	p := ba.ctx.Get("AnaglyphFreeCamera").New(name, position.JSObject(), interaxialDistance, scene.JSObject())
	return AnaglyphFreeCameraFromJSObject(p, ba.ctx)
}

// TODO: methods
