// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// GamepadButtonChanges represents a babylon.js GamepadButtonChanges.
// An interface which manages callbacks for gamepad button changes
type GamepadButtonChanges struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (g *GamepadButtonChanges) JSObject() js.Value { return g.p }

// GamepadButtonChanges returns a GamepadButtonChanges JavaScript class.
func (ba *Babylon) GamepadButtonChanges() *GamepadButtonChanges {
	p := ba.ctx.Get("GamepadButtonChanges")
	return GamepadButtonChangesFromJSObject(p, ba.ctx)
}

// GamepadButtonChangesFromJSObject returns a wrapped GamepadButtonChanges JavaScript class.
func GamepadButtonChangesFromJSObject(p js.Value, ctx js.Value) *GamepadButtonChanges {
	return &GamepadButtonChanges{p: p, ctx: ctx}
}

// GamepadButtonChangesArrayToJSArray returns a JavaScript Array for the wrapped array.
func GamepadButtonChangesArrayToJSArray(array []*GamepadButtonChanges) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// Changed returns the Changed property of class GamepadButtonChanges.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadbuttonchanges#changed
func (g *GamepadButtonChanges) Changed() bool {
	retVal := g.p.Get("changed")
	return retVal.Bool()
}

// SetChanged sets the Changed property of class GamepadButtonChanges.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadbuttonchanges#changed
func (g *GamepadButtonChanges) SetChanged(changed bool) *GamepadButtonChanges {
	g.p.Set("changed", changed)
	return g
}

// PressChanged returns the PressChanged property of class GamepadButtonChanges.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadbuttonchanges#presschanged
func (g *GamepadButtonChanges) PressChanged() bool {
	retVal := g.p.Get("pressChanged")
	return retVal.Bool()
}

// SetPressChanged sets the PressChanged property of class GamepadButtonChanges.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadbuttonchanges#presschanged
func (g *GamepadButtonChanges) SetPressChanged(pressChanged bool) *GamepadButtonChanges {
	g.p.Set("pressChanged", pressChanged)
	return g
}

// TouchChanged returns the TouchChanged property of class GamepadButtonChanges.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadbuttonchanges#touchchanged
func (g *GamepadButtonChanges) TouchChanged() bool {
	retVal := g.p.Get("touchChanged")
	return retVal.Bool()
}

// SetTouchChanged sets the TouchChanged property of class GamepadButtonChanges.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadbuttonchanges#touchchanged
func (g *GamepadButtonChanges) SetTouchChanged(touchChanged bool) *GamepadButtonChanges {
	g.p.Set("touchChanged", touchChanged)
	return g
}

// ValueChanged returns the ValueChanged property of class GamepadButtonChanges.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadbuttonchanges#valuechanged
func (g *GamepadButtonChanges) ValueChanged() bool {
	retVal := g.p.Get("valueChanged")
	return retVal.Bool()
}

// SetValueChanged sets the ValueChanged property of class GamepadButtonChanges.
//
// https://doc.babylonjs.com/api/classes/babylon.gamepadbuttonchanges#valuechanged
func (g *GamepadButtonChanges) SetValueChanged(valueChanged bool) *GamepadButtonChanges {
	g.p.Set("valueChanged", valueChanged)
	return g
}
