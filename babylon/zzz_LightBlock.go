// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// LightBlock represents a babylon.js LightBlock.
// Block used to add light in the fragment shader
type LightBlock struct{ *NodeMaterialBlock }

// JSObject returns the underlying js.Value.
func (l *LightBlock) JSObject() js.Value { return l.p }

// LightBlock returns a LightBlock JavaScript class.
func (b *Babylon) LightBlock() *LightBlock {
	p := b.ctx.Get("LightBlock")
	return LightBlockFromJSObject(p)
}

// LightBlockFromJSObject returns a wrapped LightBlock JavaScript class.
func LightBlockFromJSObject(p js.Value) *LightBlock {
	return &LightBlock{NodeMaterialBlockFromJSObject(p)}
}

// NewLightBlock returns a new LightBlock object.
//
// https://doc.babylonjs.com/api/classes/babylon.lightblock
func (b *Babylon) NewLightBlock(name string) *LightBlock {
	p := b.ctx.Get("LightBlock").New(name)
	return LightBlockFromJSObject(p)
}

// TODO: methods
