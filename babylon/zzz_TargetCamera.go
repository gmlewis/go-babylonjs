// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// TargetCamera represents a babylon.js TargetCamera.
// A target camera takes a mesh or position as a target and continues to look at it while it moves.
// This is the base of the follow, arc rotate cameras and Free camera

//
// See: http://doc.babylonjs.com/features/cameras
type TargetCamera struct{ *Camera }

// JSObject returns the underlying js.Value.
func (t *TargetCamera) JSObject() js.Value { return t.p }

// TargetCamera returns a TargetCamera JavaScript class.
func (b *Babylon) TargetCamera() *TargetCamera {
	p := b.ctx.Get("TargetCamera")
	return TargetCameraFromJSObject(p)
}

// TargetCameraFromJSObject returns a wrapped TargetCamera JavaScript class.
func TargetCameraFromJSObject(p js.Value) *TargetCamera {
	return &TargetCamera{CameraFromJSObject(p)}
}

// NewTargetCamera returns a new TargetCamera object.
//
// https://doc.babylonjs.com/api/classes/babylon.targetcamera
func (b *Babylon) NewTargetCamera(todo parameters) *TargetCamera {
	p := b.ctx.Get("TargetCamera").New(todo)
	return TargetCameraFromJSObject(p)
}

// TODO: methods
