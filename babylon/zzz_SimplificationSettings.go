// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// SimplificationSettings represents a babylon.js SimplificationSettings.
// Class used to specify simplification options
//
// See: http://doc.babylonjs.com/how_to/in-browser_mesh_simplification
type SimplificationSettings struct {
	p   js.Value
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (s *SimplificationSettings) JSObject() js.Value { return s.p }

// SimplificationSettings returns a SimplificationSettings JavaScript class.
func (ba *Babylon) SimplificationSettings() *SimplificationSettings {
	p := ba.ctx.Get("SimplificationSettings")
	return SimplificationSettingsFromJSObject(p, ba.ctx)
}

// SimplificationSettingsFromJSObject returns a wrapped SimplificationSettings JavaScript class.
func SimplificationSettingsFromJSObject(p js.Value, ctx js.Value) *SimplificationSettings {
	return &SimplificationSettings{p: p, ctx: ctx}
}

// NewSimplificationSettingsOpts contains optional parameters for NewSimplificationSettings.
type NewSimplificationSettingsOpts struct {
	OptimizeMesh *JSBool
}

// NewSimplificationSettings returns a new SimplificationSettings object.
//
// https://doc.babylonjs.com/api/classes/babylon.simplificationsettings
func (ba *Babylon) NewSimplificationSettings(quality float64, distance float64, opts *NewSimplificationSettingsOpts) *SimplificationSettings {
	if opts == nil {
		opts = &NewSimplificationSettingsOpts{}
	}

	p := ba.ctx.Get("SimplificationSettings").New(quality, distance, opts.OptimizeMesh.JSObject())
	return SimplificationSettingsFromJSObject(p, ba.ctx)
}

// TODO: methods
