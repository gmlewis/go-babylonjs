// Code generated by docs2go. DO NOT EDIT.

package babylon

import (
	"syscall/js"
)

// ArcRotateCameraPointersInput represents a babylon.js ArcRotateCameraPointersInput.
// Manage the pointers inputs to control an arc rotate camera.
//
// See: http://doc.babylonjs.com/how_to/customizing_camera_inputs
type ArcRotateCameraPointersInput struct {
	*BaseCameraPointersInput
	ctx js.Value
}

// JSObject returns the underlying js.Value.
func (a *ArcRotateCameraPointersInput) JSObject() js.Value { return a.p }

// ArcRotateCameraPointersInput returns a ArcRotateCameraPointersInput JavaScript class.
func (ba *Babylon) ArcRotateCameraPointersInput() *ArcRotateCameraPointersInput {
	p := ba.ctx.Get("ArcRotateCameraPointersInput")
	return ArcRotateCameraPointersInputFromJSObject(p, ba.ctx)
}

// ArcRotateCameraPointersInputFromJSObject returns a wrapped ArcRotateCameraPointersInput JavaScript class.
func ArcRotateCameraPointersInputFromJSObject(p js.Value, ctx js.Value) *ArcRotateCameraPointersInput {
	return &ArcRotateCameraPointersInput{BaseCameraPointersInput: BaseCameraPointersInputFromJSObject(p, ctx), ctx: ctx}
}

// ArcRotateCameraPointersInputArrayToJSArray returns a JavaScript Array for the wrapped array.
func ArcRotateCameraPointersInputArrayToJSArray(array []*ArcRotateCameraPointersInput) []interface{} {
	var result []interface{}
	for _, v := range array {
		result = append(result, v.JSObject())
	}
	return result
}

// GetClassName calls the GetClassName method on the ArcRotateCameraPointersInput object.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#getclassname
func (a *ArcRotateCameraPointersInput) GetClassName() string {

	retVal := a.p.Call("getClassName")
	return retVal.String()
}

// AngularSensibilityX returns the AngularSensibilityX property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#angularsensibilityx
func (a *ArcRotateCameraPointersInput) AngularSensibilityX() float64 {
	retVal := a.p.Get("angularSensibilityX")
	return retVal.Float()
}

// SetAngularSensibilityX sets the AngularSensibilityX property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#angularsensibilityx
func (a *ArcRotateCameraPointersInput) SetAngularSensibilityX(angularSensibilityX float64) *ArcRotateCameraPointersInput {
	a.p.Set("angularSensibilityX", angularSensibilityX)
	return a
}

// AngularSensibilityY returns the AngularSensibilityY property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#angularsensibilityy
func (a *ArcRotateCameraPointersInput) AngularSensibilityY() float64 {
	retVal := a.p.Get("angularSensibilityY")
	return retVal.Float()
}

// SetAngularSensibilityY sets the AngularSensibilityY property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#angularsensibilityy
func (a *ArcRotateCameraPointersInput) SetAngularSensibilityY(angularSensibilityY float64) *ArcRotateCameraPointersInput {
	a.p.Set("angularSensibilityY", angularSensibilityY)
	return a
}

// Buttons returns the Buttons property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#buttons
func (a *ArcRotateCameraPointersInput) Buttons() float64 {
	retVal := a.p.Get("buttons")
	return retVal.Float()
}

// SetButtons sets the Buttons property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#buttons
func (a *ArcRotateCameraPointersInput) SetButtons(buttons float64) *ArcRotateCameraPointersInput {
	a.p.Set("buttons", buttons)
	return a
}

// Camera returns the Camera property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#camera
func (a *ArcRotateCameraPointersInput) Camera() *ArcRotateCamera {
	retVal := a.p.Get("camera")
	return ArcRotateCameraFromJSObject(retVal, a.ctx)
}

// SetCamera sets the Camera property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#camera
func (a *ArcRotateCameraPointersInput) SetCamera(camera *ArcRotateCamera) *ArcRotateCameraPointersInput {
	a.p.Set("camera", camera.JSObject())
	return a
}

// MultiTouchPanAndZoom returns the MultiTouchPanAndZoom property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#multitouchpanandzoom
func (a *ArcRotateCameraPointersInput) MultiTouchPanAndZoom() bool {
	retVal := a.p.Get("multiTouchPanAndZoom")
	return retVal.Bool()
}

// SetMultiTouchPanAndZoom sets the MultiTouchPanAndZoom property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#multitouchpanandzoom
func (a *ArcRotateCameraPointersInput) SetMultiTouchPanAndZoom(multiTouchPanAndZoom bool) *ArcRotateCameraPointersInput {
	a.p.Set("multiTouchPanAndZoom", multiTouchPanAndZoom)
	return a
}

// MultiTouchPanning returns the MultiTouchPanning property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#multitouchpanning
func (a *ArcRotateCameraPointersInput) MultiTouchPanning() bool {
	retVal := a.p.Get("multiTouchPanning")
	return retVal.Bool()
}

// SetMultiTouchPanning sets the MultiTouchPanning property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#multitouchpanning
func (a *ArcRotateCameraPointersInput) SetMultiTouchPanning(multiTouchPanning bool) *ArcRotateCameraPointersInput {
	a.p.Set("multiTouchPanning", multiTouchPanning)
	return a
}

// PanningSensibility returns the PanningSensibility property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#panningsensibility
func (a *ArcRotateCameraPointersInput) PanningSensibility() float64 {
	retVal := a.p.Get("panningSensibility")
	return retVal.Float()
}

// SetPanningSensibility sets the PanningSensibility property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#panningsensibility
func (a *ArcRotateCameraPointersInput) SetPanningSensibility(panningSensibility float64) *ArcRotateCameraPointersInput {
	a.p.Set("panningSensibility", panningSensibility)
	return a
}

// PinchDeltaPercentage returns the PinchDeltaPercentage property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#pinchdeltapercentage
func (a *ArcRotateCameraPointersInput) PinchDeltaPercentage() float64 {
	retVal := a.p.Get("pinchDeltaPercentage")
	return retVal.Float()
}

// SetPinchDeltaPercentage sets the PinchDeltaPercentage property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#pinchdeltapercentage
func (a *ArcRotateCameraPointersInput) SetPinchDeltaPercentage(pinchDeltaPercentage float64) *ArcRotateCameraPointersInput {
	a.p.Set("pinchDeltaPercentage", pinchDeltaPercentage)
	return a
}

// PinchInwards returns the PinchInwards property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#pinchinwards
func (a *ArcRotateCameraPointersInput) PinchInwards() bool {
	retVal := a.p.Get("pinchInwards")
	return retVal.Bool()
}

// SetPinchInwards sets the PinchInwards property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#pinchinwards
func (a *ArcRotateCameraPointersInput) SetPinchInwards(pinchInwards bool) *ArcRotateCameraPointersInput {
	a.p.Set("pinchInwards", pinchInwards)
	return a
}

// PinchPrecision returns the PinchPrecision property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#pinchprecision
func (a *ArcRotateCameraPointersInput) PinchPrecision() float64 {
	retVal := a.p.Get("pinchPrecision")
	return retVal.Float()
}

// SetPinchPrecision sets the PinchPrecision property of class ArcRotateCameraPointersInput.
//
// https://doc.babylonjs.com/api/classes/babylon.arcrotatecamerapointersinput#pinchprecision
func (a *ArcRotateCameraPointersInput) SetPinchPrecision(pinchPrecision float64) *ArcRotateCameraPointersInput {
	a.p.Set("pinchPrecision", pinchPrecision)
	return a
}
